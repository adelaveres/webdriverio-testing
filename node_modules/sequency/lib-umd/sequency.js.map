{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 50a89cd9b765a14dc197","webpack:///./src/Sequence.ts","webpack:///./src/SequenceIterator.ts","webpack:///./src/map.ts","webpack:///./src/filter.ts","webpack:///./src/flatMap.ts","webpack:///./src/firstOrNull.ts","webpack:///./src/first.ts","webpack:///./src/lastOrNull.ts","webpack:///./src/onEach.ts","webpack:///./src/forEach.ts","webpack:///./src/toArray.ts","webpack:///./src/last.ts","webpack:///./src/all.ts","webpack:///./src/any.ts","webpack:///./src/none.ts","webpack:///./src/count.ts","webpack:///./src/distinct.ts","webpack:///./src/contains.ts","webpack:///./src/indexOf.ts","webpack:///./src/elementAt.ts","webpack:///./src/elementAtOrNull.ts","webpack:///./src/elementAtOrElse.ts","webpack:///./src/indexOfFirst.ts","webpack:///./src/indexOfLast.ts","webpack:///./src/joinToString.ts","webpack:///./src/mapIndexed.ts","webpack:///./src/withIndex.ts","webpack:///./src/filterIndexed.ts","webpack:///./src/forEachIndexed.ts","webpack:///./src/distinctBy.ts","webpack:///./src/drop.ts","webpack:///./src/take.ts","webpack:///./src/single.ts","webpack:///./src/singleOrNull.ts","webpack:///./src/filterNot.ts","webpack:///./src/associate.ts","webpack:///./src/associateBy.ts","webpack:///./src/groupBy.ts","webpack:///./src/reduce.ts","webpack:///./src/reduceIndexed.ts","webpack:///./src/fold.ts","webpack:///./src/foldIndexed.ts","webpack:///./src/flatten.ts","webpack:///./src/sorted.ts","webpack:///./src/sortedBy.ts","webpack:///./src/sortedDescending.ts","webpack:///./src/sortedByDescending.ts","webpack:///./src/sortedWith.ts","webpack:///./src/filterNotNull.ts","webpack:///./src/mapNotNull.ts","webpack:///./src/plus.ts","webpack:///./src/minus.ts","webpack:///./src/zip.ts","webpack:///./src/unzip.ts","webpack:///./src/partition.ts","webpack:///./src/toSet.ts","webpack:///./src/toMap.ts","webpack:///./src/sum.ts","webpack:///./src/sumBy.ts","webpack:///./src/chunk.ts","webpack:///./src/reverse.ts","webpack:///./src/average.ts","webpack:///./src/max.ts","webpack:///./src/maxBy.ts","webpack:///./src/min.ts","webpack:///./src/minBy.ts","webpack:///./src/maxWith.ts","webpack:///./src/minWith.ts"],"names":[],"mappings":"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","file":"sequency.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Sequency\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Sequency\"] = factory();\n\telse\n\t\troot[\"Sequency\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 50a89cd9b765a14dc197","import SequenceIterator, {IterableIterator} from \"./SequenceIterator\";\nimport map from \"./map\";\nimport filter from \"./filter\";\nimport flatMap from \"./flatMap\";\nimport firstOrNull from \"./firstOrNull\";\nimport first from \"./first\";\nimport lastOrNull from \"./lastOrNull\";\nimport onEach from \"./onEach\";\nimport forEach from \"./forEach\";\nimport toArray from \"./toArray\";\nimport last from \"./last\";\nimport all from \"./all\";\nimport any from \"./any\";\nimport none from \"./none\";\nimport count from \"./count\";\nimport distinct from \"./distinct\";\nimport contains from \"./contains\";\nimport indexOf from \"./indexOf\";\nimport elementAt from \"./elementAt\";\nimport elementAtOrNull from \"./elementAtOrNull\";\nimport elementAtOrElse from \"./elementAtOrElse\";\nimport indexOfFirst from \"./indexOfFirst\";\nimport indexOfLast from \"./indexOfLast\";\nimport joinToString from \"./joinToString\";\nimport mapIndexed from \"./mapIndexed\";\nimport withIndex from \"./withIndex\";\nimport filterIndexed from \"./filterIndexed\";\nimport forEachIndexed from \"./forEachIndexed\";\nimport distinctBy from \"./distinctBy\";\nimport drop from \"./drop\";\nimport take from \"./take\";\nimport single from \"./single\";\nimport singleOrNull from \"./singleOrNull\";\nimport filterNot from \"./filterNot\";\nimport associate from \"./associate\";\nimport associateBy from \"./associateBy\";\nimport groupBy from \"./groupBy\";\nimport reduce from \"./reduce\";\nimport reduceIndexed from \"./reduceIndexed\";\nimport fold from \"./fold\";\nimport foldIndexed from \"./foldIndexed\";\nimport flatten from \"./flatten\";\nimport sorted from \"./sorted\";\nimport sortedBy from \"./sortedBy\";\nimport sortedDescending from \"./sortedDescending\";\nimport sortedByDescending from \"./sortedByDescending\";\nimport sortedWith from \"./sortedWith\";\nimport filterNotNull from \"./filterNotNull\";\nimport mapNotNull from \"./mapNotNull\";\nimport plus from \"./plus\";\nimport minus from \"./minus\";\nimport zip from \"./zip\";\nimport unzip from \"./unzip\";\nimport partition from \"./partition\";\nimport toSet from \"./toSet\";\nimport toMap from \"./toMap\";\nimport sum from \"./sum\";\nimport sumBy from \"./sumBy\";\nimport chunk from \"./chunk\";\nimport reverse from \"./reverse\";\nimport average from \"./average\";\nimport max from \"./max\";\nimport maxBy from \"./maxBy\";\nimport min from \"./min\";\nimport minBy from \"./minBy\";\nimport maxWith from \"./maxWith\";\nimport minWith from \"./minWith\";\n\n/**\n * A Sequence accepts an iterator and provides a fluent functional API consisting\n * of various intermediate and terminal operations for processing the iterated data.\n * The operations are evaluated lazily to avoid examining all of the input data\n * when it's not necessary. Sequences can be iterated only once.\n */\nexport default class Sequence<T> {\n    constructor(readonly iterator: SequenceIterator<T>) {}\n\n    map = map;\n    mapNotNull = mapNotNull;\n    mapIndexed = mapIndexed;\n    filter = filter;\n    filterNot = filterNot;\n    filterNotNull = filterNotNull;\n    filterIndexed = filterIndexed;\n    flatMap = flatMap;\n    distinct = distinct;\n    distinctBy = distinctBy;\n    withIndex = withIndex;\n    drop = drop;\n    take = take;\n    onEach = onEach;\n    flatten = flatten;\n    sorted = sorted;\n    sortedDescending = sortedDescending;\n    sortedBy = sortedBy;\n    sortedByDescending = sortedByDescending;\n    sortedWith = sortedWith;\n    reverse = reverse;\n    forEach = forEach;\n    forEachIndexed = forEachIndexed;\n    toArray = toArray;\n    toList = toArray;\n    toSet = toSet;\n    toMap = toMap;\n    first = first;\n    firstOrNull = firstOrNull;\n    last = last;\n    lastOrNull = lastOrNull;\n    find = firstOrNull;\n    findLast = lastOrNull;\n    all = all;\n    any = any;\n    none = none;\n    count = count;\n    contains = contains;\n    indexOf = indexOf;\n    indexOfFirst = indexOfFirst;\n    indexOfLast = indexOfLast;\n    elementAt = elementAt;\n    elementAtOrNull = elementAtOrNull;\n    elementAtOrElse = elementAtOrElse;\n    joinTo = joinToString;\n    joinToString = joinToString;\n    single = single;\n    singleOrNull = singleOrNull;\n    associate = associate;\n    associateBy = associateBy;\n    groupBy = groupBy;\n    reduce = reduce;\n    reduceIndexed = reduceIndexed;\n    fold = fold;\n    foldIndexed = foldIndexed;\n    partition = partition;\n    chunk = chunk;\n    plus = plus;\n    minus = minus;\n    zip = zip;\n    unzip = unzip;\n    sum = sum;\n    sumBy = sumBy;\n    average = average;\n    max = max;\n    maxBy = maxBy;\n    maxWith = maxWith;\n    min = min;\n    minBy = minBy;\n    minWith = minWith;\n}\n\nexport function sequenceOf<T>(...args: Array<T>): Sequence<T> {\n    return asSequence(args);\n}\n\nexport function emptySequence<T>(): Sequence<T> {\n    return asSequence([]);\n}\n\nexport function asSequence<T>(iterable: Iterable<T>): Sequence<T> {\n    return new Sequence<T>(new IterableIterator(iterable));\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Sequence.ts","/**\n * The iterator used by `Sequence` to iterate over the underlying data.\n */\ninterface SequenceIterator<T> {\n    hasNext(): boolean\n    next(): T\n}\nexport default SequenceIterator;\n\nexport class IterableIterator<T> implements SequenceIterator<T> {\n    private readonly iterator: Iterator<T>;\n    private done = false;\n    private nextItem: T | undefined;\n\n    constructor(iterable: Iterable<T>) {\n        this.iterator = iterable[Symbol.iterator]();\n    }\n\n    hasNext(): boolean {\n        this.processNext();\n        return !this.done;\n    }\n\n    next(): T {\n        this.processNext();\n        const result = this.nextItem!;\n        this.nextItem = undefined;\n        return result;\n    }\n\n    private processNext() {\n        if (this.done || this.nextItem !== undefined) {\n            return;\n        }\n        const {done, value} = this.iterator.next();\n        if (done) {\n            this.done = done;\n            this.nextItem = undefined;\n        } else {\n            this.nextItem = value;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/SequenceIterator.ts","import SequenceIterator from \"./SequenceIterator\";\nimport Sequence from \"./Sequence\";\n\nclass MapIterator<S, T> implements SequenceIterator<T> {\n    constructor(\n        private readonly transform: (S) => T,\n        private readonly iterator: SequenceIterator<S>\n    ) {}\n\n    hasNext(): boolean {\n        return this.iterator.hasNext();\n    }\n\n    next(): T {\n        const item = this.iterator.next();\n        return this.transform(item);\n    }\n}\n\n/**\n * Transforms each element into another value by applying the given `transform` function and returns a new sequence.\n *\n * @param {(T) => S} transform\n * @returns {Sequence<S>}\n */\nfunction map<S, T>(this: Sequence<T>, transform: (element: T) => S): Sequence<S> {\n    return new Sequence(new MapIterator(transform, this.iterator));\n}\n\nexport default map;\n\n\n// WEBPACK FOOTER //\n// ./src/map.ts","import SequenceIterator from \"./SequenceIterator\";\nimport Sequence from \"./Sequence\";\n\nclass FilterIterator<T> implements SequenceIterator<T> {\n    private nextItem: T | undefined;\n    private done = false;\n\n    constructor(\n        private readonly predicate: (T) => boolean,\n        private readonly iterator: SequenceIterator<T>\n    ) {}\n\n    hasNext(): boolean {\n        this.processNext();\n        return !this.done;\n    }\n\n    next(): T {\n        this.processNext();\n        const result = this.nextItem!;\n        this.nextItem = undefined;\n        return result;\n    }\n\n    private processNext() {\n        if (this.done || this.nextItem !== undefined) {\n            return;\n        }\n        while (this.iterator.hasNext()) {\n            const item = this.iterator.next();\n            if (this.predicate(item)) {\n                this.nextItem = item;\n                return;\n            }\n        }\n        this.done = true;\n    }\n}\n\n/**\n * Returns a new sequence consisting of all elements that match the given `predicate`.\n *\n * @param {(T) => boolean} predicate\n * @returns {Sequence<T>}\n */\nfunction filter<T>(this: Sequence<T>, predicate: (T) => boolean): Sequence<T> {\n    return new Sequence(new FilterIterator(predicate, this.iterator));\n}\n\nexport default filter;\n\n\n// WEBPACK FOOTER //\n// ./src/filter.ts","import SequenceIterator from \"./SequenceIterator\";\nimport Sequence from \"./Sequence\";\n\nclass FlatMapIterator<S, T> implements SequenceIterator<T> {\n    private current: SequenceIterator<T> | undefined;\n\n    constructor(\n        private readonly transform: (S) => Sequence<T>,\n        private readonly iterator: SequenceIterator<S>\n    ) {}\n\n    next(): T {\n        this.processNext();\n        return this.current!.next();\n    }\n\n    hasNext(): boolean {\n        this.processNext();\n        return this.current != null;\n    }\n\n    private processNext() {\n        if (this.current != null) {\n            if (this.current.hasNext()) {\n                return;\n            } else {\n                this.current = undefined;\n            }\n        }\n        while (this.current == null && this.iterator.hasNext()) {\n            const element = this.iterator.next();\n            const sequence = this.transform(element);\n            if (sequence.iterator.hasNext()) {\n                this.current = sequence.iterator;\n            }\n        }\n    }\n}\n\n/**\n * Transforms each element into a sequence of items and returns a flat single sequence of all those items.\n *\n * @param {(value: S) => Sequence<T>} transform\n * @returns {Sequence<T>}\n */\nfunction flatMap<S, T>(this: Sequence<S>, transform: (value: S) => Sequence<T>): Sequence<T> {\n    return new Sequence(new FlatMapIterator(transform, this.iterator));\n}\n\nexport default flatMap;\n\n\n// WEBPACK FOOTER //\n// ./src/flatMap.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the first element of the sequence or the first element matching `predicate` if present, otherwise returns `null`.\n *\n * @param {(T) => boolean} predicate\n * @returns {T}\n */\nfunction firstOrNull<T>(this: Sequence<T>, predicate?: (T) => boolean): T | null {\n    if (predicate != null) {\n        return this.filter(predicate).firstOrNull();\n    }\n    return this.iterator.hasNext()\n        ? this.iterator.next()\n        : null;\n}\n\nexport default firstOrNull;\n\n\n// WEBPACK FOOTER //\n// ./src/firstOrNull.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the first element of the sequence or the first element matching `predicate` if present, otherwise throws\n * an error.\n *\n * @param {(T) => boolean} predicate\n * @returns {T}\n */\nfunction first<T>(this: Sequence<T>, predicate?: (T) => boolean): T {\n    if (predicate != null) {\n        return this.filter(predicate).first();\n    }\n    if (!this.iterator.hasNext()) {\n        throw new Error(\"No such element\");\n    }\n    return this.iterator.next();\n}\n\nexport default first;\n\n\n// WEBPACK FOOTER //\n// ./src/first.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the last element of the sequence or the last element matching `predicate` if present, otherwise returns `null`.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {T}\n */\nfunction lastOrNull<T>(this: Sequence<T>, predicate?: (value: T) => boolean): T | null {\n    if (predicate != null) {\n        return this.filter(predicate).lastOrNull();\n    }\n    let item: T | null = null;\n    while (this.iterator.hasNext()) {\n        item = this.iterator.next();\n    }\n    return item;\n}\n\nexport default lastOrNull;\n\n\n// WEBPACK FOOTER //\n// ./src/lastOrNull.ts","import Sequence from \"./Sequence\";\n\n/**\n * Performs the given `action` for each element and returns the sequence.\n *\n * @param {(value: T) => void} action\n * @returns {Sequence<T>}\n */\nfunction onEach<T>(this: Sequence<T>, action: (value: T) => void): Sequence<T> {\n    return this.map(it => {\n        action(it);\n        return it;\n    });\n}\n\nexport default onEach;\n\n\n// WEBPACK FOOTER //\n// ./src/onEach.ts","import Sequence from \"./Sequence\";\n\n/**\n * Performs the given `action` (side-effect) for each element of the sequence.\n *\n * @param {(T) => void} action\n */\nfunction forEach<T>(this: Sequence<T>, action: (T) => void) {\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        action(item);\n    }\n}\n\nexport default forEach;\n\n\n// WEBPACK FOOTER //\n// ./src/forEach.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns all elements of the sequence as array. If an `array` is passed\n * the elements are appended to the end of the array.\n *\n * @param {Array<T>} array\n * @returns {Array<T>}\n */\nfunction toArray<T>(this: Sequence<T>, array?: Array<T>): Array<T> {\n    const result: Array<T> = array || [];\n    while (this.iterator.hasNext()) {\n        result.push(this.iterator.next());\n    }\n    return result;\n}\n\nexport default toArray;\n\n\n// WEBPACK FOOTER //\n// ./src/toArray.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the last element of the sequence or the last element matching `predicate` if present, otherwise throws\n * an error.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {T}\n */\nfunction last<T>(this: Sequence<T>, predicate?: (value: T) => boolean): T {\n    if (predicate != null) {\n        return this.filter(predicate).last();\n    }\n    if (!this.iterator.hasNext()) {\n        throw new Error(\"No such element\");\n    }\n    let item: T;\n    while (this.iterator.hasNext()) {\n        item = this.iterator.next();\n    }\n    return item!;\n}\n\nexport default last;\n\n\n// WEBPACK FOOTER //\n// ./src/last.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns `true` if all elements match the given `predicate`.\n *\n * @param {(T) => boolean} predicate\n * @returns {boolean}\n */\nfunction all<T>(this: Sequence<T>, predicate: (T) => boolean): boolean {\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (!predicate(item)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport default all;\n\n\n// WEBPACK FOOTER //\n// ./src/all.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns `true` if at least one element match the given `predicate`.\n *\n * @param {(T) => boolean} predicate\n * @returns {boolean}\n */\nfunction any<T>(this: Sequence<T>, predicate?: (T) => boolean): boolean {\n    if (predicate == null) {\n        return this.iterator.hasNext();\n    }\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (predicate(item)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport default any;\n\n\n// WEBPACK FOOTER //\n// ./src/any.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns `true` if no element match the given `predicate` or if the sequence is empty\n * if no predicate is present.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {boolean}\n */\nfunction none<T>(this: Sequence<T>, predicate?: (value: T) => boolean): boolean {\n    if (predicate == null) {\n        return !this.iterator.hasNext();\n    }\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (predicate(item)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport default none;\n\n\n// WEBPACK FOOTER //\n// ./src/none.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the number of elements of this sequence. If `predicate` is present, returns\n * the number of elements matching the given `predicate`.\n *\n * @param {(T) => boolean} predicate\n * @returns {number}\n */\nfunction count<T>(this: Sequence<T>, predicate?: (T) => boolean): number {\n    let num = 0;\n    if (predicate == null) {\n        while (this.iterator.hasNext()) {\n            this.iterator.next();\n            num++;\n        }\n    } else {\n        while (this.iterator.hasNext()) {\n            const item = this.iterator.next();\n            if (predicate(item)) {\n                num++;\n            }\n        }\n    }\n    return num;\n}\n\nexport default count;\n\n\n// WEBPACK FOOTER //\n// ./src/count.ts","import Sequence from \"./Sequence\";\nimport SequenceIterator from \"./SequenceIterator\";\n\nclass DistinctIterator<T> implements SequenceIterator<T> {\n    private items: Array<T> = [];\n    private nextItem: T | undefined = undefined;\n    private done: boolean = false;\n\n    constructor(private readonly iterator: SequenceIterator<T>) {}\n\n    hasNext(): boolean {\n        this.processNext();\n        return !this.done;\n    }\n\n    next(): T {\n        this.processNext();\n        const result = this.nextItem!;\n        this.nextItem = undefined;\n        return result;\n    }\n\n    processNext() {\n        if (this.nextItem !== undefined || this.done) {\n            return;\n        }\n        while (this.iterator.hasNext()) {\n            const item = this.iterator.next();\n            if (this.items.indexOf(item) < 0) {\n                this.nextItem = item;\n                this.items.push(item);\n                return;\n            }\n        }\n        this.done = true;\n    }\n}\n\n/**\n * Returns a new sequence which discards all duplicate elements.\n *\n * @returns {Sequence<T>}\n */\nfunction distinct<T>(this: Sequence<T>): Sequence<T> {\n    return new Sequence(new DistinctIterator(this.iterator));\n}\n\nexport default distinct;\n\n\n// WEBPACK FOOTER //\n// ./src/distinct.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns `true` if the sequence contains the given `element`.\n *\n * @param {T} element\n * @returns {boolean}\n */\nfunction contains<T>(this: Sequence<T>, element: T): boolean {\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (element === item) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport default contains;\n\n\n// WEBPACK FOOTER //\n// ./src/contains.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the zero-based index of the given `element` or -1 if the sequence does not contain the element.\n *\n * @param {T} element\n * @returns {number}\n */\nfunction indexOf<T>(this: Sequence<T>, element: T): number {\n    let index = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (item === element) {\n            return index;\n        }\n        index++;\n    }\n    return -1;\n}\n\nexport default indexOf;\n\n\n// WEBPACK FOOTER //\n// ./src/indexOf.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the element at position `index` (zero-based) or throws an error if `index`\n * is out of bounds.\n *\n * @param {number} index\n * @returns {T}\n */\nfunction elementAt<T>(this: Sequence<T>, index: number): T {\n    let i = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (i === index) {\n            return item;\n        }\n        i++;\n    }\n    throw new Error(\"Index out of bounds: \" + index);\n}\n\nexport default elementAt;\n\n\n// WEBPACK FOOTER //\n// ./src/elementAt.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the element at position `index` (zero-based) or `null` if `index`\n * is out of bounds.\n *\n * @param {number} index\n * @returns {T}\n */\nfunction elementAtOrNull<T>(this: Sequence<T>, index: number): T | null {\n    let i = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (i === index) {\n            return item;\n        }\n        i++;\n    }\n    return null;\n}\n\nexport default elementAtOrNull;\n\n\n// WEBPACK FOOTER //\n// ./src/elementAtOrNull.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the element at position `index` (zero-based). If `index` is out of bounds returns\n * the result of the given `defaultValue` function.\n *\n * @param {number} index\n * @param defaultValue\n * @returns {T}\n */\nfunction elementAtOrElse<T>(this: Sequence<T>, index: number, defaultValue: (index: number) => T): T {\n    let i = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (i === index) {\n            return item;\n        }\n        i++;\n    }\n    return defaultValue(index);\n}\n\nexport default elementAtOrElse;\n\n\n// WEBPACK FOOTER //\n// ./src/elementAtOrElse.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the zero-based index of the first element matching the given `predicate` or -1 if no element matches\n * the predicate.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {number}\n */\nfunction indexOfFirst<T>(this: Sequence<T>, predicate: (value: T) => boolean): number {\n    let index = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (predicate(item)) {\n            return index;\n        }\n        index++;\n    }\n    return -1;\n}\n\nexport default indexOfFirst;\n\n\n// WEBPACK FOOTER //\n// ./src/indexOfFirst.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the zero-based index of the last element matching the given `predicate` or -1 if no element matches\n * the predicate.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {number}\n */\nfunction indexOfLast<T>(this: Sequence<T>, predicate: (value: T) => boolean): number {\n    let index = 0;\n    let result = -1;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (predicate(item)) {\n            result = index;\n        }\n        index++;\n    }\n    return result;\n}\n\nexport default indexOfLast;\n\n\n// WEBPACK FOOTER //\n// ./src/indexOfLast.ts","import Sequence from \"./Sequence\";\n\nexport interface JoinConfig<T> {\n    value?: string,\n    separator?: string\n    prefix?: string\n    postfix?: string\n    limit?: number\n    truncated?: string\n    transform?: (value: T) => string\n}\n\nconst defaults = {\n    value: \"\",\n    separator: \", \",\n    prefix: \"\",\n    postfix: \"\",\n    limit: -1,\n    truncated: \"...\",\n    transform: undefined\n};\n\n/**\n * Joins all elements of the sequence into a string with the given configuration.\n *\n * @param {JoinConfig<T>} config\n * @returns {string}\n */\nfunction joinToString<T>(this: Sequence<T>, config: JoinConfig<T> = defaults): string {\n    const {\n        value = defaults.value,\n        separator = defaults.separator,\n        prefix = defaults.prefix,\n        postfix = defaults.postfix,\n        limit = defaults.limit,\n        truncated = defaults.truncated,\n        transform = defaults.transform\n    } = config;\n\n    let result = `${value}${prefix}`;\n    let count = 0;\n\n    while (this.iterator.hasNext()) {\n        count++;\n        const item = this.iterator.next();\n        if (count > 1) {\n            result += separator;\n        }\n        if (limit < 0 || count <= limit) {\n            result += transform != null\n                ? transform(item)\n                : String(item);\n        } else {\n            break;\n        }\n    }\n\n    if (limit >= 0 && count > limit) {\n        result += truncated;\n    }\n\n    result += postfix;\n    return result;\n}\n\nexport default joinToString;\n\n\n// WEBPACK FOOTER //\n// ./src/joinToString.ts","import Sequence from \"./Sequence\";\n\n/**\n * Transforms each element into another value by applying the given `transform` function and returns a new sequence.\n *\n * @param {(index: number, value: T) => R} transform\n * @returns {Sequence<R>}\n */\nfunction mapIndexed<T, R>(this: Sequence<T>, transform: (index: number, value: T) => R): Sequence<R> {\n    return this.withIndex()\n        .map(it => transform(it.index, it.value));\n}\n\nexport default mapIndexed;\n\n\n// WEBPACK FOOTER //\n// ./src/mapIndexed.ts","import Sequence from \"./Sequence\";\nimport IndexedValue from \"./IndexedValue\";\nimport SequenceIterator from \"./SequenceIterator\";\n\nclass IndexIterator<T> implements SequenceIterator<IndexedValue<T>> {\n    private index = -1;\n\n    constructor(private readonly iterator: SequenceIterator<T>) {}\n\n    hasNext(): boolean {\n        return this.iterator.hasNext();\n    }\n\n    next(): IndexedValue<T> {\n        const value = this.iterator.next();\n        this.index++;\n        return {index: this.index, value};\n    }\n}\n\n/**\n * Returns a new sequence consisting of indexed values for all original elements.\n *\n * @returns {Sequence<IndexedValue<T>>}\n */\nfunction withIndex<T>(this: Sequence<T>): Sequence<IndexedValue<T>> {\n    return new Sequence(new IndexIterator(this.iterator));\n}\n\nexport default withIndex;\n\n\n// WEBPACK FOOTER //\n// ./src/withIndex.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a new sequence consisting of all elements that match the given `predicate`.\n *\n * @param {(index: number, value: T) => boolean} predicate\n * @returns {Sequence<T>}\n */\nfunction filterIndexed<T>(this: Sequence<T>, predicate: (index: number, value: T) => boolean): Sequence<T> {\n    return this.withIndex()\n        .filter(it => predicate(it.index, it.value))\n        .map(it => it.value);\n}\n\nexport default filterIndexed;\n\n\n// WEBPACK FOOTER //\n// ./src/filterIndexed.ts","import Sequence from \"./Sequence\";\n\n/**\n * Performs the given `action` (side-effect) for each element of the sequence and passes the `index` of the current\n * element (zero-based).\n *\n * @param {(index: number, value: T) => void} action\n */\nfunction forEachIndexed<T>(this: Sequence<T>, action: (index: number, value: T) => void) {\n    this.withIndex()\n        .forEach(it => action(it.index, it.value));\n}\n\nexport default forEachIndexed;\n\n\n// WEBPACK FOOTER //\n// ./src/forEachIndexed.ts","import Sequence from \"./Sequence\";\nimport SequenceIterator from \"./SequenceIterator\";\n\nclass DistinctByIterator<T, K> implements SequenceIterator<T> {\n    private keys: Array<K> = [];\n    private nextItem: T | undefined;\n    private done: boolean = false;\n\n    constructor(\n        private readonly iterator: SequenceIterator<T>,\n        private readonly selector: (item: T) => K\n    ) {}\n\n    hasNext(): boolean {\n        this.processNext();\n        return !this.done;\n    }\n\n    next(): T {\n        this.processNext();\n        const result = this.nextItem!;\n        this.nextItem = undefined;\n        return result;\n    }\n\n    processNext() {\n        if (this.nextItem !== undefined || this.done) {\n            return;\n        }\n        while (this.iterator.hasNext()) {\n            const item = this.iterator.next();\n            const key = this.selector(item);\n            if (this.keys.indexOf(key) < 0) {\n                this.nextItem = item;\n                this.keys.push(key);\n                return;\n            }\n        }\n        this.done = true;\n    }\n}\n\n/**\n * Returns a new sequence which discards all elements with duplicate items determined\n * by the given `selector`.\n *\n * @param {(item: T) => K} selector\n * @returns {Sequence<T>}\n */\nfunction distinctBy<T, K>(this: Sequence<T>, selector: (item: T) => K): Sequence<T> {\n    return new Sequence(new DistinctByIterator(this.iterator, selector));\n}\n\nexport default distinctBy;\n\n\n\n// WEBPACK FOOTER //\n// ./src/distinctBy.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a new sequence which discards the first `n` elements;\n *\n * @param {number} n\n * @returns {Sequence<T>}\n */\nfunction drop<T>(this: Sequence<T>, n: number): Sequence<T> {\n    return this.withIndex()\n        .filterNot(it => it.index < n)\n        .map(it => it.value);\n}\n\nexport default drop;\n\n\n// WEBPACK FOOTER //\n// ./src/drop.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a new sequence consisting of the first `n` elements. All other elements\n * are discarded.\n *\n * @param {number} n\n * @returns {Sequence<T>}\n */\nexport default function take<T>(this: Sequence<T>, n: number): Sequence<T> {\n    return this.withIndex()\n        .filter(it => it.index < n)\n        .map(it => it.value);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/take.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the single element of the sequence or throws error if the sequence has more than\n * one element or none at all. If a `predicate` is passed returns the single element matching\n * the predicate or throws an error if more or less than one element match the predicate.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {T}\n */\nfunction single<T>(this: Sequence<T>, predicate?: (value: T) => boolean): T {\n    if (predicate != null) {\n        return this.filter(predicate).single();\n    }\n    if (!this.iterator.hasNext()) {\n        throw new Error(\"No such element\");\n    }\n    const item = this.iterator.next();\n    if (this.iterator.hasNext()) {\n        throw new Error(\"Expect single element\");\n    }\n    return item;\n}\n\nexport default single;\n\n\n// WEBPACK FOOTER //\n// ./src/single.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the single element of the sequence or `null` if the sequence has more than\n * one element or none at all. If a `predicate` is passed returns the single element matching\n * the predicate or `null` if more or less than one element match the predicate.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {T}\n */\nfunction singleOrNull<T>(this: Sequence<T>, predicate?: (value: T) => boolean): T | null {\n    if (predicate != null) {\n        return this.filter(predicate).singleOrNull();\n    }\n    if (!this.iterator.hasNext()) {\n        return null;\n    }\n    const item = this.iterator.next();\n    if (this.iterator.hasNext()) {\n        return null;\n    }\n    return item;\n}\n\nexport default singleOrNull;\n\n\n// WEBPACK FOOTER //\n// ./src/singleOrNull.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a new sequence consisting of all elements that don't match the given `predicate`.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {Sequence<T>}\n */\nfunction filterNot<T>(this: Sequence<T>, predicate: (value: T) => boolean): Sequence<T> {\n    return this.filter((value: T) => !predicate(value));\n}\n\nexport default filterNot;\n\n\n// WEBPACK FOOTER //\n// ./src/filterNot.ts","import Sequence from \"./Sequence\";\n\n/**\n * Transforms each element into a key-value pair and returns the results as map. In case of\n * duplicate keys the last key-value pair overrides the other.\n *\n * @param {(value: T) => [K , V]} transform\n * @returns {Map<K, V>}\n */\nfunction associate<T, K, V>(this: Sequence<T>, transform: (value: T) => [K, V]): Map<K, V> {\n    const result = new Map<K, V>();\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        const pair = transform(item);\n        result.set(pair[0], pair[1]);\n    }\n    return result;\n}\n\nexport default associate;\n\n\n// WEBPACK FOOTER //\n// ./src/associate.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a map consisting of the elements mapped by the given `keySelector`. The value\n * can optionally be transformed into another value by specifying a `valueTransformer`.\n *\n * @param {(value: T) => K} keySelector\n * @param {(value: T) => V} valueTransform\n * @returns {Map<K, T | V>}\n */\nfunction associateBy<T, K, V>(this: Sequence<T>,\n                              keySelector: (value: T) => K,\n                              valueTransform?: (value: T) => V): Map<K, V | T> {\n    const result = new Map<K, V | T>();\n    const transform = valueTransform != null\n        ? valueTransform\n        : (value: T) => value;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        const key = keySelector(item);\n        const value = transform(item);\n        result.set(key, value);\n    }\n    return result;\n}\n\nexport default associateBy;\n\n\n// WEBPACK FOOTER //\n// ./src/associateBy.ts","import Sequence from \"./Sequence\";\n\n/**\n * Groups all elements of the sequence into a map. Keys are determined by the given `keySelector` function.\n *\n * @param {(value: T) => K} keySelector\n * @returns {Map<K, Array<T>>}\n */\nfunction groupBy<T, K>(this: Sequence<T>, keySelector: (value: T) => K): Map<K, Array<T>> {\n    const result = new Map<K, Array<T>>();\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        const key = keySelector(item);\n        const array = result.get(key);\n        if (array == null) {\n            result.set(key, [item]);\n        } else {\n            array.push(item);\n        }\n    }\n    return result;\n}\n\nexport default groupBy;\n\n\n// WEBPACK FOOTER //\n// ./src/groupBy.ts","import Sequence from \"./Sequence\";\n\n/**\n * Reduces the whole sequence to a single value by invoking `operation` with each element\n * from left to right. For every invocation of the operation `acc` is the result of the last\n * invocation. For the first invocation of the operation `acc` is the first element of the\n * sequence.\n *\n * @param {(acc: S, value: T) => S} operation\n * @returns {S}\n */\nfunction reduce<S, T extends S>(this: Sequence<T>, operation: (acc: S, value: T) => S): S {\n    if (!this.iterator.hasNext()) {\n        throw new Error(\"Cannot reduce empty sequence\");\n    }\n    let result: S = this.iterator.next();\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        result = operation(result, item);\n    }\n    return result;\n}\n\nexport default reduce;\n\n\n// WEBPACK FOOTER //\n// ./src/reduce.ts","import Sequence from \"./Sequence\";\n\n/**\n * Reduces the whole sequence to a single value by invoking `operation` with each element\n * from left to right. For every invocation of the operation `acc` is the result of the last\n * invocation. For the first invocation of the operation `acc` is the first element of the\n * sequence. In addition the `index` of the current element is also passed to the operation.\n *\n * @param {(index: number, acc: S, element: T) => S} operation\n * @returns {S}\n */\nfunction reduceIndexed<S, T extends S>(this: Sequence<T>, operation: (index: number, acc: S, element: T) => S): S {\n    if (!this.iterator.hasNext()) {\n        throw new Error(\"Cannot reduce empty sequence\");\n    }\n    let index = 1;\n    let result: S = this.iterator.next();\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        result = operation(index, result, item);\n        index++;\n    }\n    return result;\n}\n\nexport default reduceIndexed;\n\n\n// WEBPACK FOOTER //\n// ./src/reduceIndexed.ts","import Sequence from \"./Sequence\";\n\n/**\n * Accumulates all elements of the sequence into a single result by applying the given `operation` starting with\n * the `initial` value. The result of the last operation will be passed as accumulated value to the next invocation\n * of the operation until all elements of the sequence are processed.\n *\n * @param {R} initial\n * @param {(acc: R, element: T) => R} operation\n * @returns {R}\n */\nfunction fold<T, R>(this: Sequence<T>, initial: R, operation: (acc: R, element: T) => R): R {\n    let result = initial;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        result = operation(result, item);\n    }\n    return result;\n}\n\nexport default fold;\n\n\n// WEBPACK FOOTER //\n// ./src/fold.ts","import Sequence from \"./Sequence\";\n\n/**\n * Accumulates all elements of the sequence into a single result by applying the given `operation` starting with\n * the `initial` value. The result of the last operation will be passed as accumulated value to the next invocation\n * of the operation as well as the `index` of the current element (zero-based) until all elements of the sequence\n * are processed.\n *\n * @param {R} initial\n * @param {(index: number, acc: R, element: T) => R} operation\n * @returns {R}\n */\nfunction foldIndexed<T, R>(this: Sequence<T>, initial: R, operation: (index: number, acc: R, element: T) => R): R {\n    let result = initial;\n    let index = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        result = operation(index, result, item);\n        index++;\n    }\n    return result;\n}\n\nexport default foldIndexed;\n\n\n// WEBPACK FOOTER //\n// ./src/foldIndexed.ts","import Sequence, {asSequence} from \"./Sequence\";\n\n/**\n * Returns a single flat sequence of all the items from all sequences or iterables.\n *\n * @returns {Sequence<T>}\n */\nfunction flatten<T>(this: Sequence<Sequence<T> | Iterable<T>>): Sequence<T> {\n    return this.flatMap(it => {\n        if (it instanceof Sequence) {\n            return it;\n        } else {\n            return asSequence(it);\n        }\n    });\n}\n\nexport default flatten;\n\n\n// WEBPACK FOOTER //\n// ./src/flatten.ts","import Sequence from \"./Sequence\";\nimport {IterableIterator} from \"./SequenceIterator\";\n\n/**\n * Returns a new sequence with all elements sorted ascending in natural order.\n *\n * @returns {Sequence<T>}\n */\nfunction sorted<T>(this: Sequence<T>): Sequence<T> {\n    const sorted: Array<T> = [];\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        sorted.push(item);\n    }\n    sorted.sort();\n    return new Sequence(new IterableIterator(sorted));\n}\n\nexport default sorted;\n\n\n// WEBPACK FOOTER //\n// ./src/sorted.ts","import Sequence from \"./Sequence\";\nimport {IterableIterator} from \"./SequenceIterator\";\n\n/**\n * Returns a new sequence with all elements sorted ascending by the value specified\n * by the given `selector` function.\n *\n * @param {(value: T) => R} selector\n * @returns {Sequence<T>}\n */\nfunction sortedBy<T, R>(this: Sequence<T>, selector: (value: T) => R): Sequence<T> {\n    const sorted: Array<T> = [];\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        sorted.push(item);\n    }\n    sorted.sort((item1: T, item2: T) => {\n        const key1 = selector(item1);\n        const key2 = selector(item2);\n        if (key1 < key2) {\n            return -1;\n        }\n        if (key1 > key2) {\n            return 1;\n        }\n        return 0;\n    });\n    return new Sequence(new IterableIterator(sorted));\n}\n\nexport default sortedBy;\n\n\n// WEBPACK FOOTER //\n// ./src/sortedBy.ts","import Sequence from \"./Sequence\";\nimport {IterableIterator} from \"./SequenceIterator\";\n\n/**\n * Returns a new sequence with all elements sorted descending in natural order.\n *\n * @returns {Sequence<T>}\n */\nfunction sortedDescending<T>(this: Sequence<T>): Sequence<T> {\n    const sorted: Array<T> = [];\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        sorted.push(item);\n    }\n    sorted.sort((item1: T, item2: T) => {\n        if (item1 < item2) {\n            return 1;\n        }\n        if (item1 > item2) {\n            return -1\n        }\n        return 0;\n    });\n    return new Sequence(new IterableIterator(sorted));\n}\n\nexport default sortedDescending;\n\n\n// WEBPACK FOOTER //\n// ./src/sortedDescending.ts","import Sequence from \"./Sequence\";\nimport {IterableIterator} from \"./SequenceIterator\";\n\n/**\n * Returns a new sequence with all elements sorted descending by the value specified\n * by the given `selector` function.\n *\n * @param {(value: T) => R} selector\n * @returns {Sequence<T>}\n */\nfunction sortedByDescending<T, R>(this: Sequence<T>, selector: (value: T) => R): Sequence<T> {\n    const sorted: Array<T> = [];\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        sorted.push(item);\n    }\n    sorted.sort((item1: T, item2: T) => {\n        const key1 = selector(item1);\n        const key2 = selector(item2);\n        if (key1 < key2) {\n            return 1;\n        }\n        if (key1 > key2) {\n            return -1;\n        }\n        return 0;\n    });\n    return new Sequence(new IterableIterator(sorted));\n}\n\nexport default sortedByDescending;\n\n\n// WEBPACK FOOTER //\n// ./src/sortedByDescending.ts","import Sequence from \"./Sequence\";\nimport {IterableIterator} from \"./SequenceIterator\";\n\n/**\n * Returns a new sequence with all elements sorted be the given `compare` function.\n *\n * @param {(a: T, b: T) => number} compare\n * @returns {Sequence<T>}\n */\nfunction sortedWith<T>(this: Sequence<T>, compare: (a: T, b: T) => number): Sequence<T> {\n    const sorted: Array<T> = [];\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        sorted.push(item);\n    }\n    sorted.sort(compare);\n    return new Sequence(new IterableIterator(sorted));\n}\n\nexport default sortedWith;\n\n\n// WEBPACK FOOTER //\n// ./src/sortedWith.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a new sequence consisting of all non-null elements.\n *\n * @returns {Sequence<T>}\n */\nfunction filterNotNull<T>(this: Sequence<T>): Sequence<T> {\n    return this.filter(it => it !== null);\n}\n\nexport default filterNotNull;\n\n\n// WEBPACK FOOTER //\n// ./src/filterNotNull.ts","import Sequence, {emptySequence, sequenceOf} from \"./Sequence\";\n\n/**\n * Transforms each element into another value by applying the given `transform` function and returns a new sequence.\n * Transformations into `null` values are discarded.\n *\n * @param {(value: T) => R} transform\n * @returns {Sequence<R>}\n */\nfunction mapNotNull<T, R>(this: Sequence<T>, transform: (value: T) => R | null): Sequence<R> {\n    return this.flatMap((value: T) => {\n        const item = transform(value);\n        return item !== null\n            ? sequenceOf(item)\n            : emptySequence();\n    });\n}\n\nexport default mapNotNull;\n\n\n// WEBPACK FOOTER //\n// ./src/mapNotNull.ts","import Sequence from \"./Sequence\";\nimport SequenceIterator, {IterableIterator} from \"./SequenceIterator\";\n\nclass AppendIterator<T> implements SequenceIterator<T> {\n    constructor(\n        private readonly first: SequenceIterator<T>,\n        private readonly second: SequenceIterator<T>\n    ) {}\n\n    hasNext(): boolean {\n        return this.first.hasNext() || this.second.hasNext();\n    }\n\n    next(): T {\n        return this.first.hasNext()\n            ? this.first.next()\n            : this.second.next();\n    }\n\n}\n\n/**\n * Appends the given `data` to the end of the sequence and returns a new sequence. Data can either be a single element,\n * an array of elements or a sequence of elements.\n *\n * @param {Sequence<T> | Array<T> | T} data\n * @returns {Sequence<T>}\n */\nfunction plus<T>(this: Sequence<T>, data: T | Sequence<T> | Array<T>): Sequence<T> {\n    if (data instanceof Sequence) {\n        return new Sequence(new AppendIterator(this.iterator, data.iterator));\n    } else if (data instanceof Array) {\n        return new Sequence(new AppendIterator(this.iterator, new IterableIterator(data)));\n    } else {\n        return new Sequence(new AppendIterator(this.iterator, new IterableIterator([data])));\n    }\n}\n\nexport default plus;\n\n\n// WEBPACK FOOTER //\n// ./src/plus.ts","import Sequence from \"./Sequence\";\n\n/**\n * Removes the given `data` and returns a new sequence. Data can either be a single element, an array of elements\n * or a sequence of elements.\n *\n * @param {Sequence<T> | Array<T> | T} data\n * @returns {Sequence<T>}\n */\nfunction minus<T>(this: Sequence<T>, data: T | Sequence<T> | Array<T>): Sequence<T> {\n    if (data instanceof Sequence) {\n        const array: Array<T> = data.toArray();\n        return this.filter(it => array.indexOf(it) < 0)\n    } else if (data instanceof Array) {\n        return this.filter(it => data.indexOf(it) < 0)\n    } else {\n        return this.filter(it => it !== data);\n    }\n}\n\nexport default minus;\n\n\n// WEBPACK FOOTER //\n// ./src/minus.ts","import Sequence from \"./Sequence\";\nimport SequenceIterator from \"./SequenceIterator\";\n\nclass ZipIterator<T, S> implements SequenceIterator<[T, S]> {\n    constructor(\n        private readonly iterator1: SequenceIterator<T>,\n        private readonly iterator2: SequenceIterator<S>\n    ) {}\n\n    hasNext(): boolean {\n        return this.iterator1.hasNext() && this.iterator2.hasNext();\n    }\n\n    next(): [T, S] {\n        const item1 = this.iterator1.next();\n        const item2 = this.iterator2.next();\n        return [item1, item2];\n    }\n\n}\n\n/**\n * Returns a new sequence consisting of pairs built the elements of both sequences\n * with the same index. The resulting sequence has the length of the shortest input\n * sequence. All other elements are discarded.\n *\n * @param {Sequence<S>} other\n * @returns {Sequence<[T , S]>}\n */\nfunction zip<T, S>(this: Sequence<T>, other: Sequence<S>): Sequence<[T, S]> {\n    return new Sequence(new ZipIterator(this.iterator, other.iterator));\n}\n\nexport default zip;\n\n\n// WEBPACK FOOTER //\n// ./src/zip.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a pair of arrays where the first array contains all first values\n * and the second array all second values from each input pair of the sequence.\n *\n * @returns {[Array<T> , Array<S>]}\n */\nfunction unzip<T, S>(this: Sequence<[T, S]>): [Array<T>, Array<S>] {\n    const array1: Array<T> = [];\n    const array2: Array<S> = [];\n    while (this.iterator.hasNext()) {\n        const [first, second] = this.iterator.next();\n        array1.push(first);\n        array2.push(second);\n    }\n    return [array1, array2];\n}\n\nexport default unzip;\n\n\n// WEBPACK FOOTER //\n// ./src/unzip.ts","import Sequence from \"./Sequence\";\n\n/**\n * Evaluates the given `predicate` for each element of the sequence and assorts each element into one of two lists\n * according to the result of the predicate. Returns both lists as an object.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {{true: Array<T>; false: Array<T>}}\n */\nfunction partition<T>(this: Sequence<T>, predicate: (value: T) => boolean): { 'true': Array<T>, 'false': Array<T> } {\n    const arrayTrue: Array<T> = [];\n    const arrayFalse: Array<T> = [];\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (predicate(item)) {\n            arrayTrue.push(item);\n        } else {\n            arrayFalse.push(item);\n        }\n    }\n    return {'true': arrayTrue, 'false': arrayFalse};\n}\n\nexport default partition;\n\n\n// WEBPACK FOOTER //\n// ./src/partition.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns all elements of the sequence as set. If a `set` is passed\n * the elements are added to this set.\n *\n * @param {Set<T>} set\n * @returns {Set<T>}\n */\nfunction toSet<T>(this: Sequence<T>, set?: Set<T>): Set<T> {\n    const result = set || new Set();\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        result.add(item);\n    }\n    return result;\n}\n\nexport default toSet;\n\n\n// WEBPACK FOOTER //\n// ./src/toSet.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a map consisting of each key-value pair. If a `map` is passed\n * the pairs are set on this map. Duplicate keys override each other.\n *\n * @param {Map<K, V>} map\n * @returns {Map<K, V>}\n */\nfunction toMap<K, V>(this: Sequence<[K, V]>, map?: Map<K, V>): Map<K, V> {\n    const result = map || new Map<K, V>();\n    while (this.iterator.hasNext()) {\n        const pair = this.iterator.next();\n        const key = pair[0];\n        const value = pair[1];\n        result.set(key, value);\n    }\n    return result;\n}\n\nexport default toMap;\n\n\n// WEBPACK FOOTER //\n// ./src/toMap.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the sum of all numbers.\n *\n * @returns {number}\n */\nfunction sum(this: Sequence<number>): number {\n    let result = 0;\n    while (this.iterator.hasNext()) {\n        result += this.iterator.next();\n    }\n    return result;\n}\n\nexport default sum;\n\n\n// WEBPACK FOOTER //\n// ./src/sum.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the sum of all numbers specified by the given `selector` function.\n *\n * @param {(value: T) => number} selector\n * @returns {number}\n */\nfunction sumBy<T>(this: Sequence<T>, selector: (value: T) => number): number {\n    let result = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        result += selector(item);\n    }\n    return result;\n}\n\nexport default sumBy;\n\n\n// WEBPACK FOOTER //\n// ./src/sumBy.ts","import Sequence from \"./Sequence\";\n\n/**\n * Splits the elements of the sequence into arrays which length is determined by\n * the given `chunkSize` and returns all chunks as array.\n *\n * @param {number} chunkSize\n * @returns {Array<Array<T>>}\n */\nfunction chunk<T>(this: Sequence<T>, chunkSize: number): Array<Array<T>> {\n    if (chunkSize < 1) {\n        throw new Error(\"chunkSize must be > 0 but is \" + chunkSize);\n    }\n    const result: Array<Array<T>> = [];\n    let index = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        const chunk = Math.floor(index / chunkSize);\n        if (result[chunk] == null) {\n            result[chunk] = [item];\n        } else {\n            result[chunk].push(item);\n        }\n        index++;\n    }\n    return result;\n}\n\nexport default chunk;\n\n\n// WEBPACK FOOTER //\n// ./src/chunk.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a new sequence with all elements of the sequence in reverse order.\n *\n * @returns {Sequence<T>}\n */\nfunction reverse<T>(this: Sequence<T>): Sequence<T> {\n    return this.withIndex()\n        .sortedByDescending(it => it.index)\n        .map(it => it.value);\n}\n\nexport default reverse;\n\n\n// WEBPACK FOOTER //\n// ./src/reverse.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the average of all numbers of the sequence or `NaN` if the sequence is empty.\n *\n * @returns {number}\n */\nfunction average(this: Sequence<number>): number {\n    let sum = 0;\n    let count = 0;\n    while (this.iterator.hasNext()) {\n        sum += this.iterator.next();\n        count++;\n    }\n    return count === 0\n        ? Number.NaN\n        : sum / count;\n}\n\nexport default average;\n\n\n// WEBPACK FOOTER //\n// ./src/average.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the maximum element of the sequence or `null` if sequence is empty.\n *\n * @returns {T}\n */\nfunction max<T>(this: Sequence<T>): T | null {\n    let max: T | null = null;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (max == null || item > max) {\n            max = item;\n        }\n    }\n    return max;\n}\n\nexport default max;\n\n\n// WEBPACK FOOTER //\n// ./src/max.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the maximum element by comparing the results of the given `selector` function\n * for each element of the sequence or `null` if the sequence is empty.\n *\n * @param {(value: T) => R} selector\n * @returns {T}\n */\nfunction maxBy<T, R>(this: Sequence<T>, selector: (value: T) => R): T | null {\n    let max: T | null = null;\n    let maxSelected: R | null = null;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        const value = selector(item);\n        if (maxSelected == null || value > maxSelected) {\n            maxSelected = value;\n            max = item;\n        }\n    }\n    return max;\n}\n\nexport default maxBy;\n\n\n// WEBPACK FOOTER //\n// ./src/maxBy.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the minimum element of the sequence or `null` if sequence is empty.\n *\n * @returns {T}\n */\nfunction min<T>(this: Sequence<T>): T | null {\n    let min: T | null = null;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (min == null || item < min) {\n            min = item;\n        }\n    }\n    return min;\n}\n\nexport default min;\n\n\n// WEBPACK FOOTER //\n// ./src/min.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the minimum element by comparing the results of the given `selector` function\n * for each element of the sequence or `null` if the sequence is empty.\n *\n * @param {(value: T) => R} selector\n * @returns {T}\n */\nfunction minBy<T, R>(this: Sequence<T>, selector: (value: T) => R): T | null {\n    let min: T | null = null;\n    let minSelected: R | null = null;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        const value = selector(item);\n        if (minSelected == null || value < minSelected) {\n            minSelected = value;\n            min = item;\n        }\n    }\n    return min;\n}\n\nexport default minBy;\n\n\n// WEBPACK FOOTER //\n// ./src/minBy.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the maximum element of the sequence by evaluating the given `compare`\n * function or `null` if sequence is empty.\n *\n * @returns {T}\n */\nfunction maxWith<T>(this: Sequence<T>, compare: (a: T, b: T) => number): T | null {\n    let max: T | null = null;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (max == null || compare(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n\nexport default maxWith;\n\n\n// WEBPACK FOOTER //\n// ./src/maxWith.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the minimum element of the sequence by evaluating the given `compare`\n * function or `null` if sequence is empty.\n *\n * @returns {T}\n */\nfunction minWith<T>(this: Sequence<T>, compare: (a: T, b: T) => number): T | null {\n    let min: T | null = null;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (min == null || compare(item, min) < 0) {\n            min = item;\n        }\n    }\n    return min;\n}\n\nexport default minWith;\n\n\n// WEBPACK FOOTER //\n// ./src/minWith.ts"],"sourceRoot":""}