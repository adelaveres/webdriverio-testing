{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///sequency.min.js","webpack:///webpack/bootstrap 50a89cd9b765a14dc197","webpack:///./src/Sequence.ts","webpack:///./src/SequenceIterator.ts","webpack:///./src/map.ts","webpack:///./src/filter.ts","webpack:///./src/flatMap.ts","webpack:///./src/firstOrNull.ts","webpack:///./src/first.ts","webpack:///./src/lastOrNull.ts","webpack:///./src/onEach.ts","webpack:///./src/forEach.ts","webpack:///./src/toArray.ts","webpack:///./src/last.ts","webpack:///./src/all.ts","webpack:///./src/any.ts","webpack:///./src/none.ts","webpack:///./src/count.ts","webpack:///./src/distinct.ts","webpack:///./src/contains.ts","webpack:///./src/indexOf.ts","webpack:///./src/elementAt.ts","webpack:///./src/elementAtOrNull.ts","webpack:///./src/elementAtOrElse.ts","webpack:///./src/indexOfFirst.ts","webpack:///./src/indexOfLast.ts","webpack:///./src/joinToString.ts","webpack:///./src/mapIndexed.ts","webpack:///./src/withIndex.ts","webpack:///./src/filterIndexed.ts","webpack:///./src/forEachIndexed.ts","webpack:///./src/distinctBy.ts","webpack:///./src/drop.ts","webpack:///./src/take.ts","webpack:///./src/single.ts","webpack:///./src/singleOrNull.ts","webpack:///./src/filterNot.ts","webpack:///./src/associate.ts","webpack:///./src/associateBy.ts","webpack:///./src/groupBy.ts","webpack:///./src/reduce.ts","webpack:///./src/reduceIndexed.ts","webpack:///./src/fold.ts","webpack:///./src/foldIndexed.ts","webpack:///./src/flatten.ts","webpack:///./src/sorted.ts","webpack:///./src/sortedBy.ts","webpack:///./src/sortedDescending.ts","webpack:///./src/sortedByDescending.ts","webpack:///./src/sortedWith.ts","webpack:///./src/filterNotNull.ts","webpack:///./src/mapNotNull.ts","webpack:///./src/plus.ts","webpack:///./src/minus.ts","webpack:///./src/zip.ts","webpack:///./src/unzip.ts","webpack:///./src/partition.ts","webpack:///./src/toSet.ts","webpack:///./src/toMap.ts","webpack:///./src/sum.ts","webpack:///./src/sumBy.ts","webpack:///./src/chunk.ts","webpack:///./src/reverse.ts","webpack:///./src/average.ts","webpack:///./src/max.ts","webpack:///./src/maxBy.ts","webpack:///./src/min.ts","webpack:///./src/minBy.ts","webpack:///./src/maxWith.ts","webpack:///./src/minWith.ts"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","sequenceOf","args","_i","arguments","length","asSequence","emptySequence","iterable","Sequence","SequenceIterator_1","IterableIterator","value","map_1","filter_1","flatMap_1","firstOrNull_1","first_1","lastOrNull_1","onEach_1","forEach_1","toArray_1","last_1","all_1","any_1","none_1","count_1","distinct_1","contains_1","indexOf_1","elementAt_1","elementAtOrNull_1","elementAtOrElse_1","indexOfFirst_1","indexOfLast_1","joinToString_1","mapIndexed_1","withIndex_1","filterIndexed_1","forEachIndexed_1","distinctBy_1","drop_1","take_1","single_1","singleOrNull_1","filterNot_1","associate_1","associateBy_1","groupBy_1","reduce_1","reduceIndexed_1","fold_1","foldIndexed_1","flatten_1","sorted_1","sortedBy_1","sortedDescending_1","sortedByDescending_1","sortedWith_1","filterNotNull_1","mapNotNull_1","plus_1","minus_1","zip_1","unzip_1","partition_1","toSet_1","toMap_1","sum_1","sumBy_1","chunk_1","reverse_1","average_1","max_1","maxBy_1","min_1","minBy_1","maxWith_1","minWith_1","iterator","map","default","mapNotNull","mapIndexed","filter","filterNot","filterNotNull","filterIndexed","flatMap","distinct","distinctBy","withIndex","drop","take","onEach","flatten","sorted","sortedDescending","sortedBy","sortedByDescending","sortedWith","reverse","forEach","forEachIndexed","toArray","toList","toSet","toMap","first","firstOrNull","last","lastOrNull","find","findLast","all","any","none","count","contains","indexOf","indexOfFirst","indexOfLast","elementAt","elementAtOrNull","elementAtOrElse","joinTo","joinToString","single","singleOrNull","associate","associateBy","groupBy","reduce","reduceIndexed","fold","foldIndexed","partition","chunk","plus","minus","zip","unzip","sum","sumBy","average","max","maxBy","maxWith","min","minBy","minWith","done","Symbol","hasNext","processNext","next","result","nextItem","undefined","_a","transform","Sequence_1","MapIterator","item","predicate","FilterIterator","FlatMapIterator","current","element","sequence","Error","action","it","array","push","num","DistinctIterator","items","index","defaultValue","config","defaults","_b","separator","_c","prefix","_d","postfix","_e","limit","_f","truncated","_g","String","IndexIterator","selector","DistinctByIterator","keys","key","Map","pair","set","keySelector","valueTransform","operation","initial","sort","item1","item2","key1","key2","compare","data","AppendIterator","Array","second","array_1","other","ZipIterator","iterator1","iterator2","array1","array2","arrayTrue","arrayFalse","true","false","Set","add","chunkSize","Math","floor","Number","NaN","maxSelected","minSelected"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,cAAAH,GACA,gBAAAC,SACAA,QAAA,SAAAD,IAEAD,EAAA,SAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAV,WAUA,OANAK,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,GAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAtB,GACA,GAAAe,GAAAf,KAAAuB,WACA,WAA2B,MAAAvB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAK,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,KDgBM,SAAU7B,EAAQD,EAASM,GEwEjC,QAAAyB,KFmFI,IEnF0B,GAAAC,MAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,EAC1B,OAAOG,GAAWJ,GAGtB,QAAAK,KACI,MAAOD,OAGX,QAAAA,GAA8BE,GAC1B,MAAO,IAAIC,IAAY,GAAIC,GAAAC,iBAAiBH,IF/EhDpB,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,GE/EtD,IAAAF,GAAAlC,EAAA,GACAqC,EAAArC,EAAA,GACAsC,EAAAtC,EAAA,GACAuC,EAAAvC,EAAA,GACAwC,EAAAxC,EAAA,GACAyC,EAAAzC,EAAA,GACA0C,EAAA1C,EAAA,GACA2C,EAAA3C,EAAA,GACA4C,EAAA5C,EAAA,GACA6C,EAAA7C,EAAA,IACA8C,EAAA9C,EAAA,IACA+C,EAAA/C,EAAA,IACAgD,EAAAhD,EAAA,IACAiD,EAAAjD,EAAA,IACAkD,EAAAlD,EAAA,IACAmD,EAAAnD,EAAA,IACAoD,EAAApD,EAAA,IACAqD,EAAArD,EAAA,IACAsD,EAAAtD,EAAA,IACAuD,EAAAvD,EAAA,IACAwD,EAAAxD,EAAA,IACAyD,EAAAzD,EAAA,IACA0D,EAAA1D,EAAA,IACA2D,EAAA3D,EAAA,IACA4D,EAAA5D,EAAA,IACA6D,EAAA7D,EAAA,IACA8D,EAAA9D,EAAA,IACA+D,EAAA/D,EAAA,IACAgE,EAAAhE,EAAA,IACAiE,EAAAjE,EAAA,IACAkE,EAAAlE,EAAA,IACAmE,EAAAnE,EAAA,IACAoE,EAAApE,EAAA,IACAqE,EAAArE,EAAA,IACAsE,EAAAtE,EAAA,IACAuE,EAAAvE,EAAA,IACAwE,EAAAxE,EAAA,IACAyE,EAAAzE,EAAA,IACA0E,EAAA1E,EAAA,IACA2E,EAAA3E,EAAA,IACA4E,EAAA5E,EAAA,IACA6E,EAAA7E,EAAA,IACA8E,EAAA9E,EAAA,IACA+E,EAAA/E,EAAA,IACAgF,EAAAhF,EAAA,IACAiF,EAAAjF,EAAA,IACAkF,EAAAlF,EAAA,IACAmF,EAAAnF,EAAA,IACAoF,GAAApF,EAAA,IACAqF,GAAArF,EAAA,IACAsF,GAAAtF,EAAA,IACAuF,GAAAvF,EAAA,IACAwF,GAAAxF,EAAA,IACAyF,GAAAzF,EAAA,IACA0F,GAAA1F,EAAA,IACA2F,GAAA3F,EAAA,IACA4F,GAAA5F,EAAA,IACA6F,GAAA7F,EAAA,IACA8F,GAAA9F,EAAA,IACA+F,GAAA/F,EAAA,IACAgG,GAAAhG,EAAA,IACAiG,GAAAjG,EAAA,IACAkG,GAAAlG,EAAA,IACAmG,GAAAnG,EAAA,IACAoG,GAAApG,EAAA,IACAqG,GAAArG,EAAA,IACAsG,GAAAtG,EAAA,IAQAiC,GAAA,WACI,QAAAA,GAAqBsE,GAAAzG,KAAAyG,WAErBzG,KAAA0G,IAAMnE,EAAAoE,QACN3G,KAAA4G,WAAatB,GAAAqB,QACb3G,KAAA6G,WAAa/C,EAAA6C,QACb3G,KAAA8G,OAAStE,EAAAmE,QACT3G,KAAA+G,UAAYxC,EAAAoC,QACZ3G,KAAAgH,cAAgB3B,EAAAsB,QAChB3G,KAAAiH,cAAgBjD,EAAA2C,QAChB3G,KAAAkH,QAAUzE,EAAAkE,QACV3G,KAAAmH,SAAW9D,EAAAsD,QACX3G,KAAAoH,WAAalD,EAAAyC,QACb3G,KAAAqH,UAAYtD,EAAA4C,QACZ3G,KAAAsH,KAAOnD,EAAAwC,QACP3G,KAAAuH,KAAOnD,EAAAuC,QACP3G,KAAAwH,OAAS3E,EAAA8D,QACT3G,KAAAyH,QAAU1C,EAAA4B,QACV3G,KAAA0H,OAAS1C,EAAA2B,QACT3G,KAAA2H,iBAAmBzC,EAAAyB,QACnB3G,KAAA4H,SAAW3C,EAAA0B,QACX3G,KAAA6H,mBAAqB1C,EAAAwB,QACrB3G,KAAA8H,WAAa1C,EAAAuB,QACb3G,KAAA+H,QAAU9B,GAAAU,QACV3G,KAAAgI,QAAUlF,EAAA6D,QACV3G,KAAAiI,eAAiBhE,EAAA0C,QACjB3G,KAAAkI,QAAUnF,EAAA4D,QACV3G,KAAAmI,OAASpF,EAAA4D,QACT3G,KAAAoI,MAAQxC,GAAAe,QACR3G,KAAAqI,MAAQxC,GAAAc,QACR3G,KAAAsI,MAAQ3F,EAAAgE,QACR3G,KAAAuI,YAAc7F,EAAAiE,QACd3G,KAAAwI,KAAOxF,EAAA2D,QACP3G,KAAAyI,WAAa7F,EAAA+D,QACb3G,KAAA0I,KAAOhG,EAAAiE,QACP3G,KAAA2I,SAAW/F,EAAA+D,QACX3G,KAAA4I,IAAM3F,EAAA0D,QACN3G,KAAA6I,IAAM3F,EAAAyD,QACN3G,KAAA8I,KAAO3F,EAAAwD,QACP3G,KAAA+I,MAAQ3F,EAAAuD,QACR3G,KAAAgJ,SAAW1F,EAAAqD,QACX3G,KAAAiJ,QAAU1F,EAAAoD,QACV3G,KAAAkJ,aAAevF,EAAAgD,QACf3G,KAAAmJ,YAAcvF,EAAA+C,QACd3G,KAAAoJ,UAAY5F,EAAAmD,QACZ3G,KAAAqJ,gBAAkB5F,EAAAkD,QAClB3G,KAAAsJ,gBAAkB5F,EAAAiD,QAClB3G,KAAAuJ,OAAS1F,EAAA8C,QACT3G,KAAAwJ,aAAe3F,EAAA8C,QACf3G,KAAAyJ,OAASpF,EAAAsC,QACT3G,KAAA0J,aAAepF,EAAAqC,QACf3G,KAAA2J,UAAYnF,EAAAmC,QACZ3G,KAAA4J,YAAcnF,EAAAkC,QACd3G,KAAA6J,QAAUnF,EAAAiC,QACV3G,KAAA8J,OAASnF,EAAAgC,QACT3G,KAAA+J,cAAgBnF,EAAA+B,QAChB3G,KAAAgK,KAAOnF,EAAA8B,QACP3G,KAAAiK,YAAcnF,EAAA6B,QACd3G,KAAAkK,UAAYvE,GAAAgB,QACZ3G,KAAAmK,MAAQnE,GAAAW,QACR3G,KAAAoK,KAAO7E,GAAAoB,QACP3G,KAAAqK,MAAQ7E,GAAAmB,QACR3G,KAAAsK,IAAM7E,GAAAkB,QACN3G,KAAAuK,MAAQ7E,GAAAiB,QACR3G,KAAAwK,IAAM1E,GAAAa,QACN3G,KAAAyK,MAAQ1E,GAAAY,QACR3G,KAAA0K,QAAUxE,GAAAS,QACV3G,KAAA2K,IAAMxE,GAAAQ,QACN3G,KAAA4K,MAAQxE,GAAAO,QACR3G,KAAA6K,QAAUtE,GAAAI,QACV3G,KAAA8K,IAAMzE,GAAAM,QACN3G,KAAA+K,MAAQzE,GAAAK,QACR3G,KAAAgL,QAAUxE,GAAAG,QACd,MAAAxE,KFkFAvC,GAAQ+G,QAAUxE,GEhFlBvC,EAAA+B,aAIA/B,EAAAqC,gBAIArC,EAAAoC,cF6FM,SAAUnC,EAAQD,GAExBkB,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,GGnPtD,IAAAD,GAAA,WAKI,QAAAA,GAAYH,GAHJlC,KAAAiL,MAAO,EAIXjL,KAAKyG,SAAWvE,EAASgJ,OAAOzE,YA2BxC,MAxBIpE,GAAAd,UAAA4J,QAAA,WAEI,MADAnL,MAAKoL,eACGpL,KAAKiL,MAGjB5I,EAAAd,UAAA8J,KAAA,WACIrL,KAAKoL,aACL,IAAME,GAAStL,KAAKuL,QAEpB,OADAvL,MAAKuL,aAAWC,GACTF,GAGHjJ,EAAAd,UAAA6J,YAAR,WACI,IAAIpL,KAAKiL,UAA0BO,KAAlBxL,KAAKuL,SAAtB,CAGM,GAAAE,GAAAzL,KAAAyG,SAAA4E,OAACJ,EAAAQ,EAAAR,KAAM3I,EAAAmJ,EAAAnJ,KACT2I,IACAjL,KAAKiL,KAAOA,EACZjL,KAAKuL,aAAWC,IAEhBxL,KAAKuL,SAAWjJ,IAG5BD,IAjCazC,GAAAyC,oBHuRP,SAAUxC,EAAQD,EAASM,GIvQjC,QAAAwG,GAAsCgF,GAClC,MAAO,IAAIC,GAAAhF,QAAS,GAAIiF,GAAYF,EAAW1L,KAAKyG,WJwQxD3F,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,GIjStD,IAAAqJ,GAAAzL,EAAA,GAEA0L,EAAA,WACI,QAAAA,GACqBF,EACAjF,GADAzG,KAAA0L,YACA1L,KAAAyG,WAWzB,MARImF,GAAArK,UAAA4J,QAAA,WACI,MAAOnL,MAAKyG,SAAS0E,WAGzBS,EAAArK,UAAA8J,KAAA,WACI,GAAMQ,GAAO7L,KAAKyG,SAAS4E,MAC3B,OAAOrL,MAAK0L,UAAUG,IAE9BD,IAYAhM,GAAA+G,QAAeD,GJmST,SAAU7G,EAAQD,EAASM,GKnRjC,QAAA4G,GAAsCgF,GAClC,MAAO,IAAIH,GAAAhF,QAAS,GAAIoF,GAAeD,EAAW9L,KAAKyG,WLoR3D3F,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,GKjUtD,IAAAqJ,GAAAzL,EAAA,GAEA6L,EAAA,WAII,QAAAA,GACqBD,EACArF,GADAzG,KAAA8L,YACA9L,KAAAyG,WAJbzG,KAAAiL,MAAO,EAgCnB,MAzBIc,GAAAxK,UAAA4J,QAAA,WAEI,MADAnL,MAAKoL,eACGpL,KAAKiL,MAGjBc,EAAAxK,UAAA8J,KAAA,WACIrL,KAAKoL,aACL,IAAME,GAAStL,KAAKuL,QAEpB,OADAvL,MAAKuL,aAAWC,GACTF,GAGHS,EAAAxK,UAAA6J,YAAR,WACI,IAAIpL,KAAKiL,UAA0BO,KAAlBxL,KAAKuL,SAAtB,CAGA,KAAOvL,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,MAC3B,IAAIrL,KAAK8L,UAAUD,GAEf,YADA7L,KAAKuL,SAAWM,GAIxB7L,KAAKiL,MAAO,IAEpBc,IAYAnM,GAAA+G,QAAeG,GLgUT,SAAUjH,EAAQD,EAASM,GMpUjC,QAAAgH,GAA0CwE,GACtC,MAAO,IAAIC,GAAAhF,QAAS,GAAIqF,GAAgBN,EAAW1L,KAAKyG,WNqU5D3F,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,GMlXtD,IAAAqJ,GAAAzL,EAAA,GAEA8L,EAAA,WAGI,QAAAA,GACqBN,EACAjF,GADAzG,KAAA0L,YACA1L,KAAAyG,WA6BzB,MA1BIuF,GAAAzK,UAAA8J,KAAA,WAEI,MADArL,MAAKoL,cACEpL,KAAKiM,QAASZ,QAGzBW,EAAAzK,UAAA4J,QAAA,WAEI,MADAnL,MAAKoL,cACkB,MAAhBpL,KAAKiM,SAGRD,EAAAzK,UAAA6J,YAAR,WACI,GAAoB,MAAhBpL,KAAKiM,QAAiB,CACtB,GAAIjM,KAAKiM,QAAQd,UACb,MAEAnL,MAAKiM,YAAUT,GAGvB,KAAuB,MAAhBxL,KAAKiM,SAAmBjM,KAAKyG,SAAS0E,WAAW,CACpD,GAAMe,GAAUlM,KAAKyG,SAAS4E,OACxBc,EAAWnM,KAAK0L,UAAUQ,EAC5BC,GAAS1F,SAAS0E,YAClBnL,KAAKiM,QAAUE,EAAS1F,YAIxCuF,IAYApM,GAAA+G,QAAeO,GNkXT,SAAUrH,EAAQD,GO3ZxB,QAAA2I,GAA2CuD,GACvC,MAAiB,OAAbA,EACO9L,KAAK8G,OAAOgF,GAAWvD,cAE3BvI,KAAKyG,SAAS0E,UACfnL,KAAKyG,SAAS4E,OACd,KPuZVvK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IOpZtD1C,EAAA+G,QAAe4B,GPwaT,SAAU1I,EAAQD,GQhbxB,QAAA0I,GAAqCwD,GACjC,GAAiB,MAAbA,EACA,MAAO9L,MAAK8G,OAAOgF,GAAWxD,OAElC,KAAKtI,KAAKyG,SAAS0E,UACf,KAAM,IAAIiB,OAAM,kBAEpB,OAAOpM,MAAKyG,SAAS4E,OR2azBvK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IQxatD1C,EAAA+G,QAAe2B,GR8bT,SAAUzI,EAAQD,GSzcxB,QAAA6I,GAA0CqD,GACtC,GAAiB,MAAbA,EACA,MAAO9L,MAAK8G,OAAOgF,GAAWrD,YAGlC,KADA,GAAIoD,GAAiB,KACd7L,KAAKyG,SAAS0E,WACjBU,EAAO7L,KAAKyG,SAAS4E,MAEzB,OAAOQ,GTmcX/K,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IShctD1C,EAAA+G,QAAe8B,GTsdT,SAAU5I,EAAQD,GUjexB,QAAA4H,GAAsC6E,GAClC,MAAOrM,MAAK0G,IAAI,SAAA4F,GAEZ,MADAD,GAAOC,GACAA,IVgefxL,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IU5dtD1C,EAAA+G,QAAea,GV8eT,SAAU3H,EAAQD,GWtfxB,QAAAoI,GAAuCqE,GACnC,KAAOrM,KAAKyG,SAAS0E,WAAW,CAE5BkB,EADarM,KAAKyG,SAAS4E,SXsfnCvK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IWjftD1C,EAAA+G,QAAeqB,GXkgBT,SAAUnI,EAAQD,GYvgBxB,QAAAsI,GAAuCqE,GAEnC,IADA,GAAMjB,GAAmBiB,MAClBvM,KAAKyG,SAAS0E,WACjBG,EAAOkB,KAAKxM,KAAKyG,SAAS4E,OAE9B,OAAOC,GZogBXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IYjgBtD1C,EAAA+G,QAAeuB,GZqhBT,SAAUrI,EAAQD,Ga7hBxB,QAAA4I,GAAoCsD,GAChC,GAAiB,MAAbA,EACA,MAAO9L,MAAK8G,OAAOgF,GAAWtD,MAElC,KAAKxI,KAAKyG,SAAS0E,UACf,KAAM,IAAIiB,OAAM,kBAGpB,KADA,GAAIP,GACG7L,KAAKyG,SAAS0E,WACjBU,EAAO7L,KAAKyG,SAAS4E,MAEzB,OAAOQ,GbohBX/K,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IajhBtD1C,EAAA+G,QAAe6B,Gb2iBT,SAAU3I,EAAQD,Gc1jBxB,QAAAgJ,GAAmCkD,GAC/B,KAAO9L,KAAKyG,SAAS0E,WAAW,CAE5B,IAAKW,EADQ9L,KAAKyG,SAAS4E,QAEvB,OAAO,EAGf,OAAO,EdqjBXvK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IcljBtD1C,EAAA+G,QAAeiC,GdukBT,SAAU/I,EAAQD,GejlBxB,QAAAiJ,GAAmCiD,GAC/B,GAAiB,MAAbA,EACA,MAAO9L,MAAKyG,SAAS0E,SAEzB,MAAOnL,KAAKyG,SAAS0E,WAAW,CAE5B,GAAIW,EADS9L,KAAKyG,SAAS4E,QAEvB,OAAO,EAGf,OAAO,EfykBXvK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IetkBtD1C,EAAA+G,QAAekC,Gf8lBT,SAAUhJ,EAAQD,GgB1mBxB,QAAAkJ,GAAoCgD,GAChC,GAAiB,MAAbA,EACA,OAAQ9L,KAAKyG,SAAS0E,SAE1B,MAAOnL,KAAKyG,SAAS0E,WAAW,CAE5B,GAAIW,EADS9L,KAAKyG,SAAS4E,QAEvB,OAAO,EAGf,OAAO,EhBkmBXvK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IgB/lBtD1C,EAAA+G,QAAemC,GhBwnBT,SAAUjJ,EAAQD,GiBroBxB,QAAAmJ,GAAqC+C,GACjC,GAAIW,GAAM,CACV,IAAiB,MAAbX,EACA,KAAO9L,KAAKyG,SAAS0E,WACjBnL,KAAKyG,SAAS4E,OACdoB,QAGJ,MAAOzM,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,MACvBS,GAAUD,IACVY,IAIZ,MAAOA,GjBwnBX3L,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IiBrnBtD1C,EAAA+G,QAAeoC,GjBopBT,SAAUlJ,EAAQD,EAASM,GkBpoBjC,QAAAiH,KACI,MAAO,IAAIwE,GAAAhF,QAAS,GAAI+F,GAAiB1M,KAAKyG,WlBqoBlD3F,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,GkBjrBtD,IAAAqJ,GAAAzL,EAAA,GAGAwM,EAAA,WAKI,QAAAA,GAA6BjG,GAAAzG,KAAAyG,WAJrBzG,KAAA2M,SACA3M,KAAAuL,aAA0BC,GAC1BxL,KAAAiL,MAAgB,EA8B5B,MA1BIyB,GAAAnL,UAAA4J,QAAA,WAEI,MADAnL,MAAKoL,eACGpL,KAAKiL,MAGjByB,EAAAnL,UAAA8J,KAAA,WACIrL,KAAKoL,aACL,IAAME,GAAStL,KAAKuL,QAEpB,OADAvL,MAAKuL,aAAWC,GACTF,GAGXoB,EAAAnL,UAAA6J,YAAA,WACI,OAAsBI,KAAlBxL,KAAKuL,WAA0BvL,KAAKiL,KAAxC,CAGA,KAAOjL,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,MAC3B,IAAIrL,KAAK2M,MAAM1D,QAAQ4C,GAAQ,EAG3B,MAFA7L,MAAKuL,SAAWM,MAChB7L,MAAK2M,MAAMH,KAAKX,GAIxB7L,KAAKiL,MAAO,IAEpByB,IAWA9M,GAAA+G,QAAeQ,GlBkrBT,SAAUtH,EAAQD,GmBztBxB,QAAAoJ,GAAwCkD,GACpC,KAAOlM,KAAKyG,SAAS0E,WAAW,CAE5B,GAAIe,IADSlM,KAAKyG,SAAS4E,OAEvB,OAAO,EAGf,OAAO,EnBotBXvK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,ImBjtBtD1C,EAAA+G,QAAeqC,GnBsuBT,SAAUnJ,EAAQD,GoBhvBxB,QAAAqJ,GAAuCiD,GAEnC,IADA,GAAIU,GAAQ,EACL5M,KAAKyG,SAAS0E,WAAW,CAE5B,GADanL,KAAKyG,SAAS4E,SACda,EACT,MAAOU,EAEXA,KAEJ,OAAQ,EpByuBZ9L,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IoBtuBtD1C,EAAA+G,QAAesC,GpB6vBT,SAAUpJ,EAAQD,GqBxwBxB,QAAAwJ,GAAyCwD,GAErC,IADA,GAAIvM,GAAI,EACDL,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,MAC3B,IAAIhL,IAAMuM,EACN,MAAOf,EAEXxL,KAEJ,KAAM,IAAI+L,OAAM,wBAA0BQ,GrBiwB9C9L,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IqB9vBtD1C,EAAA+G,QAAeyC,GrBsxBT,SAAUvJ,EAAQD,GsBlyBxB,QAAAyJ,GAA+CuD,GAE3C,IADA,GAAIvM,GAAI,EACDL,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,MAC3B,IAAIhL,IAAMuM,EACN,MAAOf,EAEXxL,KAEJ,MAAO,MtB2xBXS,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IsBxxBtD1C,EAAA+G,QAAe0C,GtBgzBT,SAAUxJ,EAAQD,GuB3zBxB,QAAA0J,GAA+CsD,EAAeC,GAE1D,IADA,GAAIxM,GAAI,EACDL,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,MAC3B,IAAIhL,IAAMuM,EACN,MAAOf,EAEXxL,KAEJ,MAAOwM,GAAaD,GvBozBxB9L,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IuBjzBtD1C,EAAA+G,QAAe2C,GvB00BT,SAAUzJ,EAAQD,GwBv1BxB,QAAAsJ,GAA4C4C,GAExC,IADA,GAAIc,GAAQ,EACL5M,KAAKyG,SAAS0E,WAAW,CAE5B,GAAIW,EADS9L,KAAKyG,SAAS4E,QAEvB,MAAOuB,EAEXA,KAEJ,OAAQ,ExBg1BZ9L,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IwB70BtD1C,EAAA+G,QAAeuC,GxBq2BT,SAAUrJ,EAAQD,GyBj3BxB,QAAAuJ,GAA2C2C,GAGvC,IAFA,GAAIc,GAAQ,EACRtB,GAAU,EACPtL,KAAKyG,SAAS0E,WAAW,CAExBW,EADS9L,KAAKyG,SAAS4E,UAEvBC,EAASsB,GAEbA,IAEJ,MAAOtB,GzBy2BXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IyBt2BtD1C,EAAA+G,QAAewC,GzB+3BT,SAAUtJ,EAAQD,G0Bz3BxB,QAAA4J,GAA4CsD,OAAA,KAAAA,MAAAC,EAcxC,KAZI,GAAAtB,GAAAqB,EAAAxK,YAAA,KAAAmJ,EAAAsB,EAAAzK,MAAAmJ,EACAuB,EAAAF,EAAAG,gBAAA,KAAAD,EAAAD,EAAAE,UAAAD,EACAE,EAAAJ,EAAAK,aAAA,KAAAD,EAAAH,EAAAI,OAAAD,EACAE,EAAAN,EAAAO,cAAA,KAAAD,EAAAL,EAAAM,QAAAD,EACAE,EAAAR,EAAAS,YAAA,KAAAD,EAAAP,EAAAQ,MAAAD,EACAE,EAAAV,EAAAW,gBAAA,KAAAD,EAAAT,EAAAU,UAAAD,EACAE,EAAAZ,EAAApB,gBAAA,KAAAgC,EAAAX,EAAArB,UAAAgC,EAGApC,EAAS,GAAGhJ,EAAQ6K,EACpBpE,EAAQ,EAEL/I,KAAKyG,SAAS0E,WAAW,CAC5BpC,GACA,IAAM8C,GAAO7L,KAAKyG,SAAS4E,MAI3B,IAHItC,EAAQ,IACRuC,GAAU2B,KAEVM,EAAQ,GAAKxE,GAASwE,GAKtB,KAJAjC,IAAuB,MAAbI,EACJA,EAAUG,GACV8B,OAAO9B,GAWrB,MALI0B,IAAS,GAAKxE,EAAQwE,IACtBjC,GAAUmC,GAGdnC,GAAU+B,E1B01BdvM,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,G0B34BtD,IAAMyK,IACFzK,MAAO,GACP2K,UAAW,KACXE,OAAQ,GACRE,QAAS,GACTE,OAAQ,EACRE,UAAW,MACX/B,cAAWF,GA8Cf5L,GAAA+G,QAAe6C,G1Bq4BT,SAAU3J,EAAQD,G2B97BxB,QAAAiH,GAA6C6E,GACzC,MAAO1L,MAAKqH,YACPX,IAAI,SAAA4F,GAAM,MAAAZ,GAAUY,EAAGM,MAAON,EAAGhK,S3B87B1CxB,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,I2B37BtD1C,EAAA+G,QAAeE,G3B28BT,SAAUhH,EAAQD,EAASM,G4B/7BjC,QAAAmH,KACI,MAAO,IAAIsE,GAAAhF,QAAS,GAAIiH,GAAc5N,KAAKyG,W5Bg8B/C3F,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,G4B19BtD,IAAAqJ,GAAAzL,EAAA,GAIA0N,EAAA,WAGI,QAAAA,GAA6BnH,GAAAzG,KAAAyG,WAFrBzG,KAAA4M,OAAS,EAarB,MATIgB,GAAArM,UAAA4J,QAAA,WACI,MAAOnL,MAAKyG,SAAS0E,WAGzByC,EAAArM,UAAA8J,KAAA,WACI,GAAM/I,GAAQtC,KAAKyG,SAAS4E,MAE5B,OADArL,MAAK4M,SACGA,MAAO5M,KAAK4M,MAAOtK,MAAKA,IAExCsL,IAWAhO,GAAA+G,QAAeU,G5B29BT,SAAUxH,EAAQD,G6Bh/BxB,QAAAqH,GAA6C6E,GACzC,MAAO9L,MAAKqH,YACPP,OAAO,SAAAwF,GAAM,MAAAR,GAAUQ,EAAGM,MAAON,EAAGhK,SACpCoE,IAAI,SAAA4F,GAAM,MAAAA,GAAGhK,Q7B++BtBxB,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,I6B5+BtD1C,EAAA+G,QAAeM,G7B6/BT,SAAUpH,EAAQD,G8BngCxB,QAAAqI,GAA8CoE,GAC1CrM,KAAKqH,YACAW,QAAQ,SAAAsE,GAAM,MAAAD,GAAOC,EAAGM,MAAON,EAAGhK,S9BmgC3CxB,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,I8BhgCtD1C,EAAA+G,QAAesB,G9BghCT,SAAUpI,EAAQD,EAASM,G+B5+BjC,QAAAkH,GAA6CyG,GACzC,MAAO,IAAIlC,GAAAhF,QAAS,GAAImH,GAAmB9N,KAAKyG,SAAUoH,I/B6+B9D/M,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,G+B/hCtD,IAAAqJ,GAAAzL,EAAA,GAGA4N,EAAA,WAKI,QAAAA,GACqBrH,EACAoH,GADA7N,KAAAyG,WACAzG,KAAA6N,WANb7N,KAAA+N,QAEA/N,KAAAiL,MAAgB,EAkC5B,MA3BI6C,GAAAvM,UAAA4J,QAAA,WAEI,MADAnL,MAAKoL,eACGpL,KAAKiL,MAGjB6C,EAAAvM,UAAA8J,KAAA,WACIrL,KAAKoL,aACL,IAAME,GAAStL,KAAKuL,QAEpB,OADAvL,MAAKuL,aAAWC,GACTF,GAGXwC,EAAAvM,UAAA6J,YAAA,WACI,OAAsBI,KAAlBxL,KAAKuL,WAA0BvL,KAAKiL,KAAxC,CAGA,KAAOjL,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,OACrB2C,EAAMhO,KAAK6N,SAAShC,EAC1B,IAAI7L,KAAK+N,KAAK9E,QAAQ+E,GAAO,EAGzB,MAFAhO,MAAKuL,SAAWM,MAChB7L,MAAK+N,KAAKvB,KAAKwB,GAIvBhO,KAAKiL,MAAO,IAEpB6C,IAaAlO,GAAA+G,QAAeS,G/B6hCT,SAAUvH,EAAQD,GgC1kCxB,QAAA0H,GAAoCnG,GAChC,MAAOnB,MAAKqH,YACPN,UAAU,SAAAuF,GAAM,MAAAA,GAAGM,MAAQzL,IAC3BuF,IAAI,SAAA4F,GAAM,MAAAA,GAAGhK,QhCykCtBxB,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IgCtkCtD1C,EAAA+G,QAAeW,GhCulCT,SAAUzH,EAAQD,GiC5lCxB,QAAA2H,GAAmDpG,GAC/C,MAAOnB,MAAKqH,YACPP,OAAO,SAAAwF,GAAM,MAAAA,GAAGM,MAAQzL,IACxBuF,IAAI,SAAA4F,GAAM,MAAAA,GAAGhK,QjC2lCtBxB,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IiC9lCtD1C,EAAA+G,QAAAY,GjCgnCM,SAAU1H,EAAQD,GkC/mCxB,QAAA6J,GAAsCqC,GAClC,GAAiB,MAAbA,EACA,MAAO9L,MAAK8G,OAAOgF,GAAWrC,QAElC,KAAKzJ,KAAKyG,SAAS0E,UACf,KAAM,IAAIiB,OAAM,kBAEpB,IAAMP,GAAO7L,KAAKyG,SAAS4E,MAC3B,IAAIrL,KAAKyG,SAAS0E,UACd,KAAM,IAAIiB,OAAM,wBAEpB,OAAOP,GlCsmCX/K,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IkCnmCtD1C,EAAA+G,QAAe8C,GlC8nCT,SAAU5J,EAAQD,GmC5oCxB,QAAA8J,GAA4CoC,GACxC,GAAiB,MAAbA,EACA,MAAO9L,MAAK8G,OAAOgF,GAAWpC,cAElC,KAAK1J,KAAKyG,SAAS0E,UACf,MAAO,KAEX,IAAMU,GAAO7L,KAAKyG,SAAS4E,MAC3B,OAAIrL,MAAKyG,SAAS0E,UACP,KAEJU,EnCmoCX/K,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,ImChoCtD1C,EAAA+G,QAAe+C,GnC2pCT,SAAU7J,EAAQD,GoC3qCxB,QAAAmH,GAAyC+E,GACrC,MAAO9L,MAAK8G,OAAO,SAACxE,GAAa,OAACwJ,EAAUxJ,KpC4qChDxB,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IoCzqCtD1C,EAAA+G,QAAeI,GpCwrCT,SAAUlH,EAAQD,GqC3rCxB,QAAA+J,GAA+C+B,GAE3C,IADA,GAAMJ,GAAS,GAAI2C,KACZjO,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,OACrB6C,EAAOxC,EAAUG,EACvBP,GAAO6C,IAAID,EAAK,GAAIA,EAAK,IAE7B,MAAO5C,GrCsrCXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IqCnrCtD1C,EAAA+G,QAAegD,GrCysCT,SAAU9J,EAAQD,GsCltCxB,QAAAgK,GAC8BwE,EACAC,GAK1B,IAJA,GAAM/C,GAAS,GAAI2C,KACbvC,EAA8B,MAAlB2C,EACZA,EACA,SAAC/L,GAAa,MAAAA,IACbtC,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,OACrB2C,EAAMI,EAAYvC,GAClBvJ,EAAQoJ,EAAUG,EACxBP,GAAO6C,IAAIH,EAAK1L,GAEpB,MAAOgJ,GtCusCXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IsCpsCtD1C,EAAA+G,QAAeiD,GtC+tCT,SAAU/J,EAAQD,GuCjvCxB,QAAAiK,GAA0CuE,GAEtC,IADA,GAAM9C,GAAS,GAAI2C,KACZjO,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,OACrB2C,EAAMI,EAAYvC,GAClBU,EAAQjB,EAAOpK,IAAI8M,EACZ,OAATzB,EACAjB,EAAO6C,IAAIH,GAAMnC,IAEjBU,EAAMC,KAAKX,GAGnB,MAAOP,GvCuuCXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IuCpuCtD1C,EAAA+G,QAAekD,GvC+vCT,SAAUhK,EAAQD,GwC3wCxB,QAAAkK,GAAmDwE,GAC/C,IAAKtO,KAAKyG,SAAS0E,UACf,KAAM,IAAIiB,OAAM,+BAGpB,KADA,GAAId,GAAYtL,KAAKyG,SAAS4E,OACvBrL,KAAKyG,SAAS0E,WAAW,CAE5BG,EAASgD,EAAUhD,EADNtL,KAAKyG,SAAS4E,QAG/B,MAAOC,GxCowCXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IwCjwCtD1C,EAAA+G,QAAemD,GxC2xCT,SAAUjK,EAAQD,GyCvyCxB,QAAAmK,GAA0DuE,GACtD,IAAKtO,KAAKyG,SAAS0E,UACf,KAAM,IAAIiB,OAAM,+BAIpB,KAFA,GAAIQ,GAAQ,EACRtB,EAAYtL,KAAKyG,SAAS4E,OACvBrL,KAAKyG,SAAS0E,WAAW,CAE5BG,EAASgD,EAAU1B,EAAOtB,EADbtL,KAAKyG,SAAS4E,QAE3BuB,IAEJ,MAAOtB,GzC8xCXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IyC3xCtD1C,EAAA+G,QAAeoD,GzCuzCT,SAAUlK,EAAQD,G0Cr0CxB,QAAAoK,GAAuCuE,EAAYD,GAE/C,IADA,GAAIhD,GAASiD,EACNvO,KAAKyG,SAAS0E,WAAW,CAE5BG,EAASgD,EAAUhD,EADNtL,KAAKyG,SAAS4E,QAG/B,MAAOC,G1Ci0CXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,I0C9zCtD1C,EAAA+G,QAAeqD,G1Cq1CT,SAAUnK,EAAQD,G2C71CxB,QAAAqK,GAA8CsE,EAAYD,GAGtD,IAFA,GAAIhD,GAASiD,EACT3B,EAAQ,EACL5M,KAAKyG,SAAS0E,WAAW,CAE5BG,EAASgD,EAAU1B,EAAOtB,EADbtL,KAAKyG,SAAS4E,QAE3BuB,IAEJ,MAAOtB,G3Cu1CXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,I2Cp1CtD1C,EAAA+G,QAAesD,G3C82CT,SAAUpK,EAAQD,EAASM,G4C93CjC,QAAAuH,KACI,MAAOzH,MAAKkH,QAAQ,SAAAoF,GAChB,MAAIA,aAAcX,GAAAhF,QACP2F,EAEAX,EAAA3J,WAAWsK,K5C23C9BxL,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,G4Cv4CtD,IAAAqJ,GAAAzL,EAAA,EAiBAN,GAAA+G,QAAec,G5C44CT,SAAU5H,EAAQD,EAASM,G6Cr5CjC,QAAAwH,KAEI,IADA,GAAMA,MACC1H,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,MAC3B3D,GAAO8E,KAAKX,GAGhB,MADAnE,GAAO8G,OACA,GAAI7C,GAAAhF,QAAS,GAAIvE,GAAAC,iBAAiBqF,I7Cg5C7C5G,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,G6C/5CtD,IAAAqJ,GAAAzL,EAAA,GACAkC,EAAAlC,EAAA,EAiBAN,GAAA+G,QAAee,G7Cm6CT,SAAU7H,EAAQD,EAASM,G8C36CjC,QAAA0H,GAA2CiG,GAEvC,IADA,GAAMnG,MACC1H,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,MAC3B3D,GAAO8E,KAAKX,GAahB,MAXAnE,GAAO8G,KAAK,SAACC,EAAUC,GACnB,GAAMC,GAAOd,EAASY,GAChBG,EAAOf,EAASa,EACtB,OAAIC,GAAOC,GACC,EAERD,EAAOC,EACA,EAEJ,IAEJ,GAAIjD,GAAAhF,QAAS,GAAIvE,GAAAC,iBAAiBqF,I9C45C7C5G,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,G8Cv7CtD,IAAAqJ,GAAAzL,EAAA,GACAkC,EAAAlC,EAAA,EA6BAN,GAAA+G,QAAeiB,G9C27CT,SAAU/H,EAAQD,EAASM,G+Cj9CjC,QAAAyH,KAEI,IADA,GAAMD,MACC1H,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,MAC3B3D,GAAO8E,KAAKX,GAWhB,MATAnE,GAAO8G,KAAK,SAACC,EAAUC,GACnB,MAAID,GAAQC,EACD,EAEPD,EAAQC,GACA,EAEL,IAEJ,GAAI/C,GAAAhF,QAAS,GAAIvE,GAAAC,iBAAiBqF,I/Co8C7C5G,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,G+C39CtD,IAAAqJ,GAAAzL,EAAA,GACAkC,EAAAlC,EAAA,EAyBAN,GAAA+G,QAAegB,G/C+9CT,SAAU9H,EAAQD,EAASM,GgD/+CjC,QAAA2H,GAAqDgG,GAEjD,IADA,GAAMnG,MACC1H,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,MAC3B3D,GAAO8E,KAAKX,GAahB,MAXAnE,GAAO8G,KAAK,SAACC,EAAUC,GACnB,GAAMC,GAAOd,EAASY,GAChBG,EAAOf,EAASa,EACtB,OAAIC,GAAOC,EACA,EAEPD,EAAOC,GACC,EAEL,IAEJ,GAAIjD,GAAAhF,QAAS,GAAIvE,GAAAC,iBAAiBqF,IhDg+C7C5G,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,GgD3/CtD,IAAAqJ,GAAAzL,EAAA,GACAkC,EAAAlC,EAAA,EA6BAN,GAAA+G,QAAekB,GhD+/CT,SAAUhI,EAAQD,EAASM,GiDphDjC,QAAA4H,GAA0C+G,GAEtC,IADA,GAAMnH,MACC1H,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,MAC3B3D,GAAO8E,KAAKX,GAGhB,MADAnE,GAAO8G,KAAKK,GACL,GAAIlD,GAAAhF,QAAS,GAAIvE,GAAAC,iBAAiBqF,IjD+gD7C5G,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,GiD/hDtD,IAAAqJ,GAAAzL,EAAA,GACAkC,EAAAlC,EAAA,EAkBAN,GAAA+G,QAAemB,GjDmiDT,SAAUjI,EAAQD,GkD/iDxB,QAAAoH,KACI,MAAOhH,MAAK8G,OAAO,SAAAwF,GAAM,MAAO,QAAPA,IlDgjD7BxL,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IkD7iDtD1C,EAAA+G,QAAeK,GlD2jDT,SAAUnH,EAAQD,EAASM,GmD7jDjC,QAAA0G,GAA6C8E,GACzC,MAAO1L,MAAKkH,QAAQ,SAAC5E,GACjB,GAAMuJ,GAAOH,EAAUpJ,EACvB,OAAgB,QAATuJ,EACDF,EAAAhK,WAAWkK,GACXF,EAAA1J,kBnD0jDdnB,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,GmDxkDtD,IAAAqJ,GAAAzL,EAAA,EAkBAN,GAAA+G,QAAeC,GnD4kDT,SAAU/G,EAAQD,EAASM,GoDlkDjC,QAAAkK,GAAoC0E,GAChC,MAAIA,aAAgBnD,GAAAhF,QACT,GAAIgF,GAAAhF,QAAS,GAAIoI,GAAe/O,KAAKyG,SAAUqI,EAAKrI,WACpDqI,YAAgBE,OAChB,GAAIrD,GAAAhF,QAAS,GAAIoI,GAAe/O,KAAKyG,SAAU,GAAIrE,GAAAC,iBAAiByM,KAEpE,GAAInD,GAAAhF,QAAS,GAAIoI,GAAe/O,KAAKyG,SAAU,GAAIrE,GAAAC,kBAAkByM,MpD8jDpFhO,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,GoDhmDtD,IAAAqJ,GAAAzL,EAAA,GACAkC,EAAAlC,EAAA,GAEA6O,EAAA,WACI,QAAAA,GACqBzG,EACA2G,GADAjP,KAAAsI,QACAtI,KAAAiP,SAazB,MAVIF,GAAAxN,UAAA4J,QAAA,WACI,MAAOnL,MAAKsI,MAAM6C,WAAanL,KAAKiP,OAAO9D,WAG/C4D,EAAAxN,UAAA8J,KAAA,WACI,MAAOrL,MAAKsI,MAAM6C,UACZnL,KAAKsI,MAAM+C,OACXrL,KAAKiP,OAAO5D,QAG1B0D,IAmBAnP,GAAA+G,QAAeyD,GpDmmDT,SAAUvK,EAAQD,EAASM,GqDhoDjC,QAAAmK,GAAqCyE,GACjC,GAAIA,YAAgBnD,GAAAhF,QAAU,CAC1B,GAAMuI,GAAkBJ,EAAK5G,SAC7B,OAAOlI,MAAK8G,OAAO,SAAAwF,GAAM,MAAA4C,GAAMjG,QAAQqD,GAAM,IAC1C,MAAIwC,aAAgBE,OAChBhP,KAAK8G,OAAO,SAAAwF,GAAM,MAAAwC,GAAK7F,QAAQqD,GAAM,IAErCtM,KAAK8G,OAAO,SAAAwF,GAAM,MAAAA,KAAOwC,IrD2nDxChO,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,GqD3oDtD,IAAAqJ,GAAAzL,EAAA,EAoBAN,GAAA+G,QAAe0D,GrDipDT,SAAUxK,EAAQD,EAASM,GsDxoDjC,QAAAoK,GAAsC6E,GAClC,MAAO,IAAIxD,GAAAhF,QAAS,GAAIyI,GAAYpP,KAAKyG,SAAU0I,EAAM1I,WtDyoD7D3F,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,GsDvqDtD,IAAAqJ,GAAAzL,EAAA,GAGAkP,EAAA,WACI,QAAAA,GACqBC,EACAC,GADAtP,KAAAqP,YACArP,KAAAsP,YAazB,MAVIF,GAAA7N,UAAA4J,QAAA,WACI,MAAOnL,MAAKqP,UAAUlE,WAAanL,KAAKsP,UAAUnE,WAGtDiE,EAAA7N,UAAA8J,KAAA,WAGI,OAFcrL,KAAKqP,UAAUhE,OACfrL,KAAKsP,UAAUjE,SAIrC+D,IAcAxP,GAAA+G,QAAe2D,GtDuqDT,SAAUzK,EAAQD,GuDhsDxB,QAAA2K,KAGI,IAFA,GAAMgF,MACAC,KACCxP,KAAKyG,SAAS0E,WAAW,CACtB,GAAAM,GAAAzL,KAAAyG,SAAA4E,OAAC/C,EAAAmD,EAAA,GAAOwD,EAAAxD,EAAA,EACd8D,GAAO/C,KAAKlE,GACZkH,EAAOhD,KAAKyC,GAEhB,OAAQM,EAAQC,GvD0rDpB1O,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IuDvrDtD1C,EAAA+G,QAAe4D,GvD6sDT,SAAU1K,EAAQD,GwDvtDxB,QAAAsK,GAAyC4B,GAGrC,IAFA,GAAM2D,MACAC,KACC1P,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,MACvBS,GAAUD,GACV4D,EAAUjD,KAAKX,GAEf6D,EAAWlD,KAAKX,GAGxB,OAAQ8D,KAAQF,EAAWG,MAASF,GxD8sDxC5O,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IwD3sDtD1C,EAAA+G,QAAeuD,GxDsuDT,SAAUrK,EAAQD,GyDpvDxB,QAAAwI,GAAqC+F,GAEjC,IADA,GAAM7C,GAAS6C,GAAO,GAAI0B,KACnB7P,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,MAC3BC,GAAOwE,IAAIjE,GAEf,MAAOP,GzDgvDXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IyD7uDtD1C,EAAA+G,QAAeyB,GzDkwDT,SAAUvI,EAAQD,G0D3wDxB,QAAAyI,GAA6C3B,GAEzC,IADA,GAAM4E,GAAS5E,GAAO,GAAIuH,KACnBjO,KAAKyG,SAAS0E,WAAW,CAC5B,GAAM+C,GAAOlO,KAAKyG,SAAS4E,OACrB2C,EAAME,EAAK,GACX5L,EAAQ4L,EAAK,EACnB5C,GAAO6C,IAAIH,EAAK1L,GAEpB,MAAOgJ,G1DqwDXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,I0DlwDtD1C,EAAA+G,QAAe0B,G1DyxDT,SAAUxI,EAAQD,G2DtyDxB,QAAA4K,KAEI,IADA,GAAIc,GAAS,EACNtL,KAAKyG,SAAS0E,WACjBG,GAAUtL,KAAKyG,SAAS4E,MAE5B,OAAOC,G3DmyDXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,I2DhyDtD1C,EAAA+G,QAAe6D,G3DkzDT,SAAU3K,EAAQD,G4DzzDxB,QAAA6K,GAAqCoD,GAEjC,IADA,GAAIvC,GAAS,EACNtL,KAAKyG,SAAS0E,WAAW,CAE5BG,GAAUuC,EADG7N,KAAKyG,SAAS4E,QAG/B,MAAOC,G5DqzDXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,I4DlzDtD1C,EAAA+G,QAAe8D,G5Ds0DT,SAAU5K,EAAQD,G6D90DxB,QAAAuK,GAAqC4F,GACjC,GAAIA,EAAY,EACZ,KAAM,IAAI3D,OAAM,gCAAkC2D,EAItD,KAFA,GAAMzE,MACFsB,EAAQ,EACL5M,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,OACrBrF,EAAQgK,KAAKC,MAAMrD,EAAQmD,EACZ,OAAjBzE,EAAOtF,GACPsF,EAAOtF,IAAU6F,GAEjBP,EAAOtF,GAAOwG,KAAKX,GAEvBe,IAEJ,MAAOtB,G7Dg0DXxK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,I6D7zDtD1C,EAAA+G,QAAewD,G7D61DT,SAAUtK,EAAQD,G8Dl3DxB,QAAAmI,KACI,MAAO/H,MAAKqH,YACPQ,mBAAmB,SAAAyE,GAAM,MAAAA,GAAGM,QAC5BlG,IAAI,SAAA4F,GAAM,MAAAA,GAAGhK,Q9Di3DtBxB,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,I8D92DtD1C,EAAA+G,QAAeoB,G9D83DT,SAAUlI,EAAQD,G+Dp4DxB,QAAA8K,KAGI,IAFA,GAAIF,GAAM,EACNzB,EAAQ,EACL/I,KAAKyG,SAAS0E,WACjBX,GAAOxK,KAAKyG,SAAS4E,OACrBtC,GAEJ,OAAiB,KAAVA,EACDmH,OAAOC,IACP3F,EAAMzB,E/D63DhBjI,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,I+D13DtD1C,EAAA+G,QAAe+D,G/Dg5DT,SAAU7K,EAAQD,GgE55DxB,QAAA+K,KAEI,IADA,GAAIA,GAAgB,KACb3K,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,QAChB,MAAPV,GAAekB,EAAOlB,KACtBA,EAAMkB,GAGd,MAAOlB,GhEs5DX7J,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IgEn5DtD1C,EAAA+G,QAAegE,GhEw6DT,SAAU9K,EAAQD,GiEj7DxB,QAAAgL,GAAwCiD,GAGpC,IAFA,GAAIlD,GAAgB,KAChByF,EAAwB,KACrBpQ,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,OACrB/I,EAAQuL,EAAShC,IACJ,MAAfuE,GAAuB9N,EAAQ8N,KAC/BA,EAAc9N,EACdqI,EAAMkB,GAGd,MAAOlB,GjEw6DX7J,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IiEr6DtD1C,EAAA+G,QAAeiE,GjE+7DT,SAAU/K,EAAQD,GkE/8DxB,QAAAkL,KAEI,IADA,GAAIA,GAAgB,KACb9K,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,QAChB,MAAPP,GAAee,EAAOf,KACtBA,EAAMe,GAGd,MAAOf,GlEy8DXhK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IkEt8DtD1C,EAAA+G,QAAemE,GlE29DT,SAAUjL,EAAQD,GmEp+DxB,QAAAmL,GAAwC8C,GAGpC,IAFA,GAAI/C,GAAgB,KAChBuF,EAAwB,KACrBrQ,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,OACrB/I,EAAQuL,EAAShC,IACJ,MAAfwE,GAAuB/N,EAAQ+N,KAC/BA,EAAc/N,EACdwI,EAAMe,GAGd,MAAOf,GnE29DXhK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,ImEx9DtD1C,EAAA+G,QAAeoE,GnEk/DT,SAAUlL,EAAQD,GoEjgExB,QAAAiL,GAAuCgE,GAEnC,IADA,GAAIlE,GAAgB,KACb3K,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,QAChB,MAAPV,GAAekE,EAAQhD,EAAMlB,GAAO,KACpCA,EAAMkB,GAGd,MAAOlB,GpE2/DX7J,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IoEx/DtD1C,EAAA+G,QAAekE,GpE8gET,SAAUhL,EAAQD,GqEzhExB,QAAAoL,GAAuC6D,GAEnC,IADA,GAAI/D,GAAgB,KACb9K,KAAKyG,SAAS0E,WAAW,CAC5B,GAAMU,GAAO7L,KAAKyG,SAAS4E,QAChB,MAAPP,GAAe+D,EAAQhD,EAAMf,GAAO,KACpCA,EAAMe,GAGd,MAAOf,GrEmhEXhK,OAAOC,eAAenB,EAAS,cAAgB0C,OAAO,IqEhhEtD1C,EAAA+G,QAAeqE","file":"sequency.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Sequency\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Sequency\"] = factory();\n\telse\n\t\troot[\"Sequency\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Sequency\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Sequency\"] = factory();\n\telse\n\t\troot[\"Sequency\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SequenceIterator_1 = __webpack_require__(1);\r\nvar map_1 = __webpack_require__(2);\r\nvar filter_1 = __webpack_require__(3);\r\nvar flatMap_1 = __webpack_require__(4);\r\nvar firstOrNull_1 = __webpack_require__(5);\r\nvar first_1 = __webpack_require__(6);\r\nvar lastOrNull_1 = __webpack_require__(7);\r\nvar onEach_1 = __webpack_require__(8);\r\nvar forEach_1 = __webpack_require__(9);\r\nvar toArray_1 = __webpack_require__(10);\r\nvar last_1 = __webpack_require__(11);\r\nvar all_1 = __webpack_require__(12);\r\nvar any_1 = __webpack_require__(13);\r\nvar none_1 = __webpack_require__(14);\r\nvar count_1 = __webpack_require__(15);\r\nvar distinct_1 = __webpack_require__(16);\r\nvar contains_1 = __webpack_require__(17);\r\nvar indexOf_1 = __webpack_require__(18);\r\nvar elementAt_1 = __webpack_require__(19);\r\nvar elementAtOrNull_1 = __webpack_require__(20);\r\nvar elementAtOrElse_1 = __webpack_require__(21);\r\nvar indexOfFirst_1 = __webpack_require__(22);\r\nvar indexOfLast_1 = __webpack_require__(23);\r\nvar joinToString_1 = __webpack_require__(24);\r\nvar mapIndexed_1 = __webpack_require__(25);\r\nvar withIndex_1 = __webpack_require__(26);\r\nvar filterIndexed_1 = __webpack_require__(27);\r\nvar forEachIndexed_1 = __webpack_require__(28);\r\nvar distinctBy_1 = __webpack_require__(29);\r\nvar drop_1 = __webpack_require__(30);\r\nvar take_1 = __webpack_require__(31);\r\nvar single_1 = __webpack_require__(32);\r\nvar singleOrNull_1 = __webpack_require__(33);\r\nvar filterNot_1 = __webpack_require__(34);\r\nvar associate_1 = __webpack_require__(35);\r\nvar associateBy_1 = __webpack_require__(36);\r\nvar groupBy_1 = __webpack_require__(37);\r\nvar reduce_1 = __webpack_require__(38);\r\nvar reduceIndexed_1 = __webpack_require__(39);\r\nvar fold_1 = __webpack_require__(40);\r\nvar foldIndexed_1 = __webpack_require__(41);\r\nvar flatten_1 = __webpack_require__(42);\r\nvar sorted_1 = __webpack_require__(43);\r\nvar sortedBy_1 = __webpack_require__(44);\r\nvar sortedDescending_1 = __webpack_require__(45);\r\nvar sortedByDescending_1 = __webpack_require__(46);\r\nvar sortedWith_1 = __webpack_require__(47);\r\nvar filterNotNull_1 = __webpack_require__(48);\r\nvar mapNotNull_1 = __webpack_require__(49);\r\nvar plus_1 = __webpack_require__(50);\r\nvar minus_1 = __webpack_require__(51);\r\nvar zip_1 = __webpack_require__(52);\r\nvar unzip_1 = __webpack_require__(53);\r\nvar partition_1 = __webpack_require__(54);\r\nvar toSet_1 = __webpack_require__(55);\r\nvar toMap_1 = __webpack_require__(56);\r\nvar sum_1 = __webpack_require__(57);\r\nvar sumBy_1 = __webpack_require__(58);\r\nvar chunk_1 = __webpack_require__(59);\r\nvar reverse_1 = __webpack_require__(60);\r\nvar average_1 = __webpack_require__(61);\r\nvar max_1 = __webpack_require__(62);\r\nvar maxBy_1 = __webpack_require__(63);\r\nvar min_1 = __webpack_require__(64);\r\nvar minBy_1 = __webpack_require__(65);\r\nvar maxWith_1 = __webpack_require__(66);\r\nvar minWith_1 = __webpack_require__(67);\r\n/**\r\n * A Sequence accepts an iterator and provides a fluent functional API consisting\r\n * of various intermediate and terminal operations for processing the iterated data.\r\n * The operations are evaluated lazily to avoid examining all of the input data\r\n * when it's not necessary. Sequences can be iterated only once.\r\n */\r\nvar Sequence = /** @class */ (function () {\r\n    function Sequence(iterator) {\r\n        this.iterator = iterator;\r\n        this.map = map_1.default;\r\n        this.mapNotNull = mapNotNull_1.default;\r\n        this.mapIndexed = mapIndexed_1.default;\r\n        this.filter = filter_1.default;\r\n        this.filterNot = filterNot_1.default;\r\n        this.filterNotNull = filterNotNull_1.default;\r\n        this.filterIndexed = filterIndexed_1.default;\r\n        this.flatMap = flatMap_1.default;\r\n        this.distinct = distinct_1.default;\r\n        this.distinctBy = distinctBy_1.default;\r\n        this.withIndex = withIndex_1.default;\r\n        this.drop = drop_1.default;\r\n        this.take = take_1.default;\r\n        this.onEach = onEach_1.default;\r\n        this.flatten = flatten_1.default;\r\n        this.sorted = sorted_1.default;\r\n        this.sortedDescending = sortedDescending_1.default;\r\n        this.sortedBy = sortedBy_1.default;\r\n        this.sortedByDescending = sortedByDescending_1.default;\r\n        this.sortedWith = sortedWith_1.default;\r\n        this.reverse = reverse_1.default;\r\n        this.forEach = forEach_1.default;\r\n        this.forEachIndexed = forEachIndexed_1.default;\r\n        this.toArray = toArray_1.default;\r\n        this.toList = toArray_1.default;\r\n        this.toSet = toSet_1.default;\r\n        this.toMap = toMap_1.default;\r\n        this.first = first_1.default;\r\n        this.firstOrNull = firstOrNull_1.default;\r\n        this.last = last_1.default;\r\n        this.lastOrNull = lastOrNull_1.default;\r\n        this.find = firstOrNull_1.default;\r\n        this.findLast = lastOrNull_1.default;\r\n        this.all = all_1.default;\r\n        this.any = any_1.default;\r\n        this.none = none_1.default;\r\n        this.count = count_1.default;\r\n        this.contains = contains_1.default;\r\n        this.indexOf = indexOf_1.default;\r\n        this.indexOfFirst = indexOfFirst_1.default;\r\n        this.indexOfLast = indexOfLast_1.default;\r\n        this.elementAt = elementAt_1.default;\r\n        this.elementAtOrNull = elementAtOrNull_1.default;\r\n        this.elementAtOrElse = elementAtOrElse_1.default;\r\n        this.joinTo = joinToString_1.default;\r\n        this.joinToString = joinToString_1.default;\r\n        this.single = single_1.default;\r\n        this.singleOrNull = singleOrNull_1.default;\r\n        this.associate = associate_1.default;\r\n        this.associateBy = associateBy_1.default;\r\n        this.groupBy = groupBy_1.default;\r\n        this.reduce = reduce_1.default;\r\n        this.reduceIndexed = reduceIndexed_1.default;\r\n        this.fold = fold_1.default;\r\n        this.foldIndexed = foldIndexed_1.default;\r\n        this.partition = partition_1.default;\r\n        this.chunk = chunk_1.default;\r\n        this.plus = plus_1.default;\r\n        this.minus = minus_1.default;\r\n        this.zip = zip_1.default;\r\n        this.unzip = unzip_1.default;\r\n        this.sum = sum_1.default;\r\n        this.sumBy = sumBy_1.default;\r\n        this.average = average_1.default;\r\n        this.max = max_1.default;\r\n        this.maxBy = maxBy_1.default;\r\n        this.maxWith = maxWith_1.default;\r\n        this.min = min_1.default;\r\n        this.minBy = minBy_1.default;\r\n        this.minWith = minWith_1.default;\r\n    }\r\n    return Sequence;\r\n}());\r\nexports.default = Sequence;\r\nfunction sequenceOf() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return asSequence(args);\r\n}\r\nexports.sequenceOf = sequenceOf;\r\nfunction emptySequence() {\r\n    return asSequence([]);\r\n}\r\nexports.emptySequence = emptySequence;\r\nfunction asSequence(iterable) {\r\n    return new Sequence(new SequenceIterator_1.IterableIterator(iterable));\r\n}\r\nexports.asSequence = asSequence;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar IterableIterator = /** @class */ (function () {\r\n    function IterableIterator(iterable) {\r\n        this.done = false;\r\n        this.iterator = iterable[Symbol.iterator]();\r\n    }\r\n    IterableIterator.prototype.hasNext = function () {\r\n        this.processNext();\r\n        return !this.done;\r\n    };\r\n    IterableIterator.prototype.next = function () {\r\n        this.processNext();\r\n        var result = this.nextItem;\r\n        this.nextItem = undefined;\r\n        return result;\r\n    };\r\n    IterableIterator.prototype.processNext = function () {\r\n        if (this.done || this.nextItem !== undefined) {\r\n            return;\r\n        }\r\n        var _a = this.iterator.next(), done = _a.done, value = _a.value;\r\n        if (done) {\r\n            this.done = done;\r\n            this.nextItem = undefined;\r\n        }\r\n        else {\r\n            this.nextItem = value;\r\n        }\r\n    };\r\n    return IterableIterator;\r\n}());\r\nexports.IterableIterator = IterableIterator;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\nvar MapIterator = /** @class */ (function () {\r\n    function MapIterator(transform, iterator) {\r\n        this.transform = transform;\r\n        this.iterator = iterator;\r\n    }\r\n    MapIterator.prototype.hasNext = function () {\r\n        return this.iterator.hasNext();\r\n    };\r\n    MapIterator.prototype.next = function () {\r\n        var item = this.iterator.next();\r\n        return this.transform(item);\r\n    };\r\n    return MapIterator;\r\n}());\r\n/**\r\n * Transforms each element into another value by applying the given `transform` function and returns a new sequence.\r\n *\r\n * @param {(T) => S} transform\r\n * @returns {Sequence<S>}\r\n */\r\nfunction map(transform) {\r\n    return new Sequence_1.default(new MapIterator(transform, this.iterator));\r\n}\r\nexports.default = map;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\nvar FilterIterator = /** @class */ (function () {\r\n    function FilterIterator(predicate, iterator) {\r\n        this.predicate = predicate;\r\n        this.iterator = iterator;\r\n        this.done = false;\r\n    }\r\n    FilterIterator.prototype.hasNext = function () {\r\n        this.processNext();\r\n        return !this.done;\r\n    };\r\n    FilterIterator.prototype.next = function () {\r\n        this.processNext();\r\n        var result = this.nextItem;\r\n        this.nextItem = undefined;\r\n        return result;\r\n    };\r\n    FilterIterator.prototype.processNext = function () {\r\n        if (this.done || this.nextItem !== undefined) {\r\n            return;\r\n        }\r\n        while (this.iterator.hasNext()) {\r\n            var item = this.iterator.next();\r\n            if (this.predicate(item)) {\r\n                this.nextItem = item;\r\n                return;\r\n            }\r\n        }\r\n        this.done = true;\r\n    };\r\n    return FilterIterator;\r\n}());\r\n/**\r\n * Returns a new sequence consisting of all elements that match the given `predicate`.\r\n *\r\n * @param {(T) => boolean} predicate\r\n * @returns {Sequence<T>}\r\n */\r\nfunction filter(predicate) {\r\n    return new Sequence_1.default(new FilterIterator(predicate, this.iterator));\r\n}\r\nexports.default = filter;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\nvar FlatMapIterator = /** @class */ (function () {\r\n    function FlatMapIterator(transform, iterator) {\r\n        this.transform = transform;\r\n        this.iterator = iterator;\r\n    }\r\n    FlatMapIterator.prototype.next = function () {\r\n        this.processNext();\r\n        return this.current.next();\r\n    };\r\n    FlatMapIterator.prototype.hasNext = function () {\r\n        this.processNext();\r\n        return this.current != null;\r\n    };\r\n    FlatMapIterator.prototype.processNext = function () {\r\n        if (this.current != null) {\r\n            if (this.current.hasNext()) {\r\n                return;\r\n            }\r\n            else {\r\n                this.current = undefined;\r\n            }\r\n        }\r\n        while (this.current == null && this.iterator.hasNext()) {\r\n            var element = this.iterator.next();\r\n            var sequence = this.transform(element);\r\n            if (sequence.iterator.hasNext()) {\r\n                this.current = sequence.iterator;\r\n            }\r\n        }\r\n    };\r\n    return FlatMapIterator;\r\n}());\r\n/**\r\n * Transforms each element into a sequence of items and returns a flat single sequence of all those items.\r\n *\r\n * @param {(value: S) => Sequence<T>} transform\r\n * @returns {Sequence<T>}\r\n */\r\nfunction flatMap(transform) {\r\n    return new Sequence_1.default(new FlatMapIterator(transform, this.iterator));\r\n}\r\nexports.default = flatMap;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the first element of the sequence or the first element matching `predicate` if present, otherwise returns `null`.\r\n *\r\n * @param {(T) => boolean} predicate\r\n * @returns {T}\r\n */\r\nfunction firstOrNull(predicate) {\r\n    if (predicate != null) {\r\n        return this.filter(predicate).firstOrNull();\r\n    }\r\n    return this.iterator.hasNext()\r\n        ? this.iterator.next()\r\n        : null;\r\n}\r\nexports.default = firstOrNull;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the first element of the sequence or the first element matching `predicate` if present, otherwise throws\r\n * an error.\r\n *\r\n * @param {(T) => boolean} predicate\r\n * @returns {T}\r\n */\r\nfunction first(predicate) {\r\n    if (predicate != null) {\r\n        return this.filter(predicate).first();\r\n    }\r\n    if (!this.iterator.hasNext()) {\r\n        throw new Error(\"No such element\");\r\n    }\r\n    return this.iterator.next();\r\n}\r\nexports.default = first;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the last element of the sequence or the last element matching `predicate` if present, otherwise returns `null`.\r\n *\r\n * @param {(value: T) => boolean} predicate\r\n * @returns {T}\r\n */\r\nfunction lastOrNull(predicate) {\r\n    if (predicate != null) {\r\n        return this.filter(predicate).lastOrNull();\r\n    }\r\n    var item = null;\r\n    while (this.iterator.hasNext()) {\r\n        item = this.iterator.next();\r\n    }\r\n    return item;\r\n}\r\nexports.default = lastOrNull;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Performs the given `action` for each element and returns the sequence.\r\n *\r\n * @param {(value: T) => void} action\r\n * @returns {Sequence<T>}\r\n */\r\nfunction onEach(action) {\r\n    return this.map(function (it) {\r\n        action(it);\r\n        return it;\r\n    });\r\n}\r\nexports.default = onEach;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Performs the given `action` (side-effect) for each element of the sequence.\r\n *\r\n * @param {(T) => void} action\r\n */\r\nfunction forEach(action) {\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        action(item);\r\n    }\r\n}\r\nexports.default = forEach;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns all elements of the sequence as array. If an `array` is passed\r\n * the elements are appended to the end of the array.\r\n *\r\n * @param {Array<T>} array\r\n * @returns {Array<T>}\r\n */\r\nfunction toArray(array) {\r\n    var result = array || [];\r\n    while (this.iterator.hasNext()) {\r\n        result.push(this.iterator.next());\r\n    }\r\n    return result;\r\n}\r\nexports.default = toArray;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the last element of the sequence or the last element matching `predicate` if present, otherwise throws\r\n * an error.\r\n *\r\n * @param {(value: T) => boolean} predicate\r\n * @returns {T}\r\n */\r\nfunction last(predicate) {\r\n    if (predicate != null) {\r\n        return this.filter(predicate).last();\r\n    }\r\n    if (!this.iterator.hasNext()) {\r\n        throw new Error(\"No such element\");\r\n    }\r\n    var item;\r\n    while (this.iterator.hasNext()) {\r\n        item = this.iterator.next();\r\n    }\r\n    return item;\r\n}\r\nexports.default = last;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns `true` if all elements match the given `predicate`.\r\n *\r\n * @param {(T) => boolean} predicate\r\n * @returns {boolean}\r\n */\r\nfunction all(predicate) {\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (!predicate(item)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.default = all;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns `true` if at least one element match the given `predicate`.\r\n *\r\n * @param {(T) => boolean} predicate\r\n * @returns {boolean}\r\n */\r\nfunction any(predicate) {\r\n    if (predicate == null) {\r\n        return this.iterator.hasNext();\r\n    }\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (predicate(item)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.default = any;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns `true` if no element match the given `predicate` or if the sequence is empty\r\n * if no predicate is present.\r\n *\r\n * @param {(value: T) => boolean} predicate\r\n * @returns {boolean}\r\n */\r\nfunction none(predicate) {\r\n    if (predicate == null) {\r\n        return !this.iterator.hasNext();\r\n    }\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (predicate(item)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.default = none;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the number of elements of this sequence. If `predicate` is present, returns\r\n * the number of elements matching the given `predicate`.\r\n *\r\n * @param {(T) => boolean} predicate\r\n * @returns {number}\r\n */\r\nfunction count(predicate) {\r\n    var num = 0;\r\n    if (predicate == null) {\r\n        while (this.iterator.hasNext()) {\r\n            this.iterator.next();\r\n            num++;\r\n        }\r\n    }\r\n    else {\r\n        while (this.iterator.hasNext()) {\r\n            var item = this.iterator.next();\r\n            if (predicate(item)) {\r\n                num++;\r\n            }\r\n        }\r\n    }\r\n    return num;\r\n}\r\nexports.default = count;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\nvar DistinctIterator = /** @class */ (function () {\r\n    function DistinctIterator(iterator) {\r\n        this.iterator = iterator;\r\n        this.items = [];\r\n        this.nextItem = undefined;\r\n        this.done = false;\r\n    }\r\n    DistinctIterator.prototype.hasNext = function () {\r\n        this.processNext();\r\n        return !this.done;\r\n    };\r\n    DistinctIterator.prototype.next = function () {\r\n        this.processNext();\r\n        var result = this.nextItem;\r\n        this.nextItem = undefined;\r\n        return result;\r\n    };\r\n    DistinctIterator.prototype.processNext = function () {\r\n        if (this.nextItem !== undefined || this.done) {\r\n            return;\r\n        }\r\n        while (this.iterator.hasNext()) {\r\n            var item = this.iterator.next();\r\n            if (this.items.indexOf(item) < 0) {\r\n                this.nextItem = item;\r\n                this.items.push(item);\r\n                return;\r\n            }\r\n        }\r\n        this.done = true;\r\n    };\r\n    return DistinctIterator;\r\n}());\r\n/**\r\n * Returns a new sequence which discards all duplicate elements.\r\n *\r\n * @returns {Sequence<T>}\r\n */\r\nfunction distinct() {\r\n    return new Sequence_1.default(new DistinctIterator(this.iterator));\r\n}\r\nexports.default = distinct;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns `true` if the sequence contains the given `element`.\r\n *\r\n * @param {T} element\r\n * @returns {boolean}\r\n */\r\nfunction contains(element) {\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (element === item) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.default = contains;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the zero-based index of the given `element` or -1 if the sequence does not contain the element.\r\n *\r\n * @param {T} element\r\n * @returns {number}\r\n */\r\nfunction indexOf(element) {\r\n    var index = 0;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (item === element) {\r\n            return index;\r\n        }\r\n        index++;\r\n    }\r\n    return -1;\r\n}\r\nexports.default = indexOf;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the element at position `index` (zero-based) or throws an error if `index`\r\n * is out of bounds.\r\n *\r\n * @param {number} index\r\n * @returns {T}\r\n */\r\nfunction elementAt(index) {\r\n    var i = 0;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (i === index) {\r\n            return item;\r\n        }\r\n        i++;\r\n    }\r\n    throw new Error(\"Index out of bounds: \" + index);\r\n}\r\nexports.default = elementAt;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the element at position `index` (zero-based) or `null` if `index`\r\n * is out of bounds.\r\n *\r\n * @param {number} index\r\n * @returns {T}\r\n */\r\nfunction elementAtOrNull(index) {\r\n    var i = 0;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (i === index) {\r\n            return item;\r\n        }\r\n        i++;\r\n    }\r\n    return null;\r\n}\r\nexports.default = elementAtOrNull;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the element at position `index` (zero-based). If `index` is out of bounds returns\r\n * the result of the given `defaultValue` function.\r\n *\r\n * @param {number} index\r\n * @param defaultValue\r\n * @returns {T}\r\n */\r\nfunction elementAtOrElse(index, defaultValue) {\r\n    var i = 0;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (i === index) {\r\n            return item;\r\n        }\r\n        i++;\r\n    }\r\n    return defaultValue(index);\r\n}\r\nexports.default = elementAtOrElse;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the zero-based index of the first element matching the given `predicate` or -1 if no element matches\r\n * the predicate.\r\n *\r\n * @param {(value: T) => boolean} predicate\r\n * @returns {number}\r\n */\r\nfunction indexOfFirst(predicate) {\r\n    var index = 0;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (predicate(item)) {\r\n            return index;\r\n        }\r\n        index++;\r\n    }\r\n    return -1;\r\n}\r\nexports.default = indexOfFirst;\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the zero-based index of the last element matching the given `predicate` or -1 if no element matches\r\n * the predicate.\r\n *\r\n * @param {(value: T) => boolean} predicate\r\n * @returns {number}\r\n */\r\nfunction indexOfLast(predicate) {\r\n    var index = 0;\r\n    var result = -1;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (predicate(item)) {\r\n            result = index;\r\n        }\r\n        index++;\r\n    }\r\n    return result;\r\n}\r\nexports.default = indexOfLast;\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar defaults = {\r\n    value: \"\",\r\n    separator: \", \",\r\n    prefix: \"\",\r\n    postfix: \"\",\r\n    limit: -1,\r\n    truncated: \"...\",\r\n    transform: undefined\r\n};\r\n/**\r\n * Joins all elements of the sequence into a string with the given configuration.\r\n *\r\n * @param {JoinConfig<T>} config\r\n * @returns {string}\r\n */\r\nfunction joinToString(config) {\r\n    if (config === void 0) { config = defaults; }\r\n    var _a = config.value, value = _a === void 0 ? defaults.value : _a, _b = config.separator, separator = _b === void 0 ? defaults.separator : _b, _c = config.prefix, prefix = _c === void 0 ? defaults.prefix : _c, _d = config.postfix, postfix = _d === void 0 ? defaults.postfix : _d, _e = config.limit, limit = _e === void 0 ? defaults.limit : _e, _f = config.truncated, truncated = _f === void 0 ? defaults.truncated : _f, _g = config.transform, transform = _g === void 0 ? defaults.transform : _g;\r\n    var result = \"\" + value + prefix;\r\n    var count = 0;\r\n    while (this.iterator.hasNext()) {\r\n        count++;\r\n        var item = this.iterator.next();\r\n        if (count > 1) {\r\n            result += separator;\r\n        }\r\n        if (limit < 0 || count <= limit) {\r\n            result += transform != null\r\n                ? transform(item)\r\n                : String(item);\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    if (limit >= 0 && count > limit) {\r\n        result += truncated;\r\n    }\r\n    result += postfix;\r\n    return result;\r\n}\r\nexports.default = joinToString;\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Transforms each element into another value by applying the given `transform` function and returns a new sequence.\r\n *\r\n * @param {(index: number, value: T) => R} transform\r\n * @returns {Sequence<R>}\r\n */\r\nfunction mapIndexed(transform) {\r\n    return this.withIndex()\r\n        .map(function (it) { return transform(it.index, it.value); });\r\n}\r\nexports.default = mapIndexed;\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\nvar IndexIterator = /** @class */ (function () {\r\n    function IndexIterator(iterator) {\r\n        this.iterator = iterator;\r\n        this.index = -1;\r\n    }\r\n    IndexIterator.prototype.hasNext = function () {\r\n        return this.iterator.hasNext();\r\n    };\r\n    IndexIterator.prototype.next = function () {\r\n        var value = this.iterator.next();\r\n        this.index++;\r\n        return { index: this.index, value: value };\r\n    };\r\n    return IndexIterator;\r\n}());\r\n/**\r\n * Returns a new sequence consisting of indexed values for all original elements.\r\n *\r\n * @returns {Sequence<IndexedValue<T>>}\r\n */\r\nfunction withIndex() {\r\n    return new Sequence_1.default(new IndexIterator(this.iterator));\r\n}\r\nexports.default = withIndex;\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns a new sequence consisting of all elements that match the given `predicate`.\r\n *\r\n * @param {(index: number, value: T) => boolean} predicate\r\n * @returns {Sequence<T>}\r\n */\r\nfunction filterIndexed(predicate) {\r\n    return this.withIndex()\r\n        .filter(function (it) { return predicate(it.index, it.value); })\r\n        .map(function (it) { return it.value; });\r\n}\r\nexports.default = filterIndexed;\r\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Performs the given `action` (side-effect) for each element of the sequence and passes the `index` of the current\r\n * element (zero-based).\r\n *\r\n * @param {(index: number, value: T) => void} action\r\n */\r\nfunction forEachIndexed(action) {\r\n    this.withIndex()\r\n        .forEach(function (it) { return action(it.index, it.value); });\r\n}\r\nexports.default = forEachIndexed;\r\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\nvar DistinctByIterator = /** @class */ (function () {\r\n    function DistinctByIterator(iterator, selector) {\r\n        this.iterator = iterator;\r\n        this.selector = selector;\r\n        this.keys = [];\r\n        this.done = false;\r\n    }\r\n    DistinctByIterator.prototype.hasNext = function () {\r\n        this.processNext();\r\n        return !this.done;\r\n    };\r\n    DistinctByIterator.prototype.next = function () {\r\n        this.processNext();\r\n        var result = this.nextItem;\r\n        this.nextItem = undefined;\r\n        return result;\r\n    };\r\n    DistinctByIterator.prototype.processNext = function () {\r\n        if (this.nextItem !== undefined || this.done) {\r\n            return;\r\n        }\r\n        while (this.iterator.hasNext()) {\r\n            var item = this.iterator.next();\r\n            var key = this.selector(item);\r\n            if (this.keys.indexOf(key) < 0) {\r\n                this.nextItem = item;\r\n                this.keys.push(key);\r\n                return;\r\n            }\r\n        }\r\n        this.done = true;\r\n    };\r\n    return DistinctByIterator;\r\n}());\r\n/**\r\n * Returns a new sequence which discards all elements with duplicate items determined\r\n * by the given `selector`.\r\n *\r\n * @param {(item: T) => K} selector\r\n * @returns {Sequence<T>}\r\n */\r\nfunction distinctBy(selector) {\r\n    return new Sequence_1.default(new DistinctByIterator(this.iterator, selector));\r\n}\r\nexports.default = distinctBy;\r\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns a new sequence which discards the first `n` elements;\r\n *\r\n * @param {number} n\r\n * @returns {Sequence<T>}\r\n */\r\nfunction drop(n) {\r\n    return this.withIndex()\r\n        .filterNot(function (it) { return it.index < n; })\r\n        .map(function (it) { return it.value; });\r\n}\r\nexports.default = drop;\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns a new sequence consisting of the first `n` elements. All other elements\r\n * are discarded.\r\n *\r\n * @param {number} n\r\n * @returns {Sequence<T>}\r\n */\r\nfunction take(n) {\r\n    return this.withIndex()\r\n        .filter(function (it) { return it.index < n; })\r\n        .map(function (it) { return it.value; });\r\n}\r\nexports.default = take;\r\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the single element of the sequence or throws error if the sequence has more than\r\n * one element or none at all. If a `predicate` is passed returns the single element matching\r\n * the predicate or throws an error if more or less than one element match the predicate.\r\n *\r\n * @param {(value: T) => boolean} predicate\r\n * @returns {T}\r\n */\r\nfunction single(predicate) {\r\n    if (predicate != null) {\r\n        return this.filter(predicate).single();\r\n    }\r\n    if (!this.iterator.hasNext()) {\r\n        throw new Error(\"No such element\");\r\n    }\r\n    var item = this.iterator.next();\r\n    if (this.iterator.hasNext()) {\r\n        throw new Error(\"Expect single element\");\r\n    }\r\n    return item;\r\n}\r\nexports.default = single;\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the single element of the sequence or `null` if the sequence has more than\r\n * one element or none at all. If a `predicate` is passed returns the single element matching\r\n * the predicate or `null` if more or less than one element match the predicate.\r\n *\r\n * @param {(value: T) => boolean} predicate\r\n * @returns {T}\r\n */\r\nfunction singleOrNull(predicate) {\r\n    if (predicate != null) {\r\n        return this.filter(predicate).singleOrNull();\r\n    }\r\n    if (!this.iterator.hasNext()) {\r\n        return null;\r\n    }\r\n    var item = this.iterator.next();\r\n    if (this.iterator.hasNext()) {\r\n        return null;\r\n    }\r\n    return item;\r\n}\r\nexports.default = singleOrNull;\r\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns a new sequence consisting of all elements that don't match the given `predicate`.\r\n *\r\n * @param {(value: T) => boolean} predicate\r\n * @returns {Sequence<T>}\r\n */\r\nfunction filterNot(predicate) {\r\n    return this.filter(function (value) { return !predicate(value); });\r\n}\r\nexports.default = filterNot;\r\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Transforms each element into a key-value pair and returns the results as map. In case of\r\n * duplicate keys the last key-value pair overrides the other.\r\n *\r\n * @param {(value: T) => [K , V]} transform\r\n * @returns {Map<K, V>}\r\n */\r\nfunction associate(transform) {\r\n    var result = new Map();\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        var pair = transform(item);\r\n        result.set(pair[0], pair[1]);\r\n    }\r\n    return result;\r\n}\r\nexports.default = associate;\r\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns a map consisting of the elements mapped by the given `keySelector`. The value\r\n * can optionally be transformed into another value by specifying a `valueTransformer`.\r\n *\r\n * @param {(value: T) => K} keySelector\r\n * @param {(value: T) => V} valueTransform\r\n * @returns {Map<K, T | V>}\r\n */\r\nfunction associateBy(keySelector, valueTransform) {\r\n    var result = new Map();\r\n    var transform = valueTransform != null\r\n        ? valueTransform\r\n        : function (value) { return value; };\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        var key = keySelector(item);\r\n        var value = transform(item);\r\n        result.set(key, value);\r\n    }\r\n    return result;\r\n}\r\nexports.default = associateBy;\r\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Groups all elements of the sequence into a map. Keys are determined by the given `keySelector` function.\r\n *\r\n * @param {(value: T) => K} keySelector\r\n * @returns {Map<K, Array<T>>}\r\n */\r\nfunction groupBy(keySelector) {\r\n    var result = new Map();\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        var key = keySelector(item);\r\n        var array = result.get(key);\r\n        if (array == null) {\r\n            result.set(key, [item]);\r\n        }\r\n        else {\r\n            array.push(item);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexports.default = groupBy;\r\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Reduces the whole sequence to a single value by invoking `operation` with each element\r\n * from left to right. For every invocation of the operation `acc` is the result of the last\r\n * invocation. For the first invocation of the operation `acc` is the first element of the\r\n * sequence.\r\n *\r\n * @param {(acc: S, value: T) => S} operation\r\n * @returns {S}\r\n */\r\nfunction reduce(operation) {\r\n    if (!this.iterator.hasNext()) {\r\n        throw new Error(\"Cannot reduce empty sequence\");\r\n    }\r\n    var result = this.iterator.next();\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        result = operation(result, item);\r\n    }\r\n    return result;\r\n}\r\nexports.default = reduce;\r\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Reduces the whole sequence to a single value by invoking `operation` with each element\r\n * from left to right. For every invocation of the operation `acc` is the result of the last\r\n * invocation. For the first invocation of the operation `acc` is the first element of the\r\n * sequence. In addition the `index` of the current element is also passed to the operation.\r\n *\r\n * @param {(index: number, acc: S, element: T) => S} operation\r\n * @returns {S}\r\n */\r\nfunction reduceIndexed(operation) {\r\n    if (!this.iterator.hasNext()) {\r\n        throw new Error(\"Cannot reduce empty sequence\");\r\n    }\r\n    var index = 1;\r\n    var result = this.iterator.next();\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        result = operation(index, result, item);\r\n        index++;\r\n    }\r\n    return result;\r\n}\r\nexports.default = reduceIndexed;\r\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Accumulates all elements of the sequence into a single result by applying the given `operation` starting with\r\n * the `initial` value. The result of the last operation will be passed as accumulated value to the next invocation\r\n * of the operation until all elements of the sequence are processed.\r\n *\r\n * @param {R} initial\r\n * @param {(acc: R, element: T) => R} operation\r\n * @returns {R}\r\n */\r\nfunction fold(initial, operation) {\r\n    var result = initial;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        result = operation(result, item);\r\n    }\r\n    return result;\r\n}\r\nexports.default = fold;\r\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Accumulates all elements of the sequence into a single result by applying the given `operation` starting with\r\n * the `initial` value. The result of the last operation will be passed as accumulated value to the next invocation\r\n * of the operation as well as the `index` of the current element (zero-based) until all elements of the sequence\r\n * are processed.\r\n *\r\n * @param {R} initial\r\n * @param {(index: number, acc: R, element: T) => R} operation\r\n * @returns {R}\r\n */\r\nfunction foldIndexed(initial, operation) {\r\n    var result = initial;\r\n    var index = 0;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        result = operation(index, result, item);\r\n        index++;\r\n    }\r\n    return result;\r\n}\r\nexports.default = foldIndexed;\r\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\n/**\r\n * Returns a single flat sequence of all the items from all sequences or iterables.\r\n *\r\n * @returns {Sequence<T>}\r\n */\r\nfunction flatten() {\r\n    return this.flatMap(function (it) {\r\n        if (it instanceof Sequence_1.default) {\r\n            return it;\r\n        }\r\n        else {\r\n            return Sequence_1.asSequence(it);\r\n        }\r\n    });\r\n}\r\nexports.default = flatten;\r\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\nvar SequenceIterator_1 = __webpack_require__(1);\r\n/**\r\n * Returns a new sequence with all elements sorted ascending in natural order.\r\n *\r\n * @returns {Sequence<T>}\r\n */\r\nfunction sorted() {\r\n    var sorted = [];\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        sorted.push(item);\r\n    }\r\n    sorted.sort();\r\n    return new Sequence_1.default(new SequenceIterator_1.IterableIterator(sorted));\r\n}\r\nexports.default = sorted;\r\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\nvar SequenceIterator_1 = __webpack_require__(1);\r\n/**\r\n * Returns a new sequence with all elements sorted ascending by the value specified\r\n * by the given `selector` function.\r\n *\r\n * @param {(value: T) => R} selector\r\n * @returns {Sequence<T>}\r\n */\r\nfunction sortedBy(selector) {\r\n    var sorted = [];\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        sorted.push(item);\r\n    }\r\n    sorted.sort(function (item1, item2) {\r\n        var key1 = selector(item1);\r\n        var key2 = selector(item2);\r\n        if (key1 < key2) {\r\n            return -1;\r\n        }\r\n        if (key1 > key2) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    });\r\n    return new Sequence_1.default(new SequenceIterator_1.IterableIterator(sorted));\r\n}\r\nexports.default = sortedBy;\r\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\nvar SequenceIterator_1 = __webpack_require__(1);\r\n/**\r\n * Returns a new sequence with all elements sorted descending in natural order.\r\n *\r\n * @returns {Sequence<T>}\r\n */\r\nfunction sortedDescending() {\r\n    var sorted = [];\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        sorted.push(item);\r\n    }\r\n    sorted.sort(function (item1, item2) {\r\n        if (item1 < item2) {\r\n            return 1;\r\n        }\r\n        if (item1 > item2) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    });\r\n    return new Sequence_1.default(new SequenceIterator_1.IterableIterator(sorted));\r\n}\r\nexports.default = sortedDescending;\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\nvar SequenceIterator_1 = __webpack_require__(1);\r\n/**\r\n * Returns a new sequence with all elements sorted descending by the value specified\r\n * by the given `selector` function.\r\n *\r\n * @param {(value: T) => R} selector\r\n * @returns {Sequence<T>}\r\n */\r\nfunction sortedByDescending(selector) {\r\n    var sorted = [];\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        sorted.push(item);\r\n    }\r\n    sorted.sort(function (item1, item2) {\r\n        var key1 = selector(item1);\r\n        var key2 = selector(item2);\r\n        if (key1 < key2) {\r\n            return 1;\r\n        }\r\n        if (key1 > key2) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    });\r\n    return new Sequence_1.default(new SequenceIterator_1.IterableIterator(sorted));\r\n}\r\nexports.default = sortedByDescending;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\nvar SequenceIterator_1 = __webpack_require__(1);\r\n/**\r\n * Returns a new sequence with all elements sorted be the given `compare` function.\r\n *\r\n * @param {(a: T, b: T) => number} compare\r\n * @returns {Sequence<T>}\r\n */\r\nfunction sortedWith(compare) {\r\n    var sorted = [];\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        sorted.push(item);\r\n    }\r\n    sorted.sort(compare);\r\n    return new Sequence_1.default(new SequenceIterator_1.IterableIterator(sorted));\r\n}\r\nexports.default = sortedWith;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns a new sequence consisting of all non-null elements.\r\n *\r\n * @returns {Sequence<T>}\r\n */\r\nfunction filterNotNull() {\r\n    return this.filter(function (it) { return it !== null; });\r\n}\r\nexports.default = filterNotNull;\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\n/**\r\n * Transforms each element into another value by applying the given `transform` function and returns a new sequence.\r\n * Transformations into `null` values are discarded.\r\n *\r\n * @param {(value: T) => R} transform\r\n * @returns {Sequence<R>}\r\n */\r\nfunction mapNotNull(transform) {\r\n    return this.flatMap(function (value) {\r\n        var item = transform(value);\r\n        return item !== null\r\n            ? Sequence_1.sequenceOf(item)\r\n            : Sequence_1.emptySequence();\r\n    });\r\n}\r\nexports.default = mapNotNull;\r\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\nvar SequenceIterator_1 = __webpack_require__(1);\r\nvar AppendIterator = /** @class */ (function () {\r\n    function AppendIterator(first, second) {\r\n        this.first = first;\r\n        this.second = second;\r\n    }\r\n    AppendIterator.prototype.hasNext = function () {\r\n        return this.first.hasNext() || this.second.hasNext();\r\n    };\r\n    AppendIterator.prototype.next = function () {\r\n        return this.first.hasNext()\r\n            ? this.first.next()\r\n            : this.second.next();\r\n    };\r\n    return AppendIterator;\r\n}());\r\n/**\r\n * Appends the given `data` to the end of the sequence and returns a new sequence. Data can either be a single element,\r\n * an array of elements or a sequence of elements.\r\n *\r\n * @param {Sequence<T> | Array<T> | T} data\r\n * @returns {Sequence<T>}\r\n */\r\nfunction plus(data) {\r\n    if (data instanceof Sequence_1.default) {\r\n        return new Sequence_1.default(new AppendIterator(this.iterator, data.iterator));\r\n    }\r\n    else if (data instanceof Array) {\r\n        return new Sequence_1.default(new AppendIterator(this.iterator, new SequenceIterator_1.IterableIterator(data)));\r\n    }\r\n    else {\r\n        return new Sequence_1.default(new AppendIterator(this.iterator, new SequenceIterator_1.IterableIterator([data])));\r\n    }\r\n}\r\nexports.default = plus;\r\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\n/**\r\n * Removes the given `data` and returns a new sequence. Data can either be a single element, an array of elements\r\n * or a sequence of elements.\r\n *\r\n * @param {Sequence<T> | Array<T> | T} data\r\n * @returns {Sequence<T>}\r\n */\r\nfunction minus(data) {\r\n    if (data instanceof Sequence_1.default) {\r\n        var array_1 = data.toArray();\r\n        return this.filter(function (it) { return array_1.indexOf(it) < 0; });\r\n    }\r\n    else if (data instanceof Array) {\r\n        return this.filter(function (it) { return data.indexOf(it) < 0; });\r\n    }\r\n    else {\r\n        return this.filter(function (it) { return it !== data; });\r\n    }\r\n}\r\nexports.default = minus;\r\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sequence_1 = __webpack_require__(0);\r\nvar ZipIterator = /** @class */ (function () {\r\n    function ZipIterator(iterator1, iterator2) {\r\n        this.iterator1 = iterator1;\r\n        this.iterator2 = iterator2;\r\n    }\r\n    ZipIterator.prototype.hasNext = function () {\r\n        return this.iterator1.hasNext() && this.iterator2.hasNext();\r\n    };\r\n    ZipIterator.prototype.next = function () {\r\n        var item1 = this.iterator1.next();\r\n        var item2 = this.iterator2.next();\r\n        return [item1, item2];\r\n    };\r\n    return ZipIterator;\r\n}());\r\n/**\r\n * Returns a new sequence consisting of pairs built the elements of both sequences\r\n * with the same index. The resulting sequence has the length of the shortest input\r\n * sequence. All other elements are discarded.\r\n *\r\n * @param {Sequence<S>} other\r\n * @returns {Sequence<[T , S]>}\r\n */\r\nfunction zip(other) {\r\n    return new Sequence_1.default(new ZipIterator(this.iterator, other.iterator));\r\n}\r\nexports.default = zip;\r\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns a pair of arrays where the first array contains all first values\r\n * and the second array all second values from each input pair of the sequence.\r\n *\r\n * @returns {[Array<T> , Array<S>]}\r\n */\r\nfunction unzip() {\r\n    var array1 = [];\r\n    var array2 = [];\r\n    while (this.iterator.hasNext()) {\r\n        var _a = this.iterator.next(), first = _a[0], second = _a[1];\r\n        array1.push(first);\r\n        array2.push(second);\r\n    }\r\n    return [array1, array2];\r\n}\r\nexports.default = unzip;\r\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Evaluates the given `predicate` for each element of the sequence and assorts each element into one of two lists\r\n * according to the result of the predicate. Returns both lists as an object.\r\n *\r\n * @param {(value: T) => boolean} predicate\r\n * @returns {{true: Array<T>; false: Array<T>}}\r\n */\r\nfunction partition(predicate) {\r\n    var arrayTrue = [];\r\n    var arrayFalse = [];\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (predicate(item)) {\r\n            arrayTrue.push(item);\r\n        }\r\n        else {\r\n            arrayFalse.push(item);\r\n        }\r\n    }\r\n    return { 'true': arrayTrue, 'false': arrayFalse };\r\n}\r\nexports.default = partition;\r\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns all elements of the sequence as set. If a `set` is passed\r\n * the elements are added to this set.\r\n *\r\n * @param {Set<T>} set\r\n * @returns {Set<T>}\r\n */\r\nfunction toSet(set) {\r\n    var result = set || new Set();\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        result.add(item);\r\n    }\r\n    return result;\r\n}\r\nexports.default = toSet;\r\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns a map consisting of each key-value pair. If a `map` is passed\r\n * the pairs are set on this map. Duplicate keys override each other.\r\n *\r\n * @param {Map<K, V>} map\r\n * @returns {Map<K, V>}\r\n */\r\nfunction toMap(map) {\r\n    var result = map || new Map();\r\n    while (this.iterator.hasNext()) {\r\n        var pair = this.iterator.next();\r\n        var key = pair[0];\r\n        var value = pair[1];\r\n        result.set(key, value);\r\n    }\r\n    return result;\r\n}\r\nexports.default = toMap;\r\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the sum of all numbers.\r\n *\r\n * @returns {number}\r\n */\r\nfunction sum() {\r\n    var result = 0;\r\n    while (this.iterator.hasNext()) {\r\n        result += this.iterator.next();\r\n    }\r\n    return result;\r\n}\r\nexports.default = sum;\r\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the sum of all numbers specified by the given `selector` function.\r\n *\r\n * @param {(value: T) => number} selector\r\n * @returns {number}\r\n */\r\nfunction sumBy(selector) {\r\n    var result = 0;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        result += selector(item);\r\n    }\r\n    return result;\r\n}\r\nexports.default = sumBy;\r\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Splits the elements of the sequence into arrays which length is determined by\r\n * the given `chunkSize` and returns all chunks as array.\r\n *\r\n * @param {number} chunkSize\r\n * @returns {Array<Array<T>>}\r\n */\r\nfunction chunk(chunkSize) {\r\n    if (chunkSize < 1) {\r\n        throw new Error(\"chunkSize must be > 0 but is \" + chunkSize);\r\n    }\r\n    var result = [];\r\n    var index = 0;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        var chunk_1 = Math.floor(index / chunkSize);\r\n        if (result[chunk_1] == null) {\r\n            result[chunk_1] = [item];\r\n        }\r\n        else {\r\n            result[chunk_1].push(item);\r\n        }\r\n        index++;\r\n    }\r\n    return result;\r\n}\r\nexports.default = chunk;\r\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns a new sequence with all elements of the sequence in reverse order.\r\n *\r\n * @returns {Sequence<T>}\r\n */\r\nfunction reverse() {\r\n    return this.withIndex()\r\n        .sortedByDescending(function (it) { return it.index; })\r\n        .map(function (it) { return it.value; });\r\n}\r\nexports.default = reverse;\r\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the average of all numbers of the sequence or `NaN` if the sequence is empty.\r\n *\r\n * @returns {number}\r\n */\r\nfunction average() {\r\n    var sum = 0;\r\n    var count = 0;\r\n    while (this.iterator.hasNext()) {\r\n        sum += this.iterator.next();\r\n        count++;\r\n    }\r\n    return count === 0\r\n        ? Number.NaN\r\n        : sum / count;\r\n}\r\nexports.default = average;\r\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the maximum element of the sequence or `null` if sequence is empty.\r\n *\r\n * @returns {T}\r\n */\r\nfunction max() {\r\n    var max = null;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (max == null || item > max) {\r\n            max = item;\r\n        }\r\n    }\r\n    return max;\r\n}\r\nexports.default = max;\r\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the maximum element by comparing the results of the given `selector` function\r\n * for each element of the sequence or `null` if the sequence is empty.\r\n *\r\n * @param {(value: T) => R} selector\r\n * @returns {T}\r\n */\r\nfunction maxBy(selector) {\r\n    var max = null;\r\n    var maxSelected = null;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        var value = selector(item);\r\n        if (maxSelected == null || value > maxSelected) {\r\n            maxSelected = value;\r\n            max = item;\r\n        }\r\n    }\r\n    return max;\r\n}\r\nexports.default = maxBy;\r\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the minimum element of the sequence or `null` if sequence is empty.\r\n *\r\n * @returns {T}\r\n */\r\nfunction min() {\r\n    var min = null;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (min == null || item < min) {\r\n            min = item;\r\n        }\r\n    }\r\n    return min;\r\n}\r\nexports.default = min;\r\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the minimum element by comparing the results of the given `selector` function\r\n * for each element of the sequence or `null` if the sequence is empty.\r\n *\r\n * @param {(value: T) => R} selector\r\n * @returns {T}\r\n */\r\nfunction minBy(selector) {\r\n    var min = null;\r\n    var minSelected = null;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        var value = selector(item);\r\n        if (minSelected == null || value < minSelected) {\r\n            minSelected = value;\r\n            min = item;\r\n        }\r\n    }\r\n    return min;\r\n}\r\nexports.default = minBy;\r\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the maximum element of the sequence by evaluating the given `compare`\r\n * function or `null` if sequence is empty.\r\n *\r\n * @returns {T}\r\n */\r\nfunction maxWith(compare) {\r\n    var max = null;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (max == null || compare(item, max) > 0) {\r\n            max = item;\r\n        }\r\n    }\r\n    return max;\r\n}\r\nexports.default = maxWith;\r\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Returns the minimum element of the sequence by evaluating the given `compare`\r\n * function or `null` if sequence is empty.\r\n *\r\n * @returns {T}\r\n */\r\nfunction minWith(compare) {\r\n    var min = null;\r\n    while (this.iterator.hasNext()) {\r\n        var item = this.iterator.next();\r\n        if (min == null || compare(item, min) < 0) {\r\n            min = item;\r\n        }\r\n    }\r\n    return min;\r\n}\r\nexports.default = minWith;\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// sequency.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 50a89cd9b765a14dc197","import SequenceIterator, {IterableIterator} from \"./SequenceIterator\";\nimport map from \"./map\";\nimport filter from \"./filter\";\nimport flatMap from \"./flatMap\";\nimport firstOrNull from \"./firstOrNull\";\nimport first from \"./first\";\nimport lastOrNull from \"./lastOrNull\";\nimport onEach from \"./onEach\";\nimport forEach from \"./forEach\";\nimport toArray from \"./toArray\";\nimport last from \"./last\";\nimport all from \"./all\";\nimport any from \"./any\";\nimport none from \"./none\";\nimport count from \"./count\";\nimport distinct from \"./distinct\";\nimport contains from \"./contains\";\nimport indexOf from \"./indexOf\";\nimport elementAt from \"./elementAt\";\nimport elementAtOrNull from \"./elementAtOrNull\";\nimport elementAtOrElse from \"./elementAtOrElse\";\nimport indexOfFirst from \"./indexOfFirst\";\nimport indexOfLast from \"./indexOfLast\";\nimport joinToString from \"./joinToString\";\nimport mapIndexed from \"./mapIndexed\";\nimport withIndex from \"./withIndex\";\nimport filterIndexed from \"./filterIndexed\";\nimport forEachIndexed from \"./forEachIndexed\";\nimport distinctBy from \"./distinctBy\";\nimport drop from \"./drop\";\nimport take from \"./take\";\nimport single from \"./single\";\nimport singleOrNull from \"./singleOrNull\";\nimport filterNot from \"./filterNot\";\nimport associate from \"./associate\";\nimport associateBy from \"./associateBy\";\nimport groupBy from \"./groupBy\";\nimport reduce from \"./reduce\";\nimport reduceIndexed from \"./reduceIndexed\";\nimport fold from \"./fold\";\nimport foldIndexed from \"./foldIndexed\";\nimport flatten from \"./flatten\";\nimport sorted from \"./sorted\";\nimport sortedBy from \"./sortedBy\";\nimport sortedDescending from \"./sortedDescending\";\nimport sortedByDescending from \"./sortedByDescending\";\nimport sortedWith from \"./sortedWith\";\nimport filterNotNull from \"./filterNotNull\";\nimport mapNotNull from \"./mapNotNull\";\nimport plus from \"./plus\";\nimport minus from \"./minus\";\nimport zip from \"./zip\";\nimport unzip from \"./unzip\";\nimport partition from \"./partition\";\nimport toSet from \"./toSet\";\nimport toMap from \"./toMap\";\nimport sum from \"./sum\";\nimport sumBy from \"./sumBy\";\nimport chunk from \"./chunk\";\nimport reverse from \"./reverse\";\nimport average from \"./average\";\nimport max from \"./max\";\nimport maxBy from \"./maxBy\";\nimport min from \"./min\";\nimport minBy from \"./minBy\";\nimport maxWith from \"./maxWith\";\nimport minWith from \"./minWith\";\n\n/**\n * A Sequence accepts an iterator and provides a fluent functional API consisting\n * of various intermediate and terminal operations for processing the iterated data.\n * The operations are evaluated lazily to avoid examining all of the input data\n * when it's not necessary. Sequences can be iterated only once.\n */\nexport default class Sequence<T> {\n    constructor(readonly iterator: SequenceIterator<T>) {}\n\n    map = map;\n    mapNotNull = mapNotNull;\n    mapIndexed = mapIndexed;\n    filter = filter;\n    filterNot = filterNot;\n    filterNotNull = filterNotNull;\n    filterIndexed = filterIndexed;\n    flatMap = flatMap;\n    distinct = distinct;\n    distinctBy = distinctBy;\n    withIndex = withIndex;\n    drop = drop;\n    take = take;\n    onEach = onEach;\n    flatten = flatten;\n    sorted = sorted;\n    sortedDescending = sortedDescending;\n    sortedBy = sortedBy;\n    sortedByDescending = sortedByDescending;\n    sortedWith = sortedWith;\n    reverse = reverse;\n    forEach = forEach;\n    forEachIndexed = forEachIndexed;\n    toArray = toArray;\n    toList = toArray;\n    toSet = toSet;\n    toMap = toMap;\n    first = first;\n    firstOrNull = firstOrNull;\n    last = last;\n    lastOrNull = lastOrNull;\n    find = firstOrNull;\n    findLast = lastOrNull;\n    all = all;\n    any = any;\n    none = none;\n    count = count;\n    contains = contains;\n    indexOf = indexOf;\n    indexOfFirst = indexOfFirst;\n    indexOfLast = indexOfLast;\n    elementAt = elementAt;\n    elementAtOrNull = elementAtOrNull;\n    elementAtOrElse = elementAtOrElse;\n    joinTo = joinToString;\n    joinToString = joinToString;\n    single = single;\n    singleOrNull = singleOrNull;\n    associate = associate;\n    associateBy = associateBy;\n    groupBy = groupBy;\n    reduce = reduce;\n    reduceIndexed = reduceIndexed;\n    fold = fold;\n    foldIndexed = foldIndexed;\n    partition = partition;\n    chunk = chunk;\n    plus = plus;\n    minus = minus;\n    zip = zip;\n    unzip = unzip;\n    sum = sum;\n    sumBy = sumBy;\n    average = average;\n    max = max;\n    maxBy = maxBy;\n    maxWith = maxWith;\n    min = min;\n    minBy = minBy;\n    minWith = minWith;\n}\n\nexport function sequenceOf<T>(...args: Array<T>): Sequence<T> {\n    return asSequence(args);\n}\n\nexport function emptySequence<T>(): Sequence<T> {\n    return asSequence([]);\n}\n\nexport function asSequence<T>(iterable: Iterable<T>): Sequence<T> {\n    return new Sequence<T>(new IterableIterator(iterable));\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Sequence.ts","/**\n * The iterator used by `Sequence` to iterate over the underlying data.\n */\ninterface SequenceIterator<T> {\n    hasNext(): boolean\n    next(): T\n}\nexport default SequenceIterator;\n\nexport class IterableIterator<T> implements SequenceIterator<T> {\n    private readonly iterator: Iterator<T>;\n    private done = false;\n    private nextItem: T | undefined;\n\n    constructor(iterable: Iterable<T>) {\n        this.iterator = iterable[Symbol.iterator]();\n    }\n\n    hasNext(): boolean {\n        this.processNext();\n        return !this.done;\n    }\n\n    next(): T {\n        this.processNext();\n        const result = this.nextItem!;\n        this.nextItem = undefined;\n        return result;\n    }\n\n    private processNext() {\n        if (this.done || this.nextItem !== undefined) {\n            return;\n        }\n        const {done, value} = this.iterator.next();\n        if (done) {\n            this.done = done;\n            this.nextItem = undefined;\n        } else {\n            this.nextItem = value;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/SequenceIterator.ts","import SequenceIterator from \"./SequenceIterator\";\nimport Sequence from \"./Sequence\";\n\nclass MapIterator<S, T> implements SequenceIterator<T> {\n    constructor(\n        private readonly transform: (S) => T,\n        private readonly iterator: SequenceIterator<S>\n    ) {}\n\n    hasNext(): boolean {\n        return this.iterator.hasNext();\n    }\n\n    next(): T {\n        const item = this.iterator.next();\n        return this.transform(item);\n    }\n}\n\n/**\n * Transforms each element into another value by applying the given `transform` function and returns a new sequence.\n *\n * @param {(T) => S} transform\n * @returns {Sequence<S>}\n */\nfunction map<S, T>(this: Sequence<T>, transform: (element: T) => S): Sequence<S> {\n    return new Sequence(new MapIterator(transform, this.iterator));\n}\n\nexport default map;\n\n\n// WEBPACK FOOTER //\n// ./src/map.ts","import SequenceIterator from \"./SequenceIterator\";\nimport Sequence from \"./Sequence\";\n\nclass FilterIterator<T> implements SequenceIterator<T> {\n    private nextItem: T | undefined;\n    private done = false;\n\n    constructor(\n        private readonly predicate: (T) => boolean,\n        private readonly iterator: SequenceIterator<T>\n    ) {}\n\n    hasNext(): boolean {\n        this.processNext();\n        return !this.done;\n    }\n\n    next(): T {\n        this.processNext();\n        const result = this.nextItem!;\n        this.nextItem = undefined;\n        return result;\n    }\n\n    private processNext() {\n        if (this.done || this.nextItem !== undefined) {\n            return;\n        }\n        while (this.iterator.hasNext()) {\n            const item = this.iterator.next();\n            if (this.predicate(item)) {\n                this.nextItem = item;\n                return;\n            }\n        }\n        this.done = true;\n    }\n}\n\n/**\n * Returns a new sequence consisting of all elements that match the given `predicate`.\n *\n * @param {(T) => boolean} predicate\n * @returns {Sequence<T>}\n */\nfunction filter<T>(this: Sequence<T>, predicate: (T) => boolean): Sequence<T> {\n    return new Sequence(new FilterIterator(predicate, this.iterator));\n}\n\nexport default filter;\n\n\n// WEBPACK FOOTER //\n// ./src/filter.ts","import SequenceIterator from \"./SequenceIterator\";\nimport Sequence from \"./Sequence\";\n\nclass FlatMapIterator<S, T> implements SequenceIterator<T> {\n    private current: SequenceIterator<T> | undefined;\n\n    constructor(\n        private readonly transform: (S) => Sequence<T>,\n        private readonly iterator: SequenceIterator<S>\n    ) {}\n\n    next(): T {\n        this.processNext();\n        return this.current!.next();\n    }\n\n    hasNext(): boolean {\n        this.processNext();\n        return this.current != null;\n    }\n\n    private processNext() {\n        if (this.current != null) {\n            if (this.current.hasNext()) {\n                return;\n            } else {\n                this.current = undefined;\n            }\n        }\n        while (this.current == null && this.iterator.hasNext()) {\n            const element = this.iterator.next();\n            const sequence = this.transform(element);\n            if (sequence.iterator.hasNext()) {\n                this.current = sequence.iterator;\n            }\n        }\n    }\n}\n\n/**\n * Transforms each element into a sequence of items and returns a flat single sequence of all those items.\n *\n * @param {(value: S) => Sequence<T>} transform\n * @returns {Sequence<T>}\n */\nfunction flatMap<S, T>(this: Sequence<S>, transform: (value: S) => Sequence<T>): Sequence<T> {\n    return new Sequence(new FlatMapIterator(transform, this.iterator));\n}\n\nexport default flatMap;\n\n\n// WEBPACK FOOTER //\n// ./src/flatMap.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the first element of the sequence or the first element matching `predicate` if present, otherwise returns `null`.\n *\n * @param {(T) => boolean} predicate\n * @returns {T}\n */\nfunction firstOrNull<T>(this: Sequence<T>, predicate?: (T) => boolean): T | null {\n    if (predicate != null) {\n        return this.filter(predicate).firstOrNull();\n    }\n    return this.iterator.hasNext()\n        ? this.iterator.next()\n        : null;\n}\n\nexport default firstOrNull;\n\n\n// WEBPACK FOOTER //\n// ./src/firstOrNull.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the first element of the sequence or the first element matching `predicate` if present, otherwise throws\n * an error.\n *\n * @param {(T) => boolean} predicate\n * @returns {T}\n */\nfunction first<T>(this: Sequence<T>, predicate?: (T) => boolean): T {\n    if (predicate != null) {\n        return this.filter(predicate).first();\n    }\n    if (!this.iterator.hasNext()) {\n        throw new Error(\"No such element\");\n    }\n    return this.iterator.next();\n}\n\nexport default first;\n\n\n// WEBPACK FOOTER //\n// ./src/first.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the last element of the sequence or the last element matching `predicate` if present, otherwise returns `null`.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {T}\n */\nfunction lastOrNull<T>(this: Sequence<T>, predicate?: (value: T) => boolean): T | null {\n    if (predicate != null) {\n        return this.filter(predicate).lastOrNull();\n    }\n    let item: T | null = null;\n    while (this.iterator.hasNext()) {\n        item = this.iterator.next();\n    }\n    return item;\n}\n\nexport default lastOrNull;\n\n\n// WEBPACK FOOTER //\n// ./src/lastOrNull.ts","import Sequence from \"./Sequence\";\n\n/**\n * Performs the given `action` for each element and returns the sequence.\n *\n * @param {(value: T) => void} action\n * @returns {Sequence<T>}\n */\nfunction onEach<T>(this: Sequence<T>, action: (value: T) => void): Sequence<T> {\n    return this.map(it => {\n        action(it);\n        return it;\n    });\n}\n\nexport default onEach;\n\n\n// WEBPACK FOOTER //\n// ./src/onEach.ts","import Sequence from \"./Sequence\";\n\n/**\n * Performs the given `action` (side-effect) for each element of the sequence.\n *\n * @param {(T) => void} action\n */\nfunction forEach<T>(this: Sequence<T>, action: (T) => void) {\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        action(item);\n    }\n}\n\nexport default forEach;\n\n\n// WEBPACK FOOTER //\n// ./src/forEach.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns all elements of the sequence as array. If an `array` is passed\n * the elements are appended to the end of the array.\n *\n * @param {Array<T>} array\n * @returns {Array<T>}\n */\nfunction toArray<T>(this: Sequence<T>, array?: Array<T>): Array<T> {\n    const result: Array<T> = array || [];\n    while (this.iterator.hasNext()) {\n        result.push(this.iterator.next());\n    }\n    return result;\n}\n\nexport default toArray;\n\n\n// WEBPACK FOOTER //\n// ./src/toArray.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the last element of the sequence or the last element matching `predicate` if present, otherwise throws\n * an error.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {T}\n */\nfunction last<T>(this: Sequence<T>, predicate?: (value: T) => boolean): T {\n    if (predicate != null) {\n        return this.filter(predicate).last();\n    }\n    if (!this.iterator.hasNext()) {\n        throw new Error(\"No such element\");\n    }\n    let item: T;\n    while (this.iterator.hasNext()) {\n        item = this.iterator.next();\n    }\n    return item!;\n}\n\nexport default last;\n\n\n// WEBPACK FOOTER //\n// ./src/last.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns `true` if all elements match the given `predicate`.\n *\n * @param {(T) => boolean} predicate\n * @returns {boolean}\n */\nfunction all<T>(this: Sequence<T>, predicate: (T) => boolean): boolean {\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (!predicate(item)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport default all;\n\n\n// WEBPACK FOOTER //\n// ./src/all.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns `true` if at least one element match the given `predicate`.\n *\n * @param {(T) => boolean} predicate\n * @returns {boolean}\n */\nfunction any<T>(this: Sequence<T>, predicate?: (T) => boolean): boolean {\n    if (predicate == null) {\n        return this.iterator.hasNext();\n    }\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (predicate(item)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport default any;\n\n\n// WEBPACK FOOTER //\n// ./src/any.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns `true` if no element match the given `predicate` or if the sequence is empty\n * if no predicate is present.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {boolean}\n */\nfunction none<T>(this: Sequence<T>, predicate?: (value: T) => boolean): boolean {\n    if (predicate == null) {\n        return !this.iterator.hasNext();\n    }\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (predicate(item)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport default none;\n\n\n// WEBPACK FOOTER //\n// ./src/none.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the number of elements of this sequence. If `predicate` is present, returns\n * the number of elements matching the given `predicate`.\n *\n * @param {(T) => boolean} predicate\n * @returns {number}\n */\nfunction count<T>(this: Sequence<T>, predicate?: (T) => boolean): number {\n    let num = 0;\n    if (predicate == null) {\n        while (this.iterator.hasNext()) {\n            this.iterator.next();\n            num++;\n        }\n    } else {\n        while (this.iterator.hasNext()) {\n            const item = this.iterator.next();\n            if (predicate(item)) {\n                num++;\n            }\n        }\n    }\n    return num;\n}\n\nexport default count;\n\n\n// WEBPACK FOOTER //\n// ./src/count.ts","import Sequence from \"./Sequence\";\nimport SequenceIterator from \"./SequenceIterator\";\n\nclass DistinctIterator<T> implements SequenceIterator<T> {\n    private items: Array<T> = [];\n    private nextItem: T | undefined = undefined;\n    private done: boolean = false;\n\n    constructor(private readonly iterator: SequenceIterator<T>) {}\n\n    hasNext(): boolean {\n        this.processNext();\n        return !this.done;\n    }\n\n    next(): T {\n        this.processNext();\n        const result = this.nextItem!;\n        this.nextItem = undefined;\n        return result;\n    }\n\n    processNext() {\n        if (this.nextItem !== undefined || this.done) {\n            return;\n        }\n        while (this.iterator.hasNext()) {\n            const item = this.iterator.next();\n            if (this.items.indexOf(item) < 0) {\n                this.nextItem = item;\n                this.items.push(item);\n                return;\n            }\n        }\n        this.done = true;\n    }\n}\n\n/**\n * Returns a new sequence which discards all duplicate elements.\n *\n * @returns {Sequence<T>}\n */\nfunction distinct<T>(this: Sequence<T>): Sequence<T> {\n    return new Sequence(new DistinctIterator(this.iterator));\n}\n\nexport default distinct;\n\n\n// WEBPACK FOOTER //\n// ./src/distinct.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns `true` if the sequence contains the given `element`.\n *\n * @param {T} element\n * @returns {boolean}\n */\nfunction contains<T>(this: Sequence<T>, element: T): boolean {\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (element === item) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport default contains;\n\n\n// WEBPACK FOOTER //\n// ./src/contains.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the zero-based index of the given `element` or -1 if the sequence does not contain the element.\n *\n * @param {T} element\n * @returns {number}\n */\nfunction indexOf<T>(this: Sequence<T>, element: T): number {\n    let index = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (item === element) {\n            return index;\n        }\n        index++;\n    }\n    return -1;\n}\n\nexport default indexOf;\n\n\n// WEBPACK FOOTER //\n// ./src/indexOf.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the element at position `index` (zero-based) or throws an error if `index`\n * is out of bounds.\n *\n * @param {number} index\n * @returns {T}\n */\nfunction elementAt<T>(this: Sequence<T>, index: number): T {\n    let i = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (i === index) {\n            return item;\n        }\n        i++;\n    }\n    throw new Error(\"Index out of bounds: \" + index);\n}\n\nexport default elementAt;\n\n\n// WEBPACK FOOTER //\n// ./src/elementAt.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the element at position `index` (zero-based) or `null` if `index`\n * is out of bounds.\n *\n * @param {number} index\n * @returns {T}\n */\nfunction elementAtOrNull<T>(this: Sequence<T>, index: number): T | null {\n    let i = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (i === index) {\n            return item;\n        }\n        i++;\n    }\n    return null;\n}\n\nexport default elementAtOrNull;\n\n\n// WEBPACK FOOTER //\n// ./src/elementAtOrNull.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the element at position `index` (zero-based). If `index` is out of bounds returns\n * the result of the given `defaultValue` function.\n *\n * @param {number} index\n * @param defaultValue\n * @returns {T}\n */\nfunction elementAtOrElse<T>(this: Sequence<T>, index: number, defaultValue: (index: number) => T): T {\n    let i = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (i === index) {\n            return item;\n        }\n        i++;\n    }\n    return defaultValue(index);\n}\n\nexport default elementAtOrElse;\n\n\n// WEBPACK FOOTER //\n// ./src/elementAtOrElse.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the zero-based index of the first element matching the given `predicate` or -1 if no element matches\n * the predicate.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {number}\n */\nfunction indexOfFirst<T>(this: Sequence<T>, predicate: (value: T) => boolean): number {\n    let index = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (predicate(item)) {\n            return index;\n        }\n        index++;\n    }\n    return -1;\n}\n\nexport default indexOfFirst;\n\n\n// WEBPACK FOOTER //\n// ./src/indexOfFirst.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the zero-based index of the last element matching the given `predicate` or -1 if no element matches\n * the predicate.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {number}\n */\nfunction indexOfLast<T>(this: Sequence<T>, predicate: (value: T) => boolean): number {\n    let index = 0;\n    let result = -1;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (predicate(item)) {\n            result = index;\n        }\n        index++;\n    }\n    return result;\n}\n\nexport default indexOfLast;\n\n\n// WEBPACK FOOTER //\n// ./src/indexOfLast.ts","import Sequence from \"./Sequence\";\n\nexport interface JoinConfig<T> {\n    value?: string,\n    separator?: string\n    prefix?: string\n    postfix?: string\n    limit?: number\n    truncated?: string\n    transform?: (value: T) => string\n}\n\nconst defaults = {\n    value: \"\",\n    separator: \", \",\n    prefix: \"\",\n    postfix: \"\",\n    limit: -1,\n    truncated: \"...\",\n    transform: undefined\n};\n\n/**\n * Joins all elements of the sequence into a string with the given configuration.\n *\n * @param {JoinConfig<T>} config\n * @returns {string}\n */\nfunction joinToString<T>(this: Sequence<T>, config: JoinConfig<T> = defaults): string {\n    const {\n        value = defaults.value,\n        separator = defaults.separator,\n        prefix = defaults.prefix,\n        postfix = defaults.postfix,\n        limit = defaults.limit,\n        truncated = defaults.truncated,\n        transform = defaults.transform\n    } = config;\n\n    let result = `${value}${prefix}`;\n    let count = 0;\n\n    while (this.iterator.hasNext()) {\n        count++;\n        const item = this.iterator.next();\n        if (count > 1) {\n            result += separator;\n        }\n        if (limit < 0 || count <= limit) {\n            result += transform != null\n                ? transform(item)\n                : String(item);\n        } else {\n            break;\n        }\n    }\n\n    if (limit >= 0 && count > limit) {\n        result += truncated;\n    }\n\n    result += postfix;\n    return result;\n}\n\nexport default joinToString;\n\n\n// WEBPACK FOOTER //\n// ./src/joinToString.ts","import Sequence from \"./Sequence\";\n\n/**\n * Transforms each element into another value by applying the given `transform` function and returns a new sequence.\n *\n * @param {(index: number, value: T) => R} transform\n * @returns {Sequence<R>}\n */\nfunction mapIndexed<T, R>(this: Sequence<T>, transform: (index: number, value: T) => R): Sequence<R> {\n    return this.withIndex()\n        .map(it => transform(it.index, it.value));\n}\n\nexport default mapIndexed;\n\n\n// WEBPACK FOOTER //\n// ./src/mapIndexed.ts","import Sequence from \"./Sequence\";\nimport IndexedValue from \"./IndexedValue\";\nimport SequenceIterator from \"./SequenceIterator\";\n\nclass IndexIterator<T> implements SequenceIterator<IndexedValue<T>> {\n    private index = -1;\n\n    constructor(private readonly iterator: SequenceIterator<T>) {}\n\n    hasNext(): boolean {\n        return this.iterator.hasNext();\n    }\n\n    next(): IndexedValue<T> {\n        const value = this.iterator.next();\n        this.index++;\n        return {index: this.index, value};\n    }\n}\n\n/**\n * Returns a new sequence consisting of indexed values for all original elements.\n *\n * @returns {Sequence<IndexedValue<T>>}\n */\nfunction withIndex<T>(this: Sequence<T>): Sequence<IndexedValue<T>> {\n    return new Sequence(new IndexIterator(this.iterator));\n}\n\nexport default withIndex;\n\n\n// WEBPACK FOOTER //\n// ./src/withIndex.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a new sequence consisting of all elements that match the given `predicate`.\n *\n * @param {(index: number, value: T) => boolean} predicate\n * @returns {Sequence<T>}\n */\nfunction filterIndexed<T>(this: Sequence<T>, predicate: (index: number, value: T) => boolean): Sequence<T> {\n    return this.withIndex()\n        .filter(it => predicate(it.index, it.value))\n        .map(it => it.value);\n}\n\nexport default filterIndexed;\n\n\n// WEBPACK FOOTER //\n// ./src/filterIndexed.ts","import Sequence from \"./Sequence\";\n\n/**\n * Performs the given `action` (side-effect) for each element of the sequence and passes the `index` of the current\n * element (zero-based).\n *\n * @param {(index: number, value: T) => void} action\n */\nfunction forEachIndexed<T>(this: Sequence<T>, action: (index: number, value: T) => void) {\n    this.withIndex()\n        .forEach(it => action(it.index, it.value));\n}\n\nexport default forEachIndexed;\n\n\n// WEBPACK FOOTER //\n// ./src/forEachIndexed.ts","import Sequence from \"./Sequence\";\nimport SequenceIterator from \"./SequenceIterator\";\n\nclass DistinctByIterator<T, K> implements SequenceIterator<T> {\n    private keys: Array<K> = [];\n    private nextItem: T | undefined;\n    private done: boolean = false;\n\n    constructor(\n        private readonly iterator: SequenceIterator<T>,\n        private readonly selector: (item: T) => K\n    ) {}\n\n    hasNext(): boolean {\n        this.processNext();\n        return !this.done;\n    }\n\n    next(): T {\n        this.processNext();\n        const result = this.nextItem!;\n        this.nextItem = undefined;\n        return result;\n    }\n\n    processNext() {\n        if (this.nextItem !== undefined || this.done) {\n            return;\n        }\n        while (this.iterator.hasNext()) {\n            const item = this.iterator.next();\n            const key = this.selector(item);\n            if (this.keys.indexOf(key) < 0) {\n                this.nextItem = item;\n                this.keys.push(key);\n                return;\n            }\n        }\n        this.done = true;\n    }\n}\n\n/**\n * Returns a new sequence which discards all elements with duplicate items determined\n * by the given `selector`.\n *\n * @param {(item: T) => K} selector\n * @returns {Sequence<T>}\n */\nfunction distinctBy<T, K>(this: Sequence<T>, selector: (item: T) => K): Sequence<T> {\n    return new Sequence(new DistinctByIterator(this.iterator, selector));\n}\n\nexport default distinctBy;\n\n\n\n// WEBPACK FOOTER //\n// ./src/distinctBy.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a new sequence which discards the first `n` elements;\n *\n * @param {number} n\n * @returns {Sequence<T>}\n */\nfunction drop<T>(this: Sequence<T>, n: number): Sequence<T> {\n    return this.withIndex()\n        .filterNot(it => it.index < n)\n        .map(it => it.value);\n}\n\nexport default drop;\n\n\n// WEBPACK FOOTER //\n// ./src/drop.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a new sequence consisting of the first `n` elements. All other elements\n * are discarded.\n *\n * @param {number} n\n * @returns {Sequence<T>}\n */\nexport default function take<T>(this: Sequence<T>, n: number): Sequence<T> {\n    return this.withIndex()\n        .filter(it => it.index < n)\n        .map(it => it.value);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/take.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the single element of the sequence or throws error if the sequence has more than\n * one element or none at all. If a `predicate` is passed returns the single element matching\n * the predicate or throws an error if more or less than one element match the predicate.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {T}\n */\nfunction single<T>(this: Sequence<T>, predicate?: (value: T) => boolean): T {\n    if (predicate != null) {\n        return this.filter(predicate).single();\n    }\n    if (!this.iterator.hasNext()) {\n        throw new Error(\"No such element\");\n    }\n    const item = this.iterator.next();\n    if (this.iterator.hasNext()) {\n        throw new Error(\"Expect single element\");\n    }\n    return item;\n}\n\nexport default single;\n\n\n// WEBPACK FOOTER //\n// ./src/single.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the single element of the sequence or `null` if the sequence has more than\n * one element or none at all. If a `predicate` is passed returns the single element matching\n * the predicate or `null` if more or less than one element match the predicate.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {T}\n */\nfunction singleOrNull<T>(this: Sequence<T>, predicate?: (value: T) => boolean): T | null {\n    if (predicate != null) {\n        return this.filter(predicate).singleOrNull();\n    }\n    if (!this.iterator.hasNext()) {\n        return null;\n    }\n    const item = this.iterator.next();\n    if (this.iterator.hasNext()) {\n        return null;\n    }\n    return item;\n}\n\nexport default singleOrNull;\n\n\n// WEBPACK FOOTER //\n// ./src/singleOrNull.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a new sequence consisting of all elements that don't match the given `predicate`.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {Sequence<T>}\n */\nfunction filterNot<T>(this: Sequence<T>, predicate: (value: T) => boolean): Sequence<T> {\n    return this.filter((value: T) => !predicate(value));\n}\n\nexport default filterNot;\n\n\n// WEBPACK FOOTER //\n// ./src/filterNot.ts","import Sequence from \"./Sequence\";\n\n/**\n * Transforms each element into a key-value pair and returns the results as map. In case of\n * duplicate keys the last key-value pair overrides the other.\n *\n * @param {(value: T) => [K , V]} transform\n * @returns {Map<K, V>}\n */\nfunction associate<T, K, V>(this: Sequence<T>, transform: (value: T) => [K, V]): Map<K, V> {\n    const result = new Map<K, V>();\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        const pair = transform(item);\n        result.set(pair[0], pair[1]);\n    }\n    return result;\n}\n\nexport default associate;\n\n\n// WEBPACK FOOTER //\n// ./src/associate.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a map consisting of the elements mapped by the given `keySelector`. The value\n * can optionally be transformed into another value by specifying a `valueTransformer`.\n *\n * @param {(value: T) => K} keySelector\n * @param {(value: T) => V} valueTransform\n * @returns {Map<K, T | V>}\n */\nfunction associateBy<T, K, V>(this: Sequence<T>,\n                              keySelector: (value: T) => K,\n                              valueTransform?: (value: T) => V): Map<K, V | T> {\n    const result = new Map<K, V | T>();\n    const transform = valueTransform != null\n        ? valueTransform\n        : (value: T) => value;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        const key = keySelector(item);\n        const value = transform(item);\n        result.set(key, value);\n    }\n    return result;\n}\n\nexport default associateBy;\n\n\n// WEBPACK FOOTER //\n// ./src/associateBy.ts","import Sequence from \"./Sequence\";\n\n/**\n * Groups all elements of the sequence into a map. Keys are determined by the given `keySelector` function.\n *\n * @param {(value: T) => K} keySelector\n * @returns {Map<K, Array<T>>}\n */\nfunction groupBy<T, K>(this: Sequence<T>, keySelector: (value: T) => K): Map<K, Array<T>> {\n    const result = new Map<K, Array<T>>();\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        const key = keySelector(item);\n        const array = result.get(key);\n        if (array == null) {\n            result.set(key, [item]);\n        } else {\n            array.push(item);\n        }\n    }\n    return result;\n}\n\nexport default groupBy;\n\n\n// WEBPACK FOOTER //\n// ./src/groupBy.ts","import Sequence from \"./Sequence\";\n\n/**\n * Reduces the whole sequence to a single value by invoking `operation` with each element\n * from left to right. For every invocation of the operation `acc` is the result of the last\n * invocation. For the first invocation of the operation `acc` is the first element of the\n * sequence.\n *\n * @param {(acc: S, value: T) => S} operation\n * @returns {S}\n */\nfunction reduce<S, T extends S>(this: Sequence<T>, operation: (acc: S, value: T) => S): S {\n    if (!this.iterator.hasNext()) {\n        throw new Error(\"Cannot reduce empty sequence\");\n    }\n    let result: S = this.iterator.next();\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        result = operation(result, item);\n    }\n    return result;\n}\n\nexport default reduce;\n\n\n// WEBPACK FOOTER //\n// ./src/reduce.ts","import Sequence from \"./Sequence\";\n\n/**\n * Reduces the whole sequence to a single value by invoking `operation` with each element\n * from left to right. For every invocation of the operation `acc` is the result of the last\n * invocation. For the first invocation of the operation `acc` is the first element of the\n * sequence. In addition the `index` of the current element is also passed to the operation.\n *\n * @param {(index: number, acc: S, element: T) => S} operation\n * @returns {S}\n */\nfunction reduceIndexed<S, T extends S>(this: Sequence<T>, operation: (index: number, acc: S, element: T) => S): S {\n    if (!this.iterator.hasNext()) {\n        throw new Error(\"Cannot reduce empty sequence\");\n    }\n    let index = 1;\n    let result: S = this.iterator.next();\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        result = operation(index, result, item);\n        index++;\n    }\n    return result;\n}\n\nexport default reduceIndexed;\n\n\n// WEBPACK FOOTER //\n// ./src/reduceIndexed.ts","import Sequence from \"./Sequence\";\n\n/**\n * Accumulates all elements of the sequence into a single result by applying the given `operation` starting with\n * the `initial` value. The result of the last operation will be passed as accumulated value to the next invocation\n * of the operation until all elements of the sequence are processed.\n *\n * @param {R} initial\n * @param {(acc: R, element: T) => R} operation\n * @returns {R}\n */\nfunction fold<T, R>(this: Sequence<T>, initial: R, operation: (acc: R, element: T) => R): R {\n    let result = initial;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        result = operation(result, item);\n    }\n    return result;\n}\n\nexport default fold;\n\n\n// WEBPACK FOOTER //\n// ./src/fold.ts","import Sequence from \"./Sequence\";\n\n/**\n * Accumulates all elements of the sequence into a single result by applying the given `operation` starting with\n * the `initial` value. The result of the last operation will be passed as accumulated value to the next invocation\n * of the operation as well as the `index` of the current element (zero-based) until all elements of the sequence\n * are processed.\n *\n * @param {R} initial\n * @param {(index: number, acc: R, element: T) => R} operation\n * @returns {R}\n */\nfunction foldIndexed<T, R>(this: Sequence<T>, initial: R, operation: (index: number, acc: R, element: T) => R): R {\n    let result = initial;\n    let index = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        result = operation(index, result, item);\n        index++;\n    }\n    return result;\n}\n\nexport default foldIndexed;\n\n\n// WEBPACK FOOTER //\n// ./src/foldIndexed.ts","import Sequence, {asSequence} from \"./Sequence\";\n\n/**\n * Returns a single flat sequence of all the items from all sequences or iterables.\n *\n * @returns {Sequence<T>}\n */\nfunction flatten<T>(this: Sequence<Sequence<T> | Iterable<T>>): Sequence<T> {\n    return this.flatMap(it => {\n        if (it instanceof Sequence) {\n            return it;\n        } else {\n            return asSequence(it);\n        }\n    });\n}\n\nexport default flatten;\n\n\n// WEBPACK FOOTER //\n// ./src/flatten.ts","import Sequence from \"./Sequence\";\nimport {IterableIterator} from \"./SequenceIterator\";\n\n/**\n * Returns a new sequence with all elements sorted ascending in natural order.\n *\n * @returns {Sequence<T>}\n */\nfunction sorted<T>(this: Sequence<T>): Sequence<T> {\n    const sorted: Array<T> = [];\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        sorted.push(item);\n    }\n    sorted.sort();\n    return new Sequence(new IterableIterator(sorted));\n}\n\nexport default sorted;\n\n\n// WEBPACK FOOTER //\n// ./src/sorted.ts","import Sequence from \"./Sequence\";\nimport {IterableIterator} from \"./SequenceIterator\";\n\n/**\n * Returns a new sequence with all elements sorted ascending by the value specified\n * by the given `selector` function.\n *\n * @param {(value: T) => R} selector\n * @returns {Sequence<T>}\n */\nfunction sortedBy<T, R>(this: Sequence<T>, selector: (value: T) => R): Sequence<T> {\n    const sorted: Array<T> = [];\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        sorted.push(item);\n    }\n    sorted.sort((item1: T, item2: T) => {\n        const key1 = selector(item1);\n        const key2 = selector(item2);\n        if (key1 < key2) {\n            return -1;\n        }\n        if (key1 > key2) {\n            return 1;\n        }\n        return 0;\n    });\n    return new Sequence(new IterableIterator(sorted));\n}\n\nexport default sortedBy;\n\n\n// WEBPACK FOOTER //\n// ./src/sortedBy.ts","import Sequence from \"./Sequence\";\nimport {IterableIterator} from \"./SequenceIterator\";\n\n/**\n * Returns a new sequence with all elements sorted descending in natural order.\n *\n * @returns {Sequence<T>}\n */\nfunction sortedDescending<T>(this: Sequence<T>): Sequence<T> {\n    const sorted: Array<T> = [];\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        sorted.push(item);\n    }\n    sorted.sort((item1: T, item2: T) => {\n        if (item1 < item2) {\n            return 1;\n        }\n        if (item1 > item2) {\n            return -1\n        }\n        return 0;\n    });\n    return new Sequence(new IterableIterator(sorted));\n}\n\nexport default sortedDescending;\n\n\n// WEBPACK FOOTER //\n// ./src/sortedDescending.ts","import Sequence from \"./Sequence\";\nimport {IterableIterator} from \"./SequenceIterator\";\n\n/**\n * Returns a new sequence with all elements sorted descending by the value specified\n * by the given `selector` function.\n *\n * @param {(value: T) => R} selector\n * @returns {Sequence<T>}\n */\nfunction sortedByDescending<T, R>(this: Sequence<T>, selector: (value: T) => R): Sequence<T> {\n    const sorted: Array<T> = [];\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        sorted.push(item);\n    }\n    sorted.sort((item1: T, item2: T) => {\n        const key1 = selector(item1);\n        const key2 = selector(item2);\n        if (key1 < key2) {\n            return 1;\n        }\n        if (key1 > key2) {\n            return -1;\n        }\n        return 0;\n    });\n    return new Sequence(new IterableIterator(sorted));\n}\n\nexport default sortedByDescending;\n\n\n// WEBPACK FOOTER //\n// ./src/sortedByDescending.ts","import Sequence from \"./Sequence\";\nimport {IterableIterator} from \"./SequenceIterator\";\n\n/**\n * Returns a new sequence with all elements sorted be the given `compare` function.\n *\n * @param {(a: T, b: T) => number} compare\n * @returns {Sequence<T>}\n */\nfunction sortedWith<T>(this: Sequence<T>, compare: (a: T, b: T) => number): Sequence<T> {\n    const sorted: Array<T> = [];\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        sorted.push(item);\n    }\n    sorted.sort(compare);\n    return new Sequence(new IterableIterator(sorted));\n}\n\nexport default sortedWith;\n\n\n// WEBPACK FOOTER //\n// ./src/sortedWith.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a new sequence consisting of all non-null elements.\n *\n * @returns {Sequence<T>}\n */\nfunction filterNotNull<T>(this: Sequence<T>): Sequence<T> {\n    return this.filter(it => it !== null);\n}\n\nexport default filterNotNull;\n\n\n// WEBPACK FOOTER //\n// ./src/filterNotNull.ts","import Sequence, {emptySequence, sequenceOf} from \"./Sequence\";\n\n/**\n * Transforms each element into another value by applying the given `transform` function and returns a new sequence.\n * Transformations into `null` values are discarded.\n *\n * @param {(value: T) => R} transform\n * @returns {Sequence<R>}\n */\nfunction mapNotNull<T, R>(this: Sequence<T>, transform: (value: T) => R | null): Sequence<R> {\n    return this.flatMap((value: T) => {\n        const item = transform(value);\n        return item !== null\n            ? sequenceOf(item)\n            : emptySequence();\n    });\n}\n\nexport default mapNotNull;\n\n\n// WEBPACK FOOTER //\n// ./src/mapNotNull.ts","import Sequence from \"./Sequence\";\nimport SequenceIterator, {IterableIterator} from \"./SequenceIterator\";\n\nclass AppendIterator<T> implements SequenceIterator<T> {\n    constructor(\n        private readonly first: SequenceIterator<T>,\n        private readonly second: SequenceIterator<T>\n    ) {}\n\n    hasNext(): boolean {\n        return this.first.hasNext() || this.second.hasNext();\n    }\n\n    next(): T {\n        return this.first.hasNext()\n            ? this.first.next()\n            : this.second.next();\n    }\n\n}\n\n/**\n * Appends the given `data` to the end of the sequence and returns a new sequence. Data can either be a single element,\n * an array of elements or a sequence of elements.\n *\n * @param {Sequence<T> | Array<T> | T} data\n * @returns {Sequence<T>}\n */\nfunction plus<T>(this: Sequence<T>, data: T | Sequence<T> | Array<T>): Sequence<T> {\n    if (data instanceof Sequence) {\n        return new Sequence(new AppendIterator(this.iterator, data.iterator));\n    } else if (data instanceof Array) {\n        return new Sequence(new AppendIterator(this.iterator, new IterableIterator(data)));\n    } else {\n        return new Sequence(new AppendIterator(this.iterator, new IterableIterator([data])));\n    }\n}\n\nexport default plus;\n\n\n// WEBPACK FOOTER //\n// ./src/plus.ts","import Sequence from \"./Sequence\";\n\n/**\n * Removes the given `data` and returns a new sequence. Data can either be a single element, an array of elements\n * or a sequence of elements.\n *\n * @param {Sequence<T> | Array<T> | T} data\n * @returns {Sequence<T>}\n */\nfunction minus<T>(this: Sequence<T>, data: T | Sequence<T> | Array<T>): Sequence<T> {\n    if (data instanceof Sequence) {\n        const array: Array<T> = data.toArray();\n        return this.filter(it => array.indexOf(it) < 0)\n    } else if (data instanceof Array) {\n        return this.filter(it => data.indexOf(it) < 0)\n    } else {\n        return this.filter(it => it !== data);\n    }\n}\n\nexport default minus;\n\n\n// WEBPACK FOOTER //\n// ./src/minus.ts","import Sequence from \"./Sequence\";\nimport SequenceIterator from \"./SequenceIterator\";\n\nclass ZipIterator<T, S> implements SequenceIterator<[T, S]> {\n    constructor(\n        private readonly iterator1: SequenceIterator<T>,\n        private readonly iterator2: SequenceIterator<S>\n    ) {}\n\n    hasNext(): boolean {\n        return this.iterator1.hasNext() && this.iterator2.hasNext();\n    }\n\n    next(): [T, S] {\n        const item1 = this.iterator1.next();\n        const item2 = this.iterator2.next();\n        return [item1, item2];\n    }\n\n}\n\n/**\n * Returns a new sequence consisting of pairs built the elements of both sequences\n * with the same index. The resulting sequence has the length of the shortest input\n * sequence. All other elements are discarded.\n *\n * @param {Sequence<S>} other\n * @returns {Sequence<[T , S]>}\n */\nfunction zip<T, S>(this: Sequence<T>, other: Sequence<S>): Sequence<[T, S]> {\n    return new Sequence(new ZipIterator(this.iterator, other.iterator));\n}\n\nexport default zip;\n\n\n// WEBPACK FOOTER //\n// ./src/zip.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a pair of arrays where the first array contains all first values\n * and the second array all second values from each input pair of the sequence.\n *\n * @returns {[Array<T> , Array<S>]}\n */\nfunction unzip<T, S>(this: Sequence<[T, S]>): [Array<T>, Array<S>] {\n    const array1: Array<T> = [];\n    const array2: Array<S> = [];\n    while (this.iterator.hasNext()) {\n        const [first, second] = this.iterator.next();\n        array1.push(first);\n        array2.push(second);\n    }\n    return [array1, array2];\n}\n\nexport default unzip;\n\n\n// WEBPACK FOOTER //\n// ./src/unzip.ts","import Sequence from \"./Sequence\";\n\n/**\n * Evaluates the given `predicate` for each element of the sequence and assorts each element into one of two lists\n * according to the result of the predicate. Returns both lists as an object.\n *\n * @param {(value: T) => boolean} predicate\n * @returns {{true: Array<T>; false: Array<T>}}\n */\nfunction partition<T>(this: Sequence<T>, predicate: (value: T) => boolean): { 'true': Array<T>, 'false': Array<T> } {\n    const arrayTrue: Array<T> = [];\n    const arrayFalse: Array<T> = [];\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (predicate(item)) {\n            arrayTrue.push(item);\n        } else {\n            arrayFalse.push(item);\n        }\n    }\n    return {'true': arrayTrue, 'false': arrayFalse};\n}\n\nexport default partition;\n\n\n// WEBPACK FOOTER //\n// ./src/partition.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns all elements of the sequence as set. If a `set` is passed\n * the elements are added to this set.\n *\n * @param {Set<T>} set\n * @returns {Set<T>}\n */\nfunction toSet<T>(this: Sequence<T>, set?: Set<T>): Set<T> {\n    const result = set || new Set();\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        result.add(item);\n    }\n    return result;\n}\n\nexport default toSet;\n\n\n// WEBPACK FOOTER //\n// ./src/toSet.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a map consisting of each key-value pair. If a `map` is passed\n * the pairs are set on this map. Duplicate keys override each other.\n *\n * @param {Map<K, V>} map\n * @returns {Map<K, V>}\n */\nfunction toMap<K, V>(this: Sequence<[K, V]>, map?: Map<K, V>): Map<K, V> {\n    const result = map || new Map<K, V>();\n    while (this.iterator.hasNext()) {\n        const pair = this.iterator.next();\n        const key = pair[0];\n        const value = pair[1];\n        result.set(key, value);\n    }\n    return result;\n}\n\nexport default toMap;\n\n\n// WEBPACK FOOTER //\n// ./src/toMap.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the sum of all numbers.\n *\n * @returns {number}\n */\nfunction sum(this: Sequence<number>): number {\n    let result = 0;\n    while (this.iterator.hasNext()) {\n        result += this.iterator.next();\n    }\n    return result;\n}\n\nexport default sum;\n\n\n// WEBPACK FOOTER //\n// ./src/sum.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the sum of all numbers specified by the given `selector` function.\n *\n * @param {(value: T) => number} selector\n * @returns {number}\n */\nfunction sumBy<T>(this: Sequence<T>, selector: (value: T) => number): number {\n    let result = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        result += selector(item);\n    }\n    return result;\n}\n\nexport default sumBy;\n\n\n// WEBPACK FOOTER //\n// ./src/sumBy.ts","import Sequence from \"./Sequence\";\n\n/**\n * Splits the elements of the sequence into arrays which length is determined by\n * the given `chunkSize` and returns all chunks as array.\n *\n * @param {number} chunkSize\n * @returns {Array<Array<T>>}\n */\nfunction chunk<T>(this: Sequence<T>, chunkSize: number): Array<Array<T>> {\n    if (chunkSize < 1) {\n        throw new Error(\"chunkSize must be > 0 but is \" + chunkSize);\n    }\n    const result: Array<Array<T>> = [];\n    let index = 0;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        const chunk = Math.floor(index / chunkSize);\n        if (result[chunk] == null) {\n            result[chunk] = [item];\n        } else {\n            result[chunk].push(item);\n        }\n        index++;\n    }\n    return result;\n}\n\nexport default chunk;\n\n\n// WEBPACK FOOTER //\n// ./src/chunk.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns a new sequence with all elements of the sequence in reverse order.\n *\n * @returns {Sequence<T>}\n */\nfunction reverse<T>(this: Sequence<T>): Sequence<T> {\n    return this.withIndex()\n        .sortedByDescending(it => it.index)\n        .map(it => it.value);\n}\n\nexport default reverse;\n\n\n// WEBPACK FOOTER //\n// ./src/reverse.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the average of all numbers of the sequence or `NaN` if the sequence is empty.\n *\n * @returns {number}\n */\nfunction average(this: Sequence<number>): number {\n    let sum = 0;\n    let count = 0;\n    while (this.iterator.hasNext()) {\n        sum += this.iterator.next();\n        count++;\n    }\n    return count === 0\n        ? Number.NaN\n        : sum / count;\n}\n\nexport default average;\n\n\n// WEBPACK FOOTER //\n// ./src/average.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the maximum element of the sequence or `null` if sequence is empty.\n *\n * @returns {T}\n */\nfunction max<T>(this: Sequence<T>): T | null {\n    let max: T | null = null;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (max == null || item > max) {\n            max = item;\n        }\n    }\n    return max;\n}\n\nexport default max;\n\n\n// WEBPACK FOOTER //\n// ./src/max.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the maximum element by comparing the results of the given `selector` function\n * for each element of the sequence or `null` if the sequence is empty.\n *\n * @param {(value: T) => R} selector\n * @returns {T}\n */\nfunction maxBy<T, R>(this: Sequence<T>, selector: (value: T) => R): T | null {\n    let max: T | null = null;\n    let maxSelected: R | null = null;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        const value = selector(item);\n        if (maxSelected == null || value > maxSelected) {\n            maxSelected = value;\n            max = item;\n        }\n    }\n    return max;\n}\n\nexport default maxBy;\n\n\n// WEBPACK FOOTER //\n// ./src/maxBy.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the minimum element of the sequence or `null` if sequence is empty.\n *\n * @returns {T}\n */\nfunction min<T>(this: Sequence<T>): T | null {\n    let min: T | null = null;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (min == null || item < min) {\n            min = item;\n        }\n    }\n    return min;\n}\n\nexport default min;\n\n\n// WEBPACK FOOTER //\n// ./src/min.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the minimum element by comparing the results of the given `selector` function\n * for each element of the sequence or `null` if the sequence is empty.\n *\n * @param {(value: T) => R} selector\n * @returns {T}\n */\nfunction minBy<T, R>(this: Sequence<T>, selector: (value: T) => R): T | null {\n    let min: T | null = null;\n    let minSelected: R | null = null;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        const value = selector(item);\n        if (minSelected == null || value < minSelected) {\n            minSelected = value;\n            min = item;\n        }\n    }\n    return min;\n}\n\nexport default minBy;\n\n\n// WEBPACK FOOTER //\n// ./src/minBy.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the maximum element of the sequence by evaluating the given `compare`\n * function or `null` if sequence is empty.\n *\n * @returns {T}\n */\nfunction maxWith<T>(this: Sequence<T>, compare: (a: T, b: T) => number): T | null {\n    let max: T | null = null;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (max == null || compare(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n\nexport default maxWith;\n\n\n// WEBPACK FOOTER //\n// ./src/maxWith.ts","import Sequence from \"./Sequence\";\n\n/**\n * Returns the minimum element of the sequence by evaluating the given `compare`\n * function or `null` if sequence is empty.\n *\n * @returns {T}\n */\nfunction minWith<T>(this: Sequence<T>, compare: (a: T, b: T) => number): T | null {\n    let min: T | null = null;\n    while (this.iterator.hasNext()) {\n        const item = this.iterator.next();\n        if (min == null || compare(item, min) < 0) {\n            min = item;\n        }\n    }\n    return min;\n}\n\nexport default minWith;\n\n\n// WEBPACK FOOTER //\n// ./src/minWith.ts"],"sourceRoot":""}