Object.defineProperty(exports, "__esModule", { value: true });
var Sequence_1 = require("./Sequence");
var FlatMapIterator = (function () {
    function FlatMapIterator(transform, iterator) {
        this.transform = transform;
        this.iterator = iterator;
    }
    FlatMapIterator.prototype.next = function () {
        this.processNext();
        return this.current.next();
    };
    FlatMapIterator.prototype.hasNext = function () {
        this.processNext();
        return this.current != null;
    };
    FlatMapIterator.prototype.processNext = function () {
        if (this.current != null) {
            if (this.current.hasNext()) {
                return;
            }
            else {
                this.current = undefined;
            }
        }
        while (this.current == null && this.iterator.hasNext()) {
            var element = this.iterator.next();
            var sequence = this.transform(element);
            if (sequence.iterator.hasNext()) {
                this.current = sequence.iterator;
            }
        }
    };
    return FlatMapIterator;
}());
/**
 * Transforms each element into a sequence of items and returns a flat single sequence of all those items.
 *
 * @param {(value: S) => Sequence<T>} transform
 * @returns {Sequence<T>}
 */
function flatMap(transform) {
    return new Sequence_1.default(new FlatMapIterator(transform, this.iterator));
}
exports.default = flatMap;
//# sourceMappingURL=flatMap.js.map