Object.defineProperty(exports, "__esModule", { value: true });
var Sequence_1 = require("./Sequence");
var SequenceIterator_1 = require("./SequenceIterator");
var AppendIterator = (function () {
    function AppendIterator(first, second) {
        this.first = first;
        this.second = second;
    }
    AppendIterator.prototype.hasNext = function () {
        return this.first.hasNext() || this.second.hasNext();
    };
    AppendIterator.prototype.next = function () {
        return this.first.hasNext()
            ? this.first.next()
            : this.second.next();
    };
    return AppendIterator;
}());
/**
 * Appends the given `data` to the end of the sequence and returns a new sequence. Data can either be a single element,
 * an array of elements or a sequence of elements.
 *
 * @param {Sequence<T> | Array<T> | T} data
 * @returns {Sequence<T>}
 */
function plus(data) {
    if (data instanceof Sequence_1.default) {
        return new Sequence_1.default(new AppendIterator(this.iterator, data.iterator));
    }
    else if (data instanceof Array) {
        return new Sequence_1.default(new AppendIterator(this.iterator, new SequenceIterator_1.IterableIterator(data)));
    }
    else {
        return new Sequence_1.default(new AppendIterator(this.iterator, new SequenceIterator_1.IterableIterator([data])));
    }
}
exports.default = plus;
//# sourceMappingURL=plus.js.map