Object.defineProperty(exports, "__esModule", { value: true });
var Sequence_1 = require("./Sequence");
var DistinctByIterator = (function () {
    function DistinctByIterator(iterator, selector) {
        this.iterator = iterator;
        this.selector = selector;
        this.keys = [];
        this.done = false;
    }
    DistinctByIterator.prototype.hasNext = function () {
        this.processNext();
        return !this.done;
    };
    DistinctByIterator.prototype.next = function () {
        this.processNext();
        var result = this.nextItem;
        this.nextItem = undefined;
        return result;
    };
    DistinctByIterator.prototype.processNext = function () {
        if (this.nextItem !== undefined || this.done) {
            return;
        }
        while (this.iterator.hasNext()) {
            var item = this.iterator.next();
            var key = this.selector(item);
            if (this.keys.indexOf(key) < 0) {
                this.nextItem = item;
                this.keys.push(key);
                return;
            }
        }
        this.done = true;
    };
    return DistinctByIterator;
}());
/**
 * Returns a new sequence which discards all elements with duplicate items determined
 * by the given `selector`.
 *
 * @param {(item: T) => K} selector
 * @returns {Sequence<T>}
 */
function distinctBy(selector) {
    return new Sequence_1.default(new DistinctByIterator(this.iterator, selector));
}
exports.default = distinctBy;
//# sourceMappingURL=distinctBy.js.map